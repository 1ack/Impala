From f7be3b57a42a22955c6f9446ca1457660f8fa95c Mon Sep 17 00:00:00 2001
From: Jonathan Hsieh <jmhsieh@apache.org>
Date: Fri, 16 Mar 2012 21:53:15 +0000
Subject: [PATCH 04/36] HBASE-5563 Add comparison of regionId to HRegionInfo#compareTo (chunhui and jmhsieh)

git-svn-id: https://svn.apache.org/repos/asf/hbase/branches/0.92@1301780 13f79535-47bb-0310-9956-ffa450edef68

Reason: hbck prerequisite
Author: Jonathan Hsieh
Ref: CDH-4040
---
 .../java/org/apache/hadoop/hbase/HRegionInfo.java  |    9 +++++++++
 .../hadoop/hbase/master/AssignmentManager.java     |    4 +++-
 .../hadoop/hbase/regionserver/TestHRegionInfo.java |   12 ++++++++++++
 3 files changed, 24 insertions(+), 1 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java b/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java
index 74cb821..97ad5fd 100644
--- a/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java
+++ b/src/main/java/org/apache/hadoop/hbase/HRegionInfo.java
@@ -787,6 +787,15 @@ implements WritableComparable<HRegionInfo> {
       }
       return result;
     }
+
+    // regionId is usually milli timestamp -- this defines older stamps
+    // to be "smaller" than newer stamps in sort order.
+    if (this.regionId > o.regionId) {
+      return 1;
+    } else if (this.regionId < o.regionId) {
+      return -1;
+    }
+
     if (this.offLine == o.offLine)
       return 0;
     if (this.offLine == true) return -1;
diff --git a/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java b/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
index 26137ed..bfa4914 100644
--- a/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
+++ b/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
@@ -2625,8 +2625,10 @@ public class AssignmentManager extends ZooKeeperListener {
    */
   public List<HRegionInfo> getRegionsOfTable(byte[] tableName) {
     List<HRegionInfo> tableRegions = new ArrayList<HRegionInfo>();
+    // boundary needs to have table's name but regionID 0 so that it is sorted 
+    // before all table's regions.
     HRegionInfo boundary =
-      new HRegionInfo(tableName, null, null);
+      new HRegionInfo(tableName, null, null, false, 0L);
     synchronized (this.regions) {
       for (HRegionInfo regionInfo: this.regions.tailMap(boundary).keySet()) {
         if(Bytes.equals(regionInfo.getTableName(), tableName)) {
diff --git a/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java b/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java
index e33202e..ae4fe3a 100644
--- a/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java
+++ b/src/test/java/org/apache/hadoop/hbase/regionserver/TestHRegionInfo.java
@@ -130,4 +130,16 @@ public class TestHRegionInfo {
     assertTrue(HRegionInfo.ROOT_REGIONINFO.isMetaTable());
     assertTrue(HRegionInfo.FIRST_META_REGIONINFO.isMetaTable());
   }
+
+  @Test
+  public void testComparator() {
+    byte[] tablename = Bytes.toBytes("comparatorTablename");
+    byte[] empty = new byte[0];
+    HRegionInfo older = new HRegionInfo(tablename, empty, empty, false, 0L); 
+    HRegionInfo newer = new HRegionInfo(tablename, empty, empty, false, 1L); 
+    assertTrue(older.compareTo(newer) < 0);
+    assertTrue(newer.compareTo(older) > 0);
+    assertTrue(older.compareTo(older) == 0);
+    assertTrue(newer.compareTo(newer) == 0);
+  }  
 }
-- 
1.7.0.4


From b750ce207a09d91cb0c5d97aef0ad0b17d6b08e4 Mon Sep 17 00:00:00 2001
From: Carl Steinbach <carl@cloudera.com>
Date: Thu, 15 Mar 2012 18:56:33 -0700
Subject: [PATCH 40/58] HIVE-2778. TABLESAMPLE(x PERCENT) triggers NPE

Reason: Bug
Author: Navis
Ref: CDH-4610
---
 .../hadoop/hive/ql/io/CombineHiveInputFormat.java  |   13 ++++++++++++-
 1 files changed, 12 insertions(+), 1 deletions(-)

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java b/src/ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java
index a4c56a1..6eb51dd 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java
@@ -435,14 +435,16 @@ public class CombineHiveInputFormat<K extends WritableComparable, V extends Writ
     List<InputSplitShim> retLists = new ArrayList<InputSplitShim>();
     Map<String, ArrayList<InputSplitShim>> aliasToSplitList = new HashMap<String, ArrayList<InputSplitShim>>();
     Map<String, ArrayList<String>> pathToAliases = mrwork.getPathToAliases();
+    Map<String, ArrayList<String>> pathToAliasesNoScheme = removeScheme(pathToAliases);
 
     // Populate list of exclusive splits for every sampled alias
     //
     for (InputSplitShim split : splits) {
       String alias = null;
       for (Path path : split.getPaths()) {
+        boolean schemeless = path.toUri().getScheme() == null;
         List<String> l = HiveFileFormatUtils.doGetAliasesFromPath(
-            pathToAliases, path);
+            schemeless ? pathToAliasesNoScheme : pathToAliases, path);
         // a path for a split unqualified the split from being sampled if:
         // 1. it serves more than one alias
         // 2. the alias it serves is not sampled
@@ -500,6 +502,15 @@ public class CombineHiveInputFormat<K extends WritableComparable, V extends Writ
     return retLists;
   }
 
+  Map<String, ArrayList<String>> removeScheme(Map<String, ArrayList<String>> pathToAliases) {
+    Map<String, ArrayList<String>> result = new HashMap<String, ArrayList<String>>();
+    for (Map.Entry <String, ArrayList<String>> entry : pathToAliases.entrySet()) {
+      String newKey = new Path(entry.getKey()).toUri().getPath();
+      result.put(newKey, entry.getValue());
+    }
+    return result;
+  }
+
   /**
    * Create a generic Hive RecordReader than can iterate over all chunks in a
    * CombinedFileSplit.
-- 
1.7.0.4


From e3b95fd45f18df6a310d0fa407b21289bacc4061 Mon Sep 17 00:00:00 2001
From: Chip Clouderan <chip@cloudera.com>
Date: Fri, 27 Jan 2012 13:11:18 -0800
Subject: [PATCH 17/58] HIVE-2734.  Fix some nondeterministic test output

Description:    Many Hive query tests lack an ORDER BY clause, and consequently the ordering of the rows in the result set is nondeterministic:

groupby1_limit
input11_limit
input1_limit
input_lazyserde
join18_multi_distinct
join_1to1
join_casesensitive
join_filters
join_nulls
merge3
rcfile_columnar
rcfile_lazydecompress
rcfile_union
sample10
udf_sentences
union24
columnarserde_create_shortcut
combine1
global_limit

Author: Zhenxiao Luo
Ref:    CDH-4200
---
 .../clientpositive/columnarserde_create_shortcut.q |   10 +-
 ql/src/test/queries/clientpositive/combine1.q      |    2 +-
 ql/src/test/queries/clientpositive/global_limit.q  |  136 +-
 .../test/queries/clientpositive/groupby1_limit.q   |    2 +-
 ql/src/test/queries/clientpositive/input11_limit.q |    2 +-
 ql/src/test/queries/clientpositive/input1_limit.q  |    4 +-
 .../test/queries/clientpositive/input_lazyserde.q  |    8 +-
 .../queries/clientpositive/join18_multi_distinct.q |    4 +-
 ql/src/test/queries/clientpositive/join_1to1.q     |   60 +-
 .../queries/clientpositive/join_casesensitive.q    |    2 +-
 ql/src/test/queries/clientpositive/join_filters.q  |  268 +-
 ql/src/test/queries/clientpositive/join_nulls.q    |   98 +-
 ql/src/test/queries/clientpositive/merge3.q        |    6 +-
 .../test/queries/clientpositive/rcfile_columnar.q  |    2 +-
 .../queries/clientpositive/rcfile_lazydecompress.q |   12 +-
 ql/src/test/queries/clientpositive/rcfile_union.q  |    2 +-
 ql/src/test/queries/clientpositive/sample10.q      |    8 +-
 ql/src/test/queries/clientpositive/udf_sentences.q |    6 +-
 ql/src/test/queries/clientpositive/union24.q       |   12 +-
 .../columnarserde_create_shortcut.q.out            |   74 +-
 ql/src/test/results/clientpositive/combine1.q.out  |  916 +-
 .../test/results/clientpositive/global_limit.q.out | 1430 ++--
 .../results/clientpositive/groupby1_limit.q.out    |   10 +-
 .../results/clientpositive/input11_limit.q.out     |   22 +-
 .../test/results/clientpositive/input1_limit.q.out |   38 +-
 .../results/clientpositive/input_lazyserde.q.out   |   32 +-
 .../clientpositive/join18_multi_distinct.q.out     |   97 +-
 ql/src/test/results/clientpositive/join_1to1.q.out |  720 +-
 .../clientpositive/join_casesensitive.q.out        |  112 +-
 .../test/results/clientpositive/join_filters.q.out |  998 +-
 .../test/results/clientpositive/join_nulls.q.out   |  428 +-
 ql/src/test/results/clientpositive/merge3.q.out    |11682 ++++++++++----------
 .../results/clientpositive/rcfile_columnar.q.out   |   20 +-
 .../clientpositive/rcfile_lazydecompress.q.out     |   60 +-
 .../test/results/clientpositive/rcfile_union.q.out |   36 +-
 ql/src/test/results/clientpositive/sample10.q.out  |  192 +-
 .../results/clientpositive/udf_sentences.q.out     |  142 +-
 ql/src/test/results/clientpositive/union24.q.out   |  332 +-
 38 files changed, 9049 insertions(+), 8936 deletions(-)

diff --git a/src/ql/src/test/queries/clientpositive/columnarserde_create_shortcut.q b/src/ql/src/test/queries/clientpositive/columnarserde_create_shortcut.q
index a4ab664..4c3b44a 100644
--- a/src/ql/src/test/queries/clientpositive/columnarserde_create_shortcut.q
+++ b/src/ql/src/test/queries/clientpositive/columnarserde_create_shortcut.q
@@ -7,18 +7,18 @@ INSERT OVERWRITE TABLE columnarserde_create_shortcut SELECT src_thrift.lint, src
 FROM src_thrift
 INSERT OVERWRITE TABLE columnarserde_create_shortcut SELECT src_thrift.lint, src_thrift.lstring, src_thrift.mstringstring, src_thrift.aint, src_thrift.astring DISTRIBUTE BY 1;
 
-SELECT columnarserde_create_shortcut.* FROM columnarserde_create_shortcut DISTRIBUTE BY 1;
+SELECT columnarserde_create_shortcut.* FROM columnarserde_create_shortcut CLUSTER BY 1;
 
-SELECT columnarserde_create_shortcut.a[0], columnarserde_create_shortcut.b[0], columnarserde_create_shortcut.c['key2'], columnarserde_create_shortcut.d, columnarserde_create_shortcut.e FROM columnarserde_create_shortcut DISTRIBUTE BY 1;
+SELECT columnarserde_create_shortcut.a[0], columnarserde_create_shortcut.b[0], columnarserde_create_shortcut.c['key2'], columnarserde_create_shortcut.d, columnarserde_create_shortcut.e FROM columnarserde_create_shortcut CLUSTER BY 1;
 
 CREATE table columnShortcutTable (key STRING, value STRING) STORED AS RCFILE;
 
 FROM src
 INSERT OVERWRITE TABLE columnShortcutTable SELECT src.key, src.value LIMIT 10;
 describe columnShortcutTable;
-SELECT columnShortcutTable.* FROM columnShortcutTable;
+SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC, value ASC;
 
 ALTER TABLE columnShortcutTable ADD COLUMNS (c string);
-SELECT columnShortcutTable.* FROM columnShortcutTable;
+SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC, value ASC;
 ALTER TABLE columnShortcutTable REPLACE COLUMNS (key int);
-SELECT columnShortcutTable.* FROM columnShortcutTable;
+SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC;
diff --git a/src/ql/src/test/queries/clientpositive/combine1.q b/src/ql/src/test/queries/clientpositive/combine1.q
index 9ac9eb0..86abf09 100644
--- a/src/ql/src/test/queries/clientpositive/combine1.q
+++ b/src/ql/src/test/queries/clientpositive/combine1.q
@@ -13,5 +13,5 @@ insert overwrite table combine1_1
 select * from src;
 
 
-select key, value from combine1_1;
+select key, value from combine1_1 ORDER BY key ASC, value ASC;
 
diff --git a/src/ql/src/test/queries/clientpositive/global_limit.q b/src/ql/src/test/queries/clientpositive/global_limit.q
index 23d55ca..b76cf34 100644
--- a/src/ql/src/test/queries/clientpositive/global_limit.q
+++ b/src/ql/src/test/queries/clientpositive/global_limit.q
@@ -1,68 +1,68 @@
-set hive.limit.optimize.enable=true;
-set hive.limit.optimize.limit.file=2;
-
-drop table gl_tgt;
-drop table gl_src1;
-drop table gl_src2;
-drop table gl_src_part1;
-
-
-create table gl_src1 (key int, value string) stored as textfile;
-load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src1;
-load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src1;
-load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src1;
-
-
-
-
-set hive.limit.row.max.size=100;
-
--- need one file
-create table gl_tgt as select key from gl_src1 limit 1;
-select * from gl_tgt;
--- need two files
-select 'x', split(value,',') from gl_src1 limit 20;
--- no sufficient files
-select key, value, split(value,',') from gl_src1 limit 30;
--- need all files
-select key from gl_src1 limit 100;
-set hive.limit.optimize.limit.file=4;
-select key from gl_src1 limit 30;
-
--- not qualified cases
-select key, count(1) from gl_src1 group by key order by key limit 5;
-select distinct key from gl_src1 limit 10;
-select count(1) from gl_src1 limit 1;
-select transform(*) using "tr _ \n" as t from
-(select "a_a_a_a_a_a_" from gl_src1 limit 100) subq;
-select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 limit 2000;
-
--- complicated queries
-select key from (select * from (select key,value from gl_src1 limit 10)t1 )t2;
-select key from (select * from (select key,value from gl_src1)t1 limit 10)t2;
-insert overwrite table gl_tgt select key+1 from (select * from (select key,value from gl_src1)t1)t2 limit 10;
-select * from gl_tgt;
-
--- empty table
-create table gl_src2 (key int, value string) stored as textfile;
-select key from gl_src2 limit 10;
-
--- partition
-create table gl_src_part1 (key int, value string) partitioned by (p string) stored as textfile;
-load data local inpath '../data/files/srcbucket21.txt' INTO TABLE gl_src_part1 partition(p='11');
-load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src_part1 partition(p='12');
-load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src_part1 partition(p='12');
-load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src_part1 partition(p='12');
-
-select key from gl_src_part1 where p like '1%' limit 10;
-select key from gl_src_part1 where p='11' limit 10;
-select key from gl_src_part1 where p='12' limit 10;
-select key from gl_src_part1 where p='13' limit 10;
-alter table gl_src_part1 add partition (p='13');
-select key from gl_src_part1 where p='13' limit 10;
-select key from gl_src_part1 where p='12' limit 1000;
-
-drop table gl_src1;
-drop table gl_src2;
-drop table gl_src_part1;
-drop table gl_tgt
\ No newline at end of file
+set hive.limit.optimize.enable=true;
+set hive.limit.optimize.limit.file=2;
+
+drop table gl_tgt;
+drop table gl_src1;
+drop table gl_src2;
+drop table gl_src_part1;
+
+
+create table gl_src1 (key int, value string) stored as textfile;
+load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src1;
+load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src1;
+load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src1;
+
+
+
+
+set hive.limit.row.max.size=100;
+
+-- need one file
+create table gl_tgt as select key from gl_src1 limit 1;
+select * from gl_tgt ORDER BY key ASC;
+-- need two files
+select 'x' as key_new , split(value,',') as value_new from gl_src1 ORDER BY key_new ASC, value_new[0] ASC limit 20;
+-- no sufficient files
+select key, value, split(value,',') as value_new from gl_src1 ORDER BY key ASC, value ASC, value_new[0] ASC limit 30;
+-- need all files
+select key from gl_src1 ORDER BY key ASC limit 100;
+set hive.limit.optimize.limit.file=4;
+select key from gl_src1 ORDER BY key ASC limit 30;
+
+-- not qualified cases
+select key, count(1) from gl_src1 group by key ORDER BY key ASC limit 5;
+select distinct key from gl_src1 ORDER BY key ASC limit 10;
+select count(1) from gl_src1 limit 1;
+select transform(*) using "tr _ \n" as t from
+(select "a_a_a_a_a_a_" from gl_src1 limit 100) subq ORDER BY t;
+select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 ORDER BY key ASC limit 2000;
+
+-- complicated queries
+select key from (select * from (select key,value from gl_src1 limit 10)t1 )t2 ORDER BY key ASC;
+select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 ORDER BY key ASC;
+insert overwrite table gl_tgt select key+1 from (select * from (select key,value from gl_src1)t1)t2 limit 10;
+select * from gl_tgt ORDER BY key ASC;
+
+-- empty table
+create table gl_src2 (key int, value string) stored as textfile;
+select key from gl_src2 ORDER BY key ASC limit 10;
+
+-- partition
+create table gl_src_part1 (key int, value string) partitioned by (p string) stored as textfile;
+load data local inpath '../data/files/srcbucket21.txt' INTO TABLE gl_src_part1 partition(p='11');
+load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src_part1 partition(p='12');
+load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src_part1 partition(p='12');
+load data local inpath '../data/files/srcbucket20.txt' INTO TABLE gl_src_part1 partition(p='12');
+
+select key from gl_src_part1 where p like '1%' ORDER BY key ASC limit 10;
+select key from gl_src_part1 where p='11' ORDER BY key ASC limit 10;
+select key from gl_src_part1 where p='12' ORDER BY key ASC limit 10;
+select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10;
+alter table gl_src_part1 add partition (p='13');
+select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10;
+select key from gl_src_part1 where p='12' ORDER BY key ASC limit 1000;
+
+drop table gl_src1;
+drop table gl_src2;
+drop table gl_src_part1;
+drop table gl_tgt;
diff --git a/src/ql/src/test/queries/clientpositive/groupby1_limit.q b/src/ql/src/test/queries/clientpositive/groupby1_limit.q
index 0c8e12a..1b6891e 100644
--- a/src/ql/src/test/queries/clientpositive/groupby1_limit.q
+++ b/src/ql/src/test/queries/clientpositive/groupby1_limit.q
@@ -7,4 +7,4 @@ FROM src INSERT OVERWRITE TABLE dest1 SELECT src.key, sum(substr(src.value,5)) G
 
 FROM src INSERT OVERWRITE TABLE dest1 SELECT src.key, sum(substr(src.value,5)) GROUP BY src.key LIMIT 5;
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC , dest1.value ASC;
diff --git a/src/ql/src/test/queries/clientpositive/input11_limit.q b/src/ql/src/test/queries/clientpositive/input11_limit.q
index 422f188..f68398e 100644
--- a/src/ql/src/test/queries/clientpositive/input11_limit.q
+++ b/src/ql/src/test/queries/clientpositive/input11_limit.q
@@ -7,4 +7,4 @@ INSERT OVERWRITE TABLE dest1 SELECT src.key, src.value WHERE src.key < 100 LIMIT
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT src.key, src.value WHERE src.key < 100 LIMIT 10;
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC, dest1.value ASC;
diff --git a/src/ql/src/test/queries/clientpositive/input1_limit.q b/src/ql/src/test/queries/clientpositive/input1_limit.q
index 5ed59e3..71a9b8f 100644
--- a/src/ql/src/test/queries/clientpositive/input1_limit.q
+++ b/src/ql/src/test/queries/clientpositive/input1_limit.q
@@ -10,8 +10,8 @@ FROM src
 INSERT OVERWRITE TABLE dest1 SELECT src.key, src.value WHERE src.key < 100 LIMIT 10
 INSERT OVERWRITE TABLE dest2 SELECT src.key, src.value WHERE src.key < 100 LIMIT 5;
 
-SELECT dest1.* FROM dest1;
-SELECT dest2.* FROM dest2;
+SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC, dest1.value ASC;
+SELECT dest2.* FROM dest2 ORDER BY dest2.key ASC, dest2.value ASC;
 
 
 
diff --git a/src/ql/src/test/queries/clientpositive/input_lazyserde.q b/src/ql/src/test/queries/clientpositive/input_lazyserde.q
index 4adfaaf..65e678b 100644
--- a/src/ql/src/test/queries/clientpositive/input_lazyserde.q
+++ b/src/ql/src/test/queries/clientpositive/input_lazyserde.q
@@ -13,18 +13,18 @@ INSERT OVERWRITE TABLE dest1 SELECT src_thrift.lint, src_thrift.lstring, src_thr
 FROM src_thrift
 INSERT OVERWRITE TABLE dest1 SELECT src_thrift.lint, src_thrift.lstring, src_thrift.mstringstring, src_thrift.aint, src_thrift.astring DISTRIBUTE BY 1;
 
-SELECT dest1.* FROM dest1 DISTRIBUTE BY 1;
+SELECT dest1.* FROM dest1 CLUSTER BY 1;
 
-SELECT dest1.a[0], dest1.b[0], dest1.c['key2'], dest1.d, dest1.e FROM dest1 DISTRIBUTE BY 1;
+SELECT dest1.a[0], dest1.b[0], dest1.c['key2'], dest1.d, dest1.e FROM dest1 CLUSTER BY 1;
 
 DROP TABLE dest1;
 
 CREATE TABLE dest1(a array<int>) ROW FORMAT DELIMITED FIELDS TERMINATED BY '1' ESCAPED BY '\\';
 INSERT OVERWRITE TABLE dest1 SELECT src_thrift.lint FROM src_thrift DISTRIBUTE BY 1;
-SELECT * from dest1;
+SELECT * from dest1 ORDER BY 1 ASC;
 DROP TABLE dest1;
 
 CREATE TABLE dest1(a map<string,string>) ROW FORMAT DELIMITED FIELDS TERMINATED BY '1' ESCAPED BY '\\';
 INSERT OVERWRITE TABLE dest1 SELECT src_thrift.mstringstring FROM src_thrift DISTRIBUTE BY 1;
-SELECT * from dest1;
+SELECT * from dest1 ORDER BY 1 ASC;
 
diff --git a/src/ql/src/test/queries/clientpositive/join18_multi_distinct.q b/src/ql/src/test/queries/clientpositive/join18_multi_distinct.q
index e9637de..eb4e46a 100644
--- a/src/ql/src/test/queries/clientpositive/join18_multi_distinct.q
+++ b/src/ql/src/test/queries/clientpositive/join18_multi_distinct.q
@@ -10,7 +10,7 @@ EXPLAIN
   count(distinct(src2.key)) AS value2
   FROM src1 src2 group by src2.key
  ) b 
- ON (a.key = b.key);
+ ON (a.key = b.key) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value1 ASC, b.value2 ASC;
 
  SELECT a.key, a.value, b.key, b.value1,  b.value2
  FROM 
@@ -23,4 +23,4 @@ EXPLAIN
   count(distinct(src2.key)) AS value2
   FROM src1 src2 group by src2.key
  ) b 
- ON (a.key = b.key);
+ ON (a.key = b.key) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value1 ASC, b.value2 ASC;
diff --git a/src/ql/src/test/queries/clientpositive/join_1to1.q b/src/ql/src/test/queries/clientpositive/join_1to1.q
index 31a22ce..b403814 100644
--- a/src/ql/src/test/queries/clientpositive/join_1to1.q
+++ b/src/ql/src/test/queries/clientpositive/join_1to1.q
@@ -10,25 +10,25 @@ set hive.outerjoin.supports.filters=false;
 
 set hive.join.emit.interval=5;
 
-SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66;
+SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
 
 set hive.join.emit.interval=2;
-SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66;
+SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
 
 set hive.join.emit.interval=1;
-SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66;
+SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
 
 
 
@@ -36,23 +36,23 @@ set hive.outerjoin.supports.filters=true;
 
 set hive.join.emit.interval=5;
 
-SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66;
+SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
 
 set hive.join.emit.interval=2;
-SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66;
+SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
 
 set hive.join.emit.interval=1;
-SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2;
-SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66;
+SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
+SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC;
 
diff --git a/src/ql/src/test/queries/clientpositive/join_casesensitive.q b/src/ql/src/test/queries/clientpositive/join_casesensitive.q
index cd4344b..a9b69c5 100644
--- a/src/ql/src/test/queries/clientpositive/join_casesensitive.q
+++ b/src/ql/src/test/queries/clientpositive/join_casesensitive.q
@@ -5,4 +5,4 @@ LOAD DATA LOCAL INPATH '../data/files/in5.txt' INTO TABLE joinone;
 CREATE TABLE joinTwo(key1 int, key2 int, value int);
 LOAD DATA LOCAL INPATH '../data/files/in6.txt' INTO TABLE joinTwo;
 
-SELECT * FROM joinone JOIN joinTwo ON(joinone.key2=joinTwo.key2);
+SELECT * FROM joinone JOIN joinTwo ON(joinone.key2=joinTwo.key2) ORDER BY joinone.key1 ASC, joinone.key2 ASC, joinone.value ASC, joinTwo.key1 ASC, joinTwo.key2 ASC, joinTwo.value ASC;
diff --git a/src/ql/src/test/queries/clientpositive/join_filters.q b/src/ql/src/test/queries/clientpositive/join_filters.q
index 00e1ee3..d54aa95 100644
--- a/src/ql/src/test/queries/clientpositive/join_filters.q
+++ b/src/ql/src/test/queries/clientpositive/join_filters.q
@@ -1,57 +1,57 @@
 CREATE TABLE myinput1(key int, value int);
 LOAD DATA LOCAL INPATH '../data/files/in3.txt' INTO TABLE myinput1;
 
-SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value;
-SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value;
-
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
+SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
 CREATE TABLE smb_input1(key int, value int) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS; 
 CREATE TABLE smb_input2(key int, value int) CLUSTERED BY (value) SORTED BY (value) INTO 2 BUCKETS; 
@@ -64,92 +64,92 @@ SET hive.optimize.bucketmapjoin = true;
 SET hive.optimize.bucketmapjoin.sortedmerge = true;
 SET hive.input.format = org.apache.hadoop.hive.ql.io.BucketizedHiveInputFormat;
 
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
 SET hive.outerjoin.supports.filters = false;
 
-SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value;
-SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value);
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value;
-
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value;
-
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key;
-
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value;
-
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value;
+SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC;
+
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
diff --git a/src/ql/src/test/queries/clientpositive/join_nulls.q b/src/ql/src/test/queries/clientpositive/join_nulls.q
index e287d2a..4ff6071 100644
--- a/src/ql/src/test/queries/clientpositive/join_nulls.q
+++ b/src/ql/src/test/queries/clientpositive/join_nulls.q
@@ -1,44 +1,44 @@
 CREATE TABLE myinput1(key int, value int);
 LOAD DATA LOCAL INPATH '../data/files/in1.txt' INTO TABLE myinput1;
 
-SELECT * FROM myinput1 a JOIN myinput1 b;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value;
-SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key;
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value;
-SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value;
-SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key;
+SELECT * FROM myinput1 a JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
-SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value);
-SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value);
-SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value;
+SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key;
-SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key;
-SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
 CREATE TABLE smb_input1(key int, value int) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS; 
 CREATE TABLE smb_input2(key int, value int) CLUSTERED BY (value) SORTED BY (value) INTO 2 BUCKETS; 
@@ -51,18 +51,18 @@ SET hive.optimize.bucketmapJOIN = true;
 SET hive.optimize.bucketmapJOIN.sortedmerge = true;
 SET hive.input.format = org.apache.hadoop.hive.ql.io.BucketizedHiveInputFormat;
 
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY b.key, b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key, a.value;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key, a.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY b.key, b.value;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
 
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.value;
-SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY b.key, b.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.value;
-SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key, a.value;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
+SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC;
diff --git a/src/ql/src/test/queries/clientpositive/merge3.q b/src/ql/src/test/queries/clientpositive/merge3.q
index 7ba3882..aacd0cd 100644
--- a/src/ql/src/test/queries/clientpositive/merge3.q
+++ b/src/ql/src/test/queries/clientpositive/merge3.q
@@ -20,7 +20,7 @@ select key, value from merge_src;
 create table merge_src2 as 
 select key, value from merge_src;
 
-select * from merge_src2;
+select * from merge_src2 ORDER BY key ASC, value ASC;
 describe formatted merge_src2;
 
 create table merge_src_part2 like merge_src_part;
@@ -37,7 +37,7 @@ where ds is not null;
 
 show partitions merge_src_part2;
 
-select * from merge_src_part2 where ds is not null;
+select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC;
 
 drop table merge_src_part2;
 
@@ -54,4 +54,4 @@ select key, value, ds;
 
 show partitions merge_src_part2;
 
-select * from merge_src_part2 where ds is not null;
+select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC;
diff --git a/src/ql/src/test/queries/clientpositive/rcfile_columnar.q b/src/ql/src/test/queries/clientpositive/rcfile_columnar.q
index 67b0c12..0178e53 100644
--- a/src/ql/src/test/queries/clientpositive/rcfile_columnar.q
+++ b/src/ql/src/test/queries/clientpositive/rcfile_columnar.q
@@ -10,6 +10,6 @@ FROM src
 INSERT OVERWRITE TABLE columnTable SELECT src.key, src.value LIMIT 10;
 describe columnTable;
 
-SELECT columnTable.* FROM columnTable;
+SELECT columnTable.* FROM columnTable ORDER BY key ASC, value ASC;
 
 
diff --git a/src/ql/src/test/queries/clientpositive/rcfile_lazydecompress.q b/src/ql/src/test/queries/clientpositive/rcfile_lazydecompress.q
index 108cc70..7f55d10 100644
--- a/src/ql/src/test/queries/clientpositive/rcfile_lazydecompress.q
+++ b/src/ql/src/test/queries/clientpositive/rcfile_lazydecompress.q
@@ -4,11 +4,11 @@ CREATE table rcfileTableLazyDecompress (key STRING, value STRING) STORED AS RCFi
 FROM src
 INSERT OVERWRITE TABLE rcfileTableLazyDecompress SELECT src.key, src.value LIMIT 10;
 
-SELECT key, value FROM rcfileTableLazyDecompress where key > 238;
+SELECT key, value FROM rcfileTableLazyDecompress where key > 238 ORDER BY key ASC, value ASC;
 
-SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400;
+SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400 ORDER BY key ASC, value ASC;
 
-SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key;
+SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key ORDER BY key ASC;
 
 set mapred.output.compress=true;
 set hive.exec.compress.output=true;
@@ -16,11 +16,11 @@ set hive.exec.compress.output=true;
 FROM src
 INSERT OVERWRITE TABLE rcfileTableLazyDecompress SELECT src.key, src.value LIMIT 10;
 
-SELECT key, value FROM rcfileTableLazyDecompress where key > 238;
+SELECT key, value FROM rcfileTableLazyDecompress where key > 238 ORDER BY key ASC, value ASC;
 
-SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400;
+SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400 ORDER BY key ASC, value ASC;
 
-SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key;
+SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key ORDER BY key ASC;
 
 set mapred.output.compress=false;
 set hive.exec.compress.output=false;
diff --git a/src/ql/src/test/queries/clientpositive/rcfile_union.q b/src/ql/src/test/queries/clientpositive/rcfile_union.q
index 4dc459c..fc8c750 100644
--- a/src/ql/src/test/queries/clientpositive/rcfile_union.q
+++ b/src/ql/src/test/queries/clientpositive/rcfile_union.q
@@ -10,5 +10,5 @@ INSERT OVERWRITE TABLE rcfile_unionTable SELECT src.key, src.value LIMIT 10;
 SELECT * FROM (
 SELECT b AS cola FROM rcfile_unionTable
 UNION ALL
-SELECT c AS cola FROM rcfile_unionTable) s;
+SELECT c AS cola FROM rcfile_unionTable) s ORDER BY cola ASC;
 
diff --git a/src/ql/src/test/queries/clientpositive/sample10.q b/src/ql/src/test/queries/clientpositive/sample10.q
index c04a389..1c6695c 100644
--- a/src/ql/src/test/queries/clientpositive/sample10.q
+++ b/src/ql/src/test/queries/clientpositive/sample10.q
@@ -14,12 +14,12 @@ create table srcpartbucket (key string, value string) partitioned by (ds string,
 insert overwrite table srcpartbucket partition(ds, hr) select * from srcpart where ds is not null and key < 10;
 
 explain extended
-select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds;
+select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC;
 
-select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds;
+select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC;
 
-select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds;
+select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds ORDER BY ds ASC;
 
-select * from srcpartbucket where ds is not null;
+select * from srcpartbucket where ds is not null ORDER BY key ASC, value ASC, ds ASC, hr ASC;
 
 
diff --git a/src/ql/src/test/queries/clientpositive/udf_sentences.q b/src/ql/src/test/queries/clientpositive/udf_sentences.q
index 8021213..f29cde3 100644
--- a/src/ql/src/test/queries/clientpositive/udf_sentences.q
+++ b/src/ql/src/test/queries/clientpositive/udf_sentences.q
@@ -4,7 +4,7 @@ INSERT OVERWRITE TABLE sent_tmp
 SELECT explode(sentences(unhex("486976652065737420756E20657863656C6C656E74206F7574696C20706F7572206C65732072657175C3AA74657320646520646F6E6EC3A965732C20657420706575742DC3AA74726520706C757320706F6C7976616C656E7420717565206C612074726164756374696F6E206175746F6D61746971756521206C6120706F6E6374756174696F6E206D756C7469706C65732C206465732070687261736573206D616C20666F726DC3A96573202E2E2E20636F6E667573696F6E202D20657420706F757274616E742063652055444620666F6E6374696F6E6E6520656E636F72652121"), "fr")) AS val FROM src LIMIT 3;
 INSERT OVERWRITE TABLE sent_tmp2
 SELECT explode(val) AS val FROM sent_tmp;
-SELECT hex(val) FROM sent_tmp2;
+SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC;
 
 DROP TABLE sent_tmp;
 DROP TABLE sent_tmp2;
@@ -15,8 +15,8 @@ INSERT OVERWRITE TABLE sent_tmp
 SELECT explode(sentences(unhex("48697665206973742065696E2061757367657A656963686E65746573205765726B7A6575672066C3BC7220646965204162667261676520766F6E20446174656E2C20756E64207669656C6C6569636874207669656C736569746967657220616C7320646965206D61736368696E656C6C6520C39C6265727365747A756E6721204D756C7469706C652C207363686C6563687420676562696C646574656E2053C3A4747A65202E2E2E205665727765636873656C756E6720496E74657270756E6B74696F6E202D20756E6420646F636820697374206469657365205544462066756E6B74696F6E6965727420696D6D6572206E6F63682121"), "de")) AS val FROM src LIMIT 3;
 INSERT OVERWRITE TABLE sent_tmp2
 SELECT explode(val) AS val FROM sent_tmp;
-SELECT hex(val) FROM sent_tmp2;
+SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC;
 
 
 
-SELECT sentences("Hive is an excellent tool for data querying\; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") FROM src LIMIT 1;
+SELECT sentences("Hive is an excellent tool for data querying\; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") AS value FROM src ORDER BY value ASC LIMIT 1;
diff --git a/src/ql/src/test/queries/clientpositive/union24.q b/src/ql/src/test/queries/clientpositive/union24.q
index 2be15a9..e8f0e14 100644
--- a/src/ql/src/test/queries/clientpositive/union24.q
+++ b/src/ql/src/test/queries/clientpositive/union24.q
@@ -18,7 +18,7 @@ select s.key, s.count from (
   union all
   select key, count(1) as count from src5 where key < 10 group by key
 )s
-order by s.key;
+order by s.key ASC, s.count ASC;
 
 select s.key, s.count from (
   select key, count from src2  where key < 10
@@ -29,7 +29,7 @@ select s.key, s.count from (
   union all
   select key, count(1) as count from src5 where key < 10 group by key
 )s
-order by s.key;
+order by s.key ASC, s.count ASC;
 
 explain extended
 select s.key, s.count from (
@@ -39,7 +39,7 @@ select s.key, s.count from (
   union all
   select a.key as key, b.count as count from src4 a join src5 b on a.key=b.key where a.key < 10
 )s
-order by s.key;
+order by s.key ASC, s.count ASC;
 
 select s.key, s.count from (
   select key, count from src2  where key < 10
@@ -48,7 +48,7 @@ select s.key, s.count from (
   union all
   select a.key as key, b.count as count from src4 a join src5 b on a.key=b.key where a.key < 10
 )s
-order by s.key;
+order by s.key ASC, s.count ASC;
 
 explain extended
 select s.key, s.count from (
@@ -58,7 +58,7 @@ select s.key, s.count from (
   union all
   select a.key as key, count(1) as count from src4 a join src5 b on a.key=b.key where a.key < 10 group by a.key
 )s
-order by s.key;
+order by s.key ASC, s.count ASC;
 
 select s.key, s.count from (
   select key, count from src2  where key < 10
@@ -67,4 +67,4 @@ select s.key, s.count from (
   union all
   select a.key as key, count(1) as count from src4 a join src5 b on a.key=b.key where a.key < 10 group by a.key
 )s
-order by s.key;
+order by s.key ASC, s.count ASC;
diff --git a/src/ql/src/test/results/clientpositive/columnarserde_create_shortcut.q.out b/src/ql/src/test/results/clientpositive/columnarserde_create_shortcut.q.out
index 1d183fb..cec553a 100644
--- a/src/ql/src/test/results/clientpositive/columnarserde_create_shortcut.q.out
+++ b/src/ql/src/test/results/clientpositive/columnarserde_create_shortcut.q.out
@@ -96,14 +96,14 @@ POSTHOOK: Lineage: columnarserde_create_shortcut.b SIMPLE [(src_thrift)src_thrif
 POSTHOOK: Lineage: columnarserde_create_shortcut.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.d SIMPLE [(src_thrift)src_thrift.FieldSchema(name:aint, type:int, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
-PREHOOK: query: SELECT columnarserde_create_shortcut.* FROM columnarserde_create_shortcut DISTRIBUTE BY 1
+PREHOOK: query: SELECT columnarserde_create_shortcut.* FROM columnarserde_create_shortcut CLUSTER BY 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@columnarserde_create_shortcut
-PREHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-44_384_8123886521601664581/-mr-10000
-POSTHOOK: query: SELECT columnarserde_create_shortcut.* FROM columnarserde_create_shortcut DISTRIBUTE BY 1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-00-50_280_7690214850008371713/-mr-10000
+POSTHOOK: query: SELECT columnarserde_create_shortcut.* FROM columnarserde_create_shortcut CLUSTER BY 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@columnarserde_create_shortcut
-POSTHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-44_384_8123886521601664581/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-00-50_280_7690214850008371713/-mr-10000
 POSTHOOK: Lineage: columnarserde_create_shortcut.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
@@ -120,14 +120,14 @@ POSTHOOK: Lineage: columnarserde_create_shortcut.e SIMPLE [(src_thrift)src_thrif
 [8,16,24]	["80","800","8000"]	{"key_8":"value_8"}	1638581578	record_8
 [9,18,27]	["90","900","9000"]	{"key_9":"value_9"}	336964413	record_9
 null	null	null	0	NULL
-PREHOOK: query: SELECT columnarserde_create_shortcut.a[0], columnarserde_create_shortcut.b[0], columnarserde_create_shortcut.c['key2'], columnarserde_create_shortcut.d, columnarserde_create_shortcut.e FROM columnarserde_create_shortcut DISTRIBUTE BY 1
+PREHOOK: query: SELECT columnarserde_create_shortcut.a[0], columnarserde_create_shortcut.b[0], columnarserde_create_shortcut.c['key2'], columnarserde_create_shortcut.d, columnarserde_create_shortcut.e FROM columnarserde_create_shortcut CLUSTER BY 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@columnarserde_create_shortcut
-PREHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-47_468_6815245334901150592/-mr-10000
-POSTHOOK: query: SELECT columnarserde_create_shortcut.a[0], columnarserde_create_shortcut.b[0], columnarserde_create_shortcut.c['key2'], columnarserde_create_shortcut.d, columnarserde_create_shortcut.e FROM columnarserde_create_shortcut DISTRIBUTE BY 1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-00-55_084_1468026231997250188/-mr-10000
+POSTHOOK: query: SELECT columnarserde_create_shortcut.a[0], columnarserde_create_shortcut.b[0], columnarserde_create_shortcut.c['key2'], columnarserde_create_shortcut.d, columnarserde_create_shortcut.e FROM columnarserde_create_shortcut CLUSTER BY 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@columnarserde_create_shortcut
-POSTHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-47_468_6815245334901150592/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-00-55_084_1468026231997250188/-mr-10000
 POSTHOOK: Lineage: columnarserde_create_shortcut.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
@@ -184,14 +184,14 @@ POSTHOOK: Lineage: columnshortcuttable.key SIMPLE [(src)src.FieldSchema(name:key
 POSTHOOK: Lineage: columnshortcuttable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 key	string	
 value	string	
-PREHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable
+PREHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@columnshortcuttable
-PREHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-54_986_5216858820252818300/-mr-10000
-POSTHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-06_293_7906598066675435316/-mr-10000
+POSTHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@columnshortcuttable
-POSTHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-54_986_5216858820252818300/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-06_293_7906598066675435316/-mr-10000
 POSTHOOK: Lineage: columnarserde_create_shortcut.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
@@ -199,16 +199,16 @@ POSTHOOK: Lineage: columnarserde_create_shortcut.d SIMPLE [(src_thrift)src_thrif
 POSTHOOK: Lineage: columnarserde_create_shortcut.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
 POSTHOOK: Lineage: columnshortcuttable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: columnshortcuttable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-238	val_238
-86	val_86
-311	val_311
-27	val_27
 165	val_165
-409	val_409
+238	val_238
 255	val_255
+27	val_27
 278	val_278
-98	val_98
+311	val_311
+409	val_409
 484	val_484
+86	val_86
+98	val_98
 PREHOOK: query: ALTER TABLE columnShortcutTable ADD COLUMNS (c string)
 PREHOOK: type: ALTERTABLE_ADDCOLS
 PREHOOK: Input: default@columnshortcuttable
@@ -224,14 +224,14 @@ POSTHOOK: Lineage: columnarserde_create_shortcut.d SIMPLE [(src_thrift)src_thrif
 POSTHOOK: Lineage: columnarserde_create_shortcut.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
 POSTHOOK: Lineage: columnshortcuttable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: columnshortcuttable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable
+PREHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@columnshortcuttable
-PREHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-55_436_7632412543773667908/-mr-10000
-POSTHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-11_384_8597713999626989001/-mr-10000
+POSTHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@columnshortcuttable
-POSTHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-55_436_7632412543773667908/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-11_384_8597713999626989001/-mr-10000
 POSTHOOK: Lineage: columnarserde_create_shortcut.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
@@ -239,16 +239,16 @@ POSTHOOK: Lineage: columnarserde_create_shortcut.d SIMPLE [(src_thrift)src_thrif
 POSTHOOK: Lineage: columnarserde_create_shortcut.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
 POSTHOOK: Lineage: columnshortcuttable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: columnshortcuttable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-238	val_238	NULL
-86	val_86	NULL
-311	val_311	NULL
-27	val_27	NULL
 165	val_165	NULL
-409	val_409	NULL
+238	val_238	NULL
 255	val_255	NULL
+27	val_27	NULL
 278	val_278	NULL
-98	val_98	NULL
+311	val_311	NULL
+409	val_409	NULL
 484	val_484	NULL
+86	val_86	NULL
+98	val_98	NULL
 PREHOOK: query: ALTER TABLE columnShortcutTable REPLACE COLUMNS (key int)
 PREHOOK: type: ALTERTABLE_REPLACECOLS
 PREHOOK: Input: default@columnshortcuttable
@@ -264,14 +264,14 @@ POSTHOOK: Lineage: columnarserde_create_shortcut.d SIMPLE [(src_thrift)src_thrif
 POSTHOOK: Lineage: columnarserde_create_shortcut.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
 POSTHOOK: Lineage: columnshortcuttable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: columnshortcuttable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable
+PREHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@columnshortcuttable
-PREHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-55_878_6423652560204519964/-mr-10000
-POSTHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-16_330_3280460863254929304/-mr-10000
+POSTHOOK: query: SELECT columnShortcutTable.* FROM columnShortcutTable ORDER BY key ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@columnshortcuttable
-POSTHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_11-34-55_878_6423652560204519964/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-16_330_3280460863254929304/-mr-10000
 POSTHOOK: Lineage: columnarserde_create_shortcut.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
 POSTHOOK: Lineage: columnarserde_create_shortcut.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
@@ -279,13 +279,13 @@ POSTHOOK: Lineage: columnarserde_create_shortcut.d SIMPLE [(src_thrift)src_thrif
 POSTHOOK: Lineage: columnarserde_create_shortcut.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
 POSTHOOK: Lineage: columnshortcuttable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: columnshortcuttable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-238
-86
-311
 27
+86
+98
 165
-409
+238
 255
 278
-98
+311
+409
 484
diff --git a/src/ql/src/test/results/clientpositive/combine1.q.out b/src/ql/src/test/results/clientpositive/combine1.q.out
index f2a28c0..86de597 100644
--- a/src/ql/src/test/results/clientpositive/combine1.q.out
+++ b/src/ql/src/test/results/clientpositive/combine1.q.out
@@ -15,513 +15,513 @@ POSTHOOK: Input: default@src
 POSTHOOK: Output: default@combine1_1
 POSTHOOK: Lineage: combine1_1.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: combine1_1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: select key, value from combine1_1
+PREHOOK: query: select key, value from combine1_1 ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@combine1_1
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-17-52_177_5648847098652116494/10000
-POSTHOOK: query: select key, value from combine1_1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-44_769_7698103963350866456/-mr-10000
+POSTHOOK: query: select key, value from combine1_1 ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@combine1_1
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-17-52_177_5648847098652116494/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-01-44_769_7698103963350866456/-mr-10000
 POSTHOOK: Lineage: combine1_1.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: combine1_1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-238	val_238
-86	val_86
-311	val_311
-27	val_27
-165	val_165
-409	val_409
-255	val_255
-278	val_278
-98	val_98
-484	val_484
-265	val_265
-193	val_193
-401	val_401
-150	val_150
-273	val_273
-224	val_224
-369	val_369
-66	val_66
+0	val_0
+0	val_0
+0	val_0
+10	val_10
+100	val_100
+100	val_100
+103	val_103
+103	val_103
+104	val_104
+104	val_104
+105	val_105
+11	val_11
+111	val_111
+113	val_113
+113	val_113
+114	val_114
+116	val_116
+118	val_118
+118	val_118
+119	val_119
+119	val_119
+119	val_119
+12	val_12
+12	val_12
+120	val_120
+120	val_120
+125	val_125
+125	val_125
+126	val_126
 128	val_128
-213	val_213
-146	val_146
-406	val_406
-429	val_429
-374	val_374
-152	val_152
-469	val_469
+128	val_128
+128	val_128
+129	val_129
+129	val_129
+131	val_131
+133	val_133
+134	val_134
+134	val_134
+136	val_136
+137	val_137
+137	val_137
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+143	val_143
 145	val_145
-495	val_495
-37	val_37
-327	val_327
-281	val_281
-277	val_277
-209	val_209
+146	val_146
+146	val_146
+149	val_149
+149	val_149
 15	val_15
-82	val_82
-403	val_403
-166	val_166
-417	val_417
-430	val_430
-252	val_252
-292	val_292
-219	val_219
-287	val_287
+15	val_15
+150	val_150
+152	val_152
+152	val_152
 153	val_153
-193	val_193
-338	val_338
-446	val_446
-459	val_459
-394	val_394
-237	val_237
-482	val_482
-174	val_174
-413	val_413
-494	val_494
-207	val_207
-199	val_199
-466	val_466
-208	val_208
-174	val_174
-399	val_399
-396	val_396
-247	val_247
-417	val_417
-489	val_489
+155	val_155
+156	val_156
+157	val_157
+158	val_158
+160	val_160
 162	val_162
-377	val_377
-397	val_397
-309	val_309
-365	val_365
-266	val_266
-439	val_439
-342	val_342
-367	val_367
-325	val_325
+163	val_163
+164	val_164
+164	val_164
+165	val_165
+165	val_165
+166	val_166
 167	val_167
-195	val_195
-475	val_475
+167	val_167
+167	val_167
+168	val_168
+169	val_169
+169	val_169
+169	val_169
+169	val_169
 17	val_17
-113	val_113
-155	val_155
-203	val_203
-339	val_339
-0	val_0
-455	val_455
-128	val_128
-311	val_311
-316	val_316
-57	val_57
-302	val_302
-205	val_205
-149	val_149
-438	val_438
-345	val_345
-129	val_129
 170	val_170
+172	val_172
+172	val_172
+174	val_174
+174	val_174
+175	val_175
+175	val_175
+176	val_176
+176	val_176
+177	val_177
+178	val_178
+179	val_179
+179	val_179
+18	val_18
+18	val_18
+180	val_180
+181	val_181
+183	val_183
+186	val_186
+187	val_187
+187	val_187
+187	val_187
+189	val_189
+19	val_19
+190	val_190
+191	val_191
+191	val_191
+192	val_192
+193	val_193
+193	val_193
+193	val_193
+194	val_194
+195	val_195
+195	val_195
+196	val_196
+197	val_197
+197	val_197
+199	val_199
+199	val_199
+199	val_199
+2	val_2
 20	val_20
-489	val_489
-157	val_157
-378	val_378
-221	val_221
-92	val_92
-111	val_111
-47	val_47
-72	val_72
-4	val_4
-280	val_280
-35	val_35
-427	val_427
-277	val_277
+200	val_200
+200	val_200
+201	val_201
+202	val_202
+203	val_203
+203	val_203
+205	val_205
+205	val_205
+207	val_207
+207	val_207
 208	val_208
-356	val_356
-399	val_399
-169	val_169
-382	val_382
-498	val_498
-125	val_125
-386	val_386
-437	val_437
-469	val_469
-192	val_192
-286	val_286
-187	val_187
-176	val_176
-54	val_54
-459	val_459
-51	val_51
-138	val_138
-103	val_103
-239	val_239
+208	val_208
+208	val_208
+209	val_209
+209	val_209
 213	val_213
+213	val_213
+214	val_214
 216	val_216
-430	val_430
-278	val_278
-176	val_176
-289	val_289
+216	val_216
+217	val_217
+217	val_217
+218	val_218
+219	val_219
+219	val_219
 221	val_221
-65	val_65
-318	val_318
-332	val_332
-311	val_311
-275	val_275
-137	val_137
-241	val_241
-83	val_83
-333	val_333
-180	val_180
-284	val_284
-12	val_12
+221	val_221
+222	val_222
+223	val_223
+223	val_223
+224	val_224
+224	val_224
+226	val_226
+228	val_228
+229	val_229
+229	val_229
 230	val_230
-181	val_181
-67	val_67
-260	val_260
-404	val_404
-384	val_384
-489	val_489
-353	val_353
-373	val_373
-272	val_272
-138	val_138
-217	val_217
-84	val_84
-348	val_348
-466	val_466
-58	val_58
-8	val_8
-411	val_411
 230	val_230
-208	val_208
-348	val_348
+230	val_230
+230	val_230
+230	val_230
+233	val_233
+233	val_233
+235	val_235
+237	val_237
+237	val_237
+238	val_238
+238	val_238
+239	val_239
+239	val_239
 24	val_24
-463	val_463
-431	val_431
-179	val_179
-172	val_172
-42	val_42
-129	val_129
-158	val_158
-119	val_119
-496	val_496
-0	val_0
-322	val_322
-197	val_197
-468	val_468
-393	val_393
-454	val_454
-100	val_100
-298	val_298
-199	val_199
-191	val_191
-418	val_418
-96	val_96
+24	val_24
+241	val_241
+242	val_242
+242	val_242
+244	val_244
+247	val_247
+248	val_248
+249	val_249
+252	val_252
+255	val_255
+255	val_255
+256	val_256
+256	val_256
+257	val_257
+258	val_258
 26	val_26
-165	val_165
-327	val_327
-230	val_230
-205	val_205
-120	val_120
-131	val_131
-51	val_51
-404	val_404
-43	val_43
-436	val_436
-156	val_156
-469	val_469
-468	val_468
-308	val_308
-95	val_95
-196	val_196
-288	val_288
-481	val_481
-457	val_457
-98	val_98
+26	val_26
+260	val_260
+262	val_262
+263	val_263
+265	val_265
+265	val_265
+266	val_266
+27	val_27
+272	val_272
+272	val_272
+273	val_273
+273	val_273
+273	val_273
+274	val_274
+275	val_275
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+278	val_278
+278	val_278
+28	val_28
+280	val_280
+280	val_280
+281	val_281
+281	val_281
 282	val_282
-197	val_197
-187	val_187
-318	val_318
-318	val_318
-409	val_409
-470	val_470
-137	val_137
-369	val_369
-316	val_316
-169	val_169
-413	val_413
-85	val_85
-77	val_77
-0	val_0
-490	val_490
-87	val_87
-364	val_364
-179	val_179
-118	val_118
-134	val_134
-395	val_395
 282	val_282
-138	val_138
-238	val_238
-419	val_419
-15	val_15
-118	val_118
-72	val_72
-90	val_90
-307	val_307
-19	val_19
-435	val_435
-10	val_10
-277	val_277
-273	val_273
+283	val_283
+284	val_284
+285	val_285
+286	val_286
+287	val_287
+288	val_288
+288	val_288
+289	val_289
+291	val_291
+292	val_292
+296	val_296
+298	val_298
+298	val_298
+298	val_298
+30	val_30
+302	val_302
+305	val_305
 306	val_306
-224	val_224
+307	val_307
+307	val_307
+308	val_308
 309	val_309
-389	val_389
+309	val_309
+310	val_310
+311	val_311
+311	val_311
+311	val_311
+315	val_315
+316	val_316
+316	val_316
+316	val_316
+317	val_317
+317	val_317
+318	val_318
+318	val_318
+318	val_318
+321	val_321
+321	val_321
+322	val_322
+322	val_322
+323	val_323
+325	val_325
+325	val_325
 327	val_327
-242	val_242
-369	val_369
-392	val_392
-272	val_272
+327	val_327
+327	val_327
+33	val_33
 331	val_331
-401	val_401
-242	val_242
-452	val_452
-177	val_177
-226	val_226
-5	val_5
-497	val_497
-402	val_402
-396	val_396
-317	val_317
-395	val_395
-58	val_58
-35	val_35
+331	val_331
+332	val_332
+333	val_333
+333	val_333
+335	val_335
 336	val_336
-95	val_95
-11	val_11
-168	val_168
+338	val_338
+339	val_339
 34	val_34
-229	val_229
-233	val_233
-143	val_143
-472	val_472
-322	val_322
-498	val_498
-160	val_160
-195	val_195
-42	val_42
-321	val_321
-430	val_430
-119	val_119
-489	val_489
-458	val_458
-78	val_78
-76	val_76
-41	val_41
-223	val_223
-492	val_492
-149	val_149
-449	val_449
-218	val_218
-228	val_228
-138	val_138
-453	val_453
-30	val_30
-209	val_209
-64	val_64
-468	val_468
-76	val_76
-74	val_74
+341	val_341
+342	val_342
 342	val_342
-69	val_69
-230	val_230
-33	val_33
-368	val_368
-103	val_103
-296	val_296
-113	val_113
-216	val_216
-367	val_367
 344	val_344
-167	val_167
-274	val_274
-219	val_219
-239	val_239
-485	val_485
-116	val_116
-223	val_223
-256	val_256
-263	val_263
-70	val_70
-487	val_487
-480	val_480
-401	val_401
-288	val_288
-191	val_191
-5	val_5
-244	val_244
-438	val_438
-128	val_128
-467	val_467
-432	val_432
-202	val_202
-316	val_316
-229	val_229
-469	val_469
-463	val_463
-280	val_280
-2	val_2
+344	val_344
+345	val_345
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
 35	val_35
-283	val_283
-331	val_331
-235	val_235
-80	val_80
-44	val_44
-193	val_193
-321	val_321
-335	val_335
-104	val_104
-466	val_466
+35	val_35
+35	val_35
+351	val_351
+353	val_353
+353	val_353
+356	val_356
+360	val_360
+362	val_362
+364	val_364
+365	val_365
 366	val_366
-175	val_175
+367	val_367
+367	val_367
+368	val_368
+369	val_369
+369	val_369
+369	val_369
+37	val_37
+37	val_37
+373	val_373
+374	val_374
+375	val_375
+377	val_377
+378	val_378
+379	val_379
+382	val_382
+382	val_382
+384	val_384
+384	val_384
+384	val_384
+386	val_386
+389	val_389
+392	val_392
+393	val_393
+394	val_394
+395	val_395
+395	val_395
+396	val_396
+396	val_396
+396	val_396
+397	val_397
+397	val_397
+399	val_399
+399	val_399
+4	val_4
+400	val_400
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+402	val_402
 403	val_403
-483	val_483
-53	val_53
-105	val_105
-257	val_257
+403	val_403
+403	val_403
+404	val_404
+404	val_404
 406	val_406
-409	val_409
-190	val_190
 406	val_406
-401	val_401
-114	val_114
-258	val_258
-90	val_90
-203	val_203
-262	val_262
-348	val_348
+406	val_406
+406	val_406
+407	val_407
+409	val_409
+409	val_409
+409	val_409
+41	val_41
+411	val_411
+413	val_413
+413	val_413
+414	val_414
+414	val_414
+417	val_417
+417	val_417
+417	val_417
+418	val_418
+419	val_419
+42	val_42
+42	val_42
+421	val_421
 424	val_424
-12	val_12
-396	val_396
-201	val_201
-217	val_217
-164	val_164
+424	val_424
+427	val_427
+429	val_429
+429	val_429
+43	val_43
+430	val_430
+430	val_430
+430	val_430
 431	val_431
-454	val_454
-478	val_478
-298	val_298
-125	val_125
 431	val_431
-164	val_164
-424	val_424
-187	val_187
-382	val_382
-5	val_5
-70	val_70
-397	val_397
-480	val_480
-291	val_291
-24	val_24
-351	val_351
-255	val_255
-104	val_104
-70	val_70
-163	val_163
+431	val_431
+432	val_432
+435	val_435
+436	val_436
+437	val_437
+438	val_438
+438	val_438
 438	val_438
-119	val_119
-414	val_414
-200	val_200
-491	val_491
-237	val_237
 439	val_439
-360	val_360
-248	val_248
-479	val_479
-305	val_305
-417	val_417
-199	val_199
-444	val_444
-120	val_120
-429	val_429
-169	val_169
+439	val_439
+44	val_44
 443	val_443
-323	val_323
-325	val_325
-277	val_277
-230	val_230
-478	val_478
-178	val_178
-468	val_468
-310	val_310
-317	val_317
-333	val_333
-493	val_493
+444	val_444
+446	val_446
+448	val_448
+449	val_449
+452	val_452
+453	val_453
+454	val_454
+454	val_454
+454	val_454
+455	val_455
+457	val_457
+458	val_458
+458	val_458
+459	val_459
+459	val_459
 460	val_460
-207	val_207
-249	val_249
-265	val_265
-480	val_480
-83	val_83
-136	val_136
-353	val_353
-172	val_172
-214	val_214
 462	val_462
-233	val_233
-406	val_406
-133	val_133
-175	val_175
-189	val_189
-454	val_454
-375	val_375
-401	val_401
-421	val_421
-407	val_407
-384	val_384
-256	val_256
-26	val_26
-134	val_134
-67	val_67
-384	val_384
-379	val_379
-18	val_18
 462	val_462
+463	val_463
+463	val_463
+466	val_466
+466	val_466
+466	val_466
+467	val_467
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+47	val_47
+470	val_470
+472	val_472
+475	val_475
+477	val_477
+478	val_478
+478	val_478
+479	val_479
+480	val_480
+480	val_480
+480	val_480
+481	val_481
+482	val_482
+483	val_483
+484	val_484
+485	val_485
+487	val_487
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+490	val_490
+491	val_491
 492	val_492
-100	val_100
-298	val_298
-9	val_9
-341	val_341
+492	val_492
+493	val_493
+494	val_494
+495	val_495
+496	val_496
+497	val_497
 498	val_498
-146	val_146
-458	val_458
-362	val_362
-186	val_186
-285	val_285
-348	val_348
-167	val_167
-18	val_18
-273	val_273
-183	val_183
-281	val_281
-344	val_344
-97	val_97
-469	val_469
-315	val_315
+498	val_498
+498	val_498
+5	val_5
+5	val_5
+5	val_5
+51	val_51
+51	val_51
+53	val_53
+54	val_54
+57	val_57
+58	val_58
+58	val_58
+64	val_64
+65	val_65
+66	val_66
+67	val_67
+67	val_67
+69	val_69
+70	val_70
+70	val_70
+70	val_70
+72	val_72
+72	val_72
+74	val_74
+76	val_76
+76	val_76
+77	val_77
+78	val_78
+8	val_8
+80	val_80
+82	val_82
+83	val_83
+83	val_83
 84	val_84
-28	val_28
-37	val_37
-448	val_448
-152	val_152
-348	val_348
-307	val_307
-194	val_194
-414	val_414
-477	val_477
-222	val_222
-126	val_126
+84	val_84
+85	val_85
+86	val_86
+87	val_87
+9	val_9
 90	val_90
-169	val_169
-403	val_403
-400	val_400
-200	val_200
+90	val_90
+90	val_90
+92	val_92
+95	val_95
+95	val_95
+96	val_96
 97	val_97
+97	val_97
+98	val_98
+98	val_98
diff --git a/src/ql/src/test/results/clientpositive/global_limit.q.out b/src/ql/src/test/results/clientpositive/global_limit.q.out
index 42a21ab..e0ff75e 100644
--- a/src/ql/src/test/results/clientpositive/global_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/global_limit.q.out
@@ -46,256 +46,256 @@ create table gl_tgt as select key from gl_src1 limit 1
 POSTHOOK: type: CREATETABLE_AS_SELECT
 POSTHOOK: Input: default@gl_src1
 POSTHOOK: Output: default@gl_tgt
-PREHOOK: query: select * from gl_tgt
+PREHOOK: query: select * from gl_tgt ORDER BY key ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_tgt
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-14_715_6666058695580705176/-mr-10000
-POSTHOOK: query: select * from gl_tgt
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-01_367_1997548056634283113/-mr-10000
+POSTHOOK: query: select * from gl_tgt ORDER BY key ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_tgt
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-14_715_6666058695580705176/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-01_367_1997548056634283113/-mr-10000
 165
 PREHOOK: query: -- need two files
-select 'x', split(value,',') from gl_src1 limit 20
+select 'x' as key_new , split(value,',') as value_new from gl_src1 ORDER BY key_new ASC, value_new[0] ASC limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-14_930_3390626062169619061/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-05_914_1048753508480058897/-mr-10000
 POSTHOOK: query: -- need two files
-select 'x', split(value,',') from gl_src1 limit 20
+select 'x' as key_new , split(value,',') as value_new from gl_src1 ORDER BY key_new ASC, value_new[0] ASC limit 20
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-14_930_3390626062169619061/-mr-10000
-x	["val_165"]
-x	["val_484"]
-x	["val_150"]
-x	["val_224"]
-x	["val_66"]
-x	["val_213"]
-x	["val_374"]
-x	["val_495"]
-x	["val_37"]
-x	["val_327"]
-x	["val_15"]
-x	["val_338"]
-x	["val_459"]
-x	["val_466"]
-x	["val_396"]
-x	["val_309"]
-x	["val_367"]
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-05_914_1048753508480058897/-mr-10000
 x	["val_0"]
-x	["val_455"]
-x	["val_316"]
+x	["val_0"]
+x	["val_0"]
+x	["val_0"]
+x	["val_0"]
+x	["val_0"]
+x	["val_0"]
+x	["val_0"]
+x	["val_0"]
+x	["val_103"]
+x	["val_103"]
+x	["val_103"]
+x	["val_103"]
+x	["val_103"]
+x	["val_103"]
+x	["val_11"]
+x	["val_11"]
+x	["val_11"]
+x	["val_114"]
+x	["val_114"]
 PREHOOK: query: -- no sufficient files
-select key, value, split(value,',') from gl_src1 limit 30
+select key, value, split(value,',') as value_new from gl_src1 ORDER BY key ASC, value ASC, value_new[0] ASC limit 30
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-17_975_1520062346401074551/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-10_808_4092506134627803409/-mr-10000
 POSTHOOK: query: -- no sufficient files
-select key, value, split(value,',') from gl_src1 limit 30
+select key, value, split(value,',') as value_new from gl_src1 ORDER BY key ASC, value ASC, value_new[0] ASC limit 30
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-17_975_1520062346401074551/-mr-10000
-165	val_165	["val_165"]
-484	val_484	["val_484"]
-150	val_150	["val_150"]
-224	val_224	["val_224"]
-66	val_66	["val_66"]
-213	val_213	["val_213"]
-374	val_374	["val_374"]
-495	val_495	["val_495"]
-37	val_37	["val_37"]
-327	val_327	["val_327"]
-15	val_15	["val_15"]
-338	val_338	["val_338"]
-459	val_459	["val_459"]
-466	val_466	["val_466"]
-396	val_396	["val_396"]
-309	val_309	["val_309"]
-367	val_367	["val_367"]
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-10_808_4092506134627803409/-mr-10000
+0	val_0	["val_0"]
 0	val_0	["val_0"]
-455	val_455	["val_455"]
-316	val_316	["val_316"]
-345	val_345	["val_345"]
-129	val_129	["val_129"]
-378	val_378	["val_378"]
+0	val_0	["val_0"]
+0	val_0	["val_0"]
+0	val_0	["val_0"]
+0	val_0	["val_0"]
+0	val_0	["val_0"]
+0	val_0	["val_0"]
+0	val_0	["val_0"]
+4	val_4	["val_4"]
+4	val_4	["val_4"]
 4	val_4	["val_4"]
-356	val_356	["val_356"]
-169	val_169	["val_169"]
-125	val_125	["val_125"]
-437	val_437	["val_437"]
-286	val_286	["val_286"]
-187	val_187	["val_187"]
+8	val_8	["val_8"]
+8	val_8	["val_8"]
+8	val_8	["val_8"]
+11	val_11	["val_11"]
+11	val_11	["val_11"]
+11	val_11	["val_11"]
+15	val_15	["val_15"]
+15	val_15	["val_15"]
+15	val_15	["val_15"]
+15	val_15	["val_15"]
+15	val_15	["val_15"]
+15	val_15	["val_15"]
+19	val_19	["val_19"]
+19	val_19	["val_19"]
+19	val_19	["val_19"]
+26	val_26	["val_26"]
+26	val_26	["val_26"]
+26	val_26	["val_26"]
 PREHOOK: query: -- need all files
-select key from gl_src1 limit 100
+select key from gl_src1 ORDER BY key ASC limit 100
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-21_006_2990988342025987107/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-15_533_3680762856363060327/-mr-10000
 POSTHOOK: query: -- need all files
-select key from gl_src1 limit 100
+select key from gl_src1 ORDER BY key ASC limit 100
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-21_006_2990988342025987107/-mr-10000
-165
-484
-150
-224
-66
-213
-374
-495
-37
-327
-15
-338
-459
-466
-396
-309
-367
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-15_533_3680762856363060327/-mr-10000
+0
+0
+0
+0
+0
+0
+0
+0
 0
-455
-316
-345
-129
-378
 4
-356
-169
-125
-437
-286
-187
-176
-459
-51
-103
-239
-213
-176
-275
-260
-404
-217
-84
-466
+4
+4
 8
-411
-172
-129
-158
-0
+8
+8
+11
+11
+11
+15
+15
+15
+15
+15
+15
+19
+19
+19
 26
-165
-327
+26
+26
+26
+26
+26
+33
+33
+33
+37
+37
+37
+37
+37
+37
+44
+44
+44
 51
-404
-95
-282
-187
-316
-169
+51
+51
+51
+51
+51
+66
+66
+66
 77
-0
-118
-282
-419
-15
-118
-19
-224
-309
-389
-327
-242
-392
-242
-396
+77
+77
+80
+80
+80
+84
+84
+84
+84
+84
+84
+95
+95
+95
+95
+95
 95
-11
-143
-228
-33
 103
-367
-239
-480
-202
-316
-235
-80
-44
-466
-257
-190
+103
+103
+103
+103
+103
 114
-396
-217
+114
+114
+118
+118
+118
+118
+118
+118
 125
-187
-480
-491
-305
-PREHOOK: query: select key from gl_src1 limit 30
+125
+125
+125
+125
+125
+129
+129
+129
+129
+129
+129
+136
+PREHOOK: query: select key from gl_src1 ORDER BY key ASC limit 30
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-24_041_8059705298736859124/-mr-10000
-POSTHOOK: query: select key from gl_src1 limit 30
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-20_267_7150043847290556882/-mr-10000
+POSTHOOK: query: select key from gl_src1 ORDER BY key ASC limit 30
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-24_041_8059705298736859124/-mr-10000
-165
-484
-150
-224
-66
-213
-374
-495
-37
-327
-15
-338
-459
-466
-396
-309
-367
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-20_267_7150043847290556882/-mr-10000
+0
+0
+0
+0
+0
+0
+0
+0
 0
-455
-316
-345
-129
-378
 4
-356
-169
-125
-437
-286
-187
+4
+4
+8
+8
+8
+11
+11
+11
+15
+15
+15
+15
+15
+15
+19
+19
+19
+26
+26
+26
 PREHOOK: query: -- not qualified cases
-select key, count(1) from gl_src1 group by key order by key limit 5
+select key, count(1) from gl_src1 group by key ORDER BY key ASC limit 5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-27_042_2819477757997397479/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-24_948_3812638783411797129/-mr-10000
 POSTHOOK: query: -- not qualified cases
-select key, count(1) from gl_src1 group by key order by key limit 5
+select key, count(1) from gl_src1 group by key ORDER BY key ASC limit 5
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-27_042_2819477757997397479/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-24_948_3812638783411797129/-mr-10000
 0	9
 4	3
 8	3
 11	3
 15	6
-PREHOOK: query: select distinct key from gl_src1 limit 10
+PREHOOK: query: select distinct key from gl_src1 ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-32_925_3439775789836285636/-mr-10000
-POSTHOOK: query: select distinct key from gl_src1 limit 10
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-34_071_7607876004028764633/-mr-10000
+POSTHOOK: query: select distinct key from gl_src1 ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-32_925_3439775789836285636/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-34_071_7607876004028764633/-mr-10000
 0
 4
 8
@@ -309,778 +309,778 @@ POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-32_925_34397757898362856
 PREHOOK: query: select count(1) from gl_src1 limit 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-36_043_608144804096350391/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-43_113_8195367223242894127/-mr-10000
 POSTHOOK: query: select count(1) from gl_src1 limit 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-36_043_608144804096350391/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-43_113_8195367223242894127/-mr-10000
 354
 PREHOOK: query: select transform(*) using "tr _ \n" as t from
-(select "a_a_a_a_a_a_" from gl_src1 limit 100) subq
+(select "a_a_a_a_a_a_" from gl_src1 limit 100) subq ORDER BY t
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-39_121_1333918197839932185/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-47_895_1428704896224409033/-mr-10000
 POSTHOOK: query: select transform(*) using "tr _ \n" as t from
-(select "a_a_a_a_a_a_" from gl_src1 limit 100) subq
+(select "a_a_a_a_a_a_" from gl_src1 limit 100) subq ORDER BY t
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-39_121_1333918197839932185/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-47_895_1428704896224409033/-mr-10000
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
 a
 a
 a
 a
 a
 a
-
-PREHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 limit 2000
+PREHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 ORDER BY key ASC limit 2000
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-42_255_4842424370651858121/-mr-10000
-POSTHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 limit 2000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-56_991_2088523686377118243/-mr-10000
+POSTHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 ORDER BY key ASC limit 2000
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-42_255_4842424370651858121/-mr-10000
-165
-484
-150
-224
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-02-56_991_2088523686377118243/-mr-10000
+37
 66
+150
+165
 213
+224
+327
 374
+484
 495
-37
-327
 PREHOOK: query: -- complicated queries
-select key from (select * from (select key,value from gl_src1 limit 10)t1 )t2
+select key from (select * from (select key,value from gl_src1 limit 10)t1 )t2 ORDER BY key ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-45_699_2470030147373346756/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-06_114_8001791334733402822/-mr-10000
 POSTHOOK: query: -- complicated queries
-select key from (select * from (select key,value from gl_src1 limit 10)t1 )t2
+select key from (select * from (select key,value from gl_src1 limit 10)t1 )t2 ORDER BY key ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-45_699_2470030147373346756/-mr-10000
-165
-484
-150
-224
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-06_114_8001791334733402822/-mr-10000
+37
 66
+150
+165
 213
+224
+327
 374
+484
 495
-37
-327
-PREHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2
+PREHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 ORDER BY key ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-48_750_7605887767273501586/-mr-10000
-POSTHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-15_058_7182833307704845495/-mr-10000
+POSTHOOK: query: select key from (select * from (select key,value from gl_src1)t1 limit 10)t2 ORDER BY key ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-48_750_7605887767273501586/-mr-10000
-165
-484
-150
-224
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-15_058_7182833307704845495/-mr-10000
+37
 66
+150
+165
 213
+224
+327
 374
+484
 495
-37
-327
 PREHOOK: query: insert overwrite table gl_tgt select key+1 from (select * from (select key,value from gl_src1)t1)t2 limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src1
@@ -1090,25 +1090,25 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src1
 POSTHOOK: Output: default@gl_tgt
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-PREHOOK: query: select * from gl_tgt
+PREHOOK: query: select * from gl_tgt ORDER BY key ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_tgt
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-57_593_9175560296084414291/-mr-10000
-POSTHOOK: query: select * from gl_tgt
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-30_413_7977877223066411843/-mr-10000
+POSTHOOK: query: select * from gl_tgt ORDER BY key ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_tgt
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-57_593_9175560296084414291/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-30_413_7977877223066411843/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-166
-485
-151
-225
+38
 67
+151
+166
 214
+225
+328
 375
+485
 496
-38
-328
 PREHOOK: query: -- empty table
 create table gl_src2 (key int, value string) stored as textfile
 PREHOOK: type: CREATETABLE
@@ -1117,14 +1117,14 @@ create table gl_src2 (key int, value string) stored as textfile
 POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@gl_src2
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-PREHOOK: query: select key from gl_src2 limit 10
+PREHOOK: query: select key from gl_src2 ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src2
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-57_846_8904186104857307463/-mr-10000
-POSTHOOK: query: select key from gl_src2 limit 10
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-35_102_5380925296444742795/-mr-10000
+POSTHOOK: query: select key from gl_src2 ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src2
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-06-57_846_8904186104857307463/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-35_102_5380925296444742795/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
 PREHOOK: query: -- partition
 create table gl_src_part1 (key int, value string) partitioned by (p string) stored as textfile
@@ -1164,71 +1164,71 @@ POSTHOOK: query: load data local inpath '../data/files/srcbucket20.txt' INTO TAB
 POSTHOOK: type: LOAD
 POSTHOOK: Output: default@gl_src_part1@p=12
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-PREHOOK: query: select key from gl_src_part1 where p like '1%' limit 10
+PREHOOK: query: select key from gl_src_part1 where p like '1%' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src_part1@p=11
 PREHOOK: Input: default@gl_src_part1@p=12
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-03_055_6761445866727035783/-mr-10000
-POSTHOOK: query: select key from gl_src_part1 where p like '1%' limit 10
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-42_369_7317804813168347245/-mr-10000
+POSTHOOK: query: select key from gl_src_part1 where p like '1%' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src_part1@p=11
 POSTHOOK: Input: default@gl_src_part1@p=12
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-03_055_6761445866727035783/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-42_369_7317804813168347245/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-27
-409
-265
-401
-166
-430
-287
-207
-199
-247
-PREHOOK: query: select key from gl_src_part1 where p='11' limit 10
+0
+0
+0
+0
+0
+0
+0
+0
+0
+4
+PREHOOK: query: select key from gl_src_part1 where p='11' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src_part1@p=11
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-06_080_7097976505609243557/-mr-10000
-POSTHOOK: query: select key from gl_src_part1 where p='11' limit 10
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-47_454_8666076889318518542/-mr-10000
+POSTHOOK: query: select key from gl_src_part1 where p='11' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src_part1@p=11
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-06_080_7097976505609243557/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-47_454_8666076889318518542/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
+5
+5
+5
+9
+12
+12
 27
-409
-265
-401
-166
-430
-287
-207
-199
-247
-PREHOOK: query: select key from gl_src_part1 where p='12' limit 10
+30
+34
+41
+PREHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src_part1@p=12
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-09_087_9176571562410124649/-mr-10000
-POSTHOOK: query: select key from gl_src_part1 where p='12' limit 10
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-52_337_7173401875110005209/-mr-10000
+POSTHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src_part1@p=12
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-09_087_9176571562410124649/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-52_337_7173401875110005209/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-165
-484
-150
-224
-66
-213
-374
-495
-37
-327
-PREHOOK: query: select key from gl_src_part1 where p='13' limit 10
+0
+0
+0
+0
+0
+0
+0
+0
+0
+4
+PREHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-12_038_7099507780438686856/-mr-10000
-POSTHOOK: query: select key from gl_src_part1 where p='13' limit 10
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-57_189_8935082901328872418/-mr-10000
+POSTHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-12_038_7099507780438686856/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-03-57_189_8935082901328872418/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
 PREHOOK: query: alter table gl_src_part1 add partition (p='13')
 PREHOOK: type: ALTERTABLE_ADDPARTS
@@ -1238,378 +1238,378 @@ POSTHOOK: type: ALTERTABLE_ADDPARTS
 POSTHOOK: Input: default@gl_src_part1
 POSTHOOK: Output: default@gl_src_part1@p=13
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-PREHOOK: query: select key from gl_src_part1 where p='13' limit 10
+PREHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src_part1@p=13
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-15_137_3923898954213249104/-mr-10000
-POSTHOOK: query: select key from gl_src_part1 where p='13' limit 10
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-01_882_7409485208307407110/-mr-10000
+POSTHOOK: query: select key from gl_src_part1 where p='13' ORDER BY key ASC limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src_part1@p=13
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-15_137_3923898954213249104/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-01_882_7409485208307407110/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-PREHOOK: query: select key from gl_src_part1 where p='12' limit 1000
+PREHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 1000
 PREHOOK: type: QUERY
 PREHOOK: Input: default@gl_src_part1@p=12
-PREHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-18_041_1214817963525981880/-mr-10000
-POSTHOOK: query: select key from gl_src_part1 where p='12' limit 1000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-06_577_4813401585925882782/-mr-10000
+POSTHOOK: query: select key from gl_src_part1 where p='12' ORDER BY key ASC limit 1000
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@gl_src_part1@p=12
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-04-18_13-07-18_041_1214817963525981880/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-06_577_4813401585925882782/-mr-10000
 POSTHOOK: Lineage: gl_tgt.key EXPRESSION [(gl_src1)gl_src1.FieldSchema(name:key, type:int, comment:null), ]
-165
-484
-150
-224
-66
-213
-374
-495
-37
-327
-15
-338
-459
-466
-396
-309
-367
 0
-455
-316
-345
-129
-378
+0
+0
+0
+0
+0
+0
+0
+0
+4
+4
 4
-356
-169
-125
-437
-286
-187
-176
-459
-51
-103
-239
-213
-176
-275
-260
-404
-217
-84
-466
 8
-411
-172
-129
-158
-0
+8
+8
+11
+11
+11
+15
+15
+15
+15
+15
+15
+19
+19
+19
 26
-165
-327
+26
+26
+26
+26
+26
+33
+33
+33
+37
+37
+37
+37
+37
+37
+44
+44
+44
 51
-404
-95
-282
-187
-316
-169
+51
+51
+51
+51
+51
+66
+66
+66
 77
-0
-118
-282
-419
-15
-118
-19
-224
-309
-389
-327
-242
-392
-242
-396
+77
+77
+80
+80
+80
+84
+84
+84
+84
+84
+84
+95
+95
+95
+95
+95
 95
-11
-143
-228
-33
 103
-367
-239
-480
-202
-316
-235
-80
-44
-466
-257
-190
+103
+103
+103
+103
+103
 114
-396
-217
+114
+114
+118
+118
+118
+118
+118
+118
 125
-187
-480
-491
-305
-444
-169
-323
-480
+125
+125
+125
+125
+125
+129
+129
+129
+129
+129
+129
 136
+136
+136
+143
+143
+143
+150
+150
+150
+158
+158
+158
+165
+165
+165
+165
+165
+165
+169
+169
+169
+169
+169
+169
+169
+169
+169
+169
+169
+169
 172
-462
-26
-462
-341
+172
+172
+172
+172
+172
+176
+176
+176
+176
+176
+176
 183
-84
-37
-448
+183
+183
+187
+187
+187
+187
+187
+187
+187
+187
+187
+190
+190
+190
 194
-477
-169
-400
-165
-484
-150
-224
-66
+194
+194
+202
+202
+202
+213
+213
+213
+213
 213
-374
-495
-37
-327
-15
-338
-459
-466
-396
-309
-367
-0
-455
-316
-345
-129
-378
-4
-356
-169
-125
-437
-286
-187
-176
-459
-51
-103
-239
 213
-176
-275
-260
-404
 217
-84
-466
-8
-411
-172
-129
-158
-0
-26
-165
-327
-51
-404
-95
-282
-187
-316
-169
-77
-0
-118
-282
-419
-15
-118
-19
+217
+217
+217
+217
+217
+224
+224
+224
+224
+224
 224
-309
-389
-327
-242
-392
-242
-396
-95
-11
-143
 228
-33
-103
-367
-239
-480
-202
-316
+228
+228
 235
-80
-44
-466
+235
+235
+239
+239
+239
+239
+239
+239
+242
+242
+242
+242
+242
+242
 257
-190
-114
-396
-217
-125
-187
-480
-491
+257
+257
+260
+260
+260
+275
+275
+275
+282
+282
+282
+282
+282
+282
+286
+286
+286
 305
-444
-169
+305
+305
+309
+309
+309
+309
+309
+309
+316
+316
+316
+316
+316
+316
+316
+316
+316
+323
+323
 323
-480
-136
-172
-462
-26
-462
-341
-183
-84
-37
-448
-194
-477
-169
-400
-165
-484
-150
-224
-66
-213
-374
-495
-37
 327
-15
+327
+327
+327
+327
+327
+327
+327
+327
 338
-459
-466
-396
-309
-367
-0
-455
-316
+338
+338
+341
+341
+341
+345
+345
 345
-129
-378
-4
 356
-169
-125
-437
-286
-187
-176
-459
-51
-103
-239
-213
-176
-275
-260
-404
-217
-84
-466
-8
-411
-172
-129
-158
-0
-26
-165
-327
-51
-404
-95
-282
-187
-316
-169
-77
-0
-118
-282
-419
-15
-118
-19
-224
-309
+356
+356
+367
+367
+367
+367
+367
+367
+374
+374
+374
+378
+378
+378
+389
+389
 389
-327
-242
 392
-242
+392
+392
 396
-95
-11
-143
-228
-33
-103
-367
-239
-480
-202
-316
-235
-80
-44
-466
-257
-190
-114
 396
-217
-125
-187
-480
-491
-305
+396
+396
+396
+396
+396
+396
+396
+400
+400
+400
+404
+404
+404
+404
+404
+404
+411
+411
+411
+419
+419
+419
+437
+437
+437
 444
-169
-323
-480
-136
-172
+444
+444
+448
+448
+448
+455
+455
+455
+459
+459
+459
+459
+459
+459
 462
-26
 462
-341
-183
-84
-37
-448
-194
+462
+462
+462
+462
+466
+466
+466
+466
+466
+466
+466
+466
+466
 477
-169
-400
+477
+477
+480
+480
+480
+480
+480
+480
+480
+480
+480
+484
+484
+484
+491
+491
+491
+495
+495
+495
 PREHOOK: query: drop table gl_src1
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@gl_src1
diff --git a/src/ql/src/test/results/clientpositive/groupby1_limit.q.out b/src/ql/src/test/results/clientpositive/groupby1_limit.q.out
index fb6de5d..a870422 100644
--- a/src/ql/src/test/results/clientpositive/groupby1_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby1_limit.q.out
@@ -81,7 +81,7 @@ STAGE PLANS:
   Stage: Stage-2
     Map Reduce
       Alias -> Map Operator Tree:
-        file:/tmp/sdong/hive_2011-02-10_01-49-04_956_406305842309592902/-mr-10002 
+        file:/tmp/cloudera/hive_2012-01-25_19-04-13_305_1638795877921102572/-mr-10002 
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -133,14 +133,14 @@ POSTHOOK: Input: default@src
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC , dest1.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_01-49-12_798_2878850829077906411/-mr-10000
-POSTHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-24_148_6596719120762205054/-mr-10000
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC , dest1.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_01-49-12_798_2878850829077906411/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-24_148_6596719120762205054/-mr-10000
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	0.0
diff --git a/src/ql/src/test/results/clientpositive/input11_limit.q.out b/src/ql/src/test/results/clientpositive/input11_limit.q.out
index 7a311e7..9a207d4 100644
--- a/src/ql/src/test/results/clientpositive/input11_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/input11_limit.q.out
@@ -91,23 +91,23 @@ POSTHOOK: Input: default@src
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC, dest1.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-53-08_139_8372916716026610676/-mr-10000
-POSTHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-35_894_5635251001156424534/-mr-10000
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC, dest1.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-53-08_139_8372916716026610676/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-35_894_5635251001156424534/-mr-10000
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-86	val_86
-27	val_27
-98	val_98
-66	val_66
-37	val_37
+0	val_0
 15	val_15
-82	val_82
 17	val_17
-0	val_0
+27	val_27
+37	val_37
 57	val_57
+66	val_66
+82	val_82
+86	val_86
+98	val_98
diff --git a/src/ql/src/test/results/clientpositive/input1_limit.q.out b/src/ql/src/test/results/clientpositive/input1_limit.q.out
index 088f773..9e79451 100644
--- a/src/ql/src/test/results/clientpositive/input1_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/input1_limit.q.out
@@ -109,7 +109,7 @@ STAGE PLANS:
   Stage: Stage-4
     Map Reduce
       Alias -> Map Operator Tree:
-        file:/tmp/sdong/hive_2011-02-10_15-53-56_417_5846493441144147770/-mr-10004 
+        file:/tmp/cloudera/hive_2012-01-25_19-04-41_019_7817375527243579555/-mr-10004 
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -169,42 +169,42 @@ POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: dest1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC, dest1.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-54-07_550_8419732472959696648/-mr-10000
-POSTHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-53_695_8471958960161678362/-mr-10000
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY dest1.key ASC, dest1.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-54-07_550_8419732472959696648/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-53_695_8471958960161678362/-mr-10000
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-86	val_86
-27	val_27
-98	val_98
-66	val_66
-37	val_37
+0	val_0
 15	val_15
-82	val_82
 17	val_17
-0	val_0
+27	val_27
+37	val_37
 57	val_57
-PREHOOK: query: SELECT dest2.* FROM dest2
+66	val_66
+82	val_82
+86	val_86
+98	val_98
+PREHOOK: query: SELECT dest2.* FROM dest2 ORDER BY dest2.key ASC, dest2.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest2
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-54-07_847_310894400949776200/-mr-10000
-POSTHOOK: query: SELECT dest2.* FROM dest2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-58_350_3861226139981559305/-mr-10000
+POSTHOOK: query: SELECT dest2.* FROM dest2 ORDER BY dest2.key ASC, dest2.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest2
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-54-07_847_310894400949776200/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-04-58_350_3861226139981559305/-mr-10000
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-86	val_86
 27	val_27
-98	val_98
-66	val_66
 37	val_37
+66	val_66
+86	val_86
+98	val_98
diff --git a/src/ql/src/test/results/clientpositive/input_lazyserde.q.out b/src/ql/src/test/results/clientpositive/input_lazyserde.q.out
index 063ddb2..15a379f 100644
--- a/src/ql/src/test/results/clientpositive/input_lazyserde.q.out
+++ b/src/ql/src/test/results/clientpositive/input_lazyserde.q.out
@@ -108,14 +108,14 @@ POSTHOOK: Lineage: dest1.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstri
 POSTHOOK: Lineage: dest1.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.d SIMPLE [(src_thrift)src_thrift.FieldSchema(name:aint, type:int, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
-PREHOOK: query: SELECT dest1.* FROM dest1 DISTRIBUTE BY 1
+PREHOOK: query: SELECT dest1.* FROM dest1 CLUSTER BY 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-27_012_6907776692718827268/-mr-10000
-POSTHOOK: query: SELECT dest1.* FROM dest1 DISTRIBUTE BY 1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-10_185_9035727285088046786/-mr-10000
+POSTHOOK: query: SELECT dest1.* FROM dest1 CLUSTER BY 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-27_012_6907776692718827268/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-10_185_9035727285088046786/-mr-10000
 POSTHOOK: Lineage: dest1.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
@@ -132,14 +132,14 @@ POSTHOOK: Lineage: dest1.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astri
 [8,16,24]	["80","800","8000"]	{"key_8":"value_8"}	1638581578	record_8
 [9,18,27]	["90","900","9000"]	{"key_9":"value_9"}	336964413	record_9
 null	null	null	0	NULL
-PREHOOK: query: SELECT dest1.a[0], dest1.b[0], dest1.c['key2'], dest1.d, dest1.e FROM dest1 DISTRIBUTE BY 1
+PREHOOK: query: SELECT dest1.a[0], dest1.b[0], dest1.c['key2'], dest1.d, dest1.e FROM dest1 CLUSTER BY 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-37_706_4561860868628039953/-mr-10000
-POSTHOOK: query: SELECT dest1.a[0], dest1.b[0], dest1.c['key2'], dest1.d, dest1.e FROM dest1 DISTRIBUTE BY 1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-14_888_281994222495624484/-mr-10000
+POSTHOOK: query: SELECT dest1.a[0], dest1.b[0], dest1.c['key2'], dest1.d, dest1.e FROM dest1 CLUSTER BY 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-37_706_4561860868628039953/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-14_888_281994222495624484/-mr-10000
 POSTHOOK: Lineage: dest1.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
@@ -193,14 +193,14 @@ POSTHOOK: Lineage: dest1.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstri
 POSTHOOK: Lineage: dest1.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.d SIMPLE [(src_thrift)src_thrift.FieldSchema(name:aint, type:int, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
-PREHOOK: query: SELECT * from dest1
+PREHOOK: query: SELECT * from dest1 ORDER BY 1 ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-45_869_5135781993086236128/-mr-10000
-POSTHOOK: query: SELECT * from dest1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-25_945_3615238497952729882/-mr-10000
+POSTHOOK: query: SELECT * from dest1 ORDER BY 1 ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-45_869_5135781993086236128/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-25_945_3615238497952729882/-mr-10000
 POSTHOOK: Lineage: dest1.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstring, type:array<string>, comment:from deserializer), ]
@@ -258,14 +258,14 @@ POSTHOOK: Lineage: dest1.b SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lstri
 POSTHOOK: Lineage: dest1.c SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.d SIMPLE [(src_thrift)src_thrift.FieldSchema(name:aint, type:int, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.e SIMPLE [(src_thrift)src_thrift.FieldSchema(name:astring, type:string, comment:from deserializer), ]
-PREHOOK: query: SELECT * from dest1
+PREHOOK: query: SELECT * from dest1 ORDER BY 1 ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-51_903_541462711007953039/-mr-10000
-POSTHOOK: query: SELECT * from dest1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-37_090_7796324957668806554/-mr-10000
+POSTHOOK: query: SELECT * from dest1 ORDER BY 1 ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_15-59-51_903_541462711007953039/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-37_090_7796324957668806554/-mr-10000
 POSTHOOK: Lineage: dest1.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:lint, type:array<int>, comment:from deserializer), ]
 POSTHOOK: Lineage: dest1.a SIMPLE [(src_thrift)src_thrift.FieldSchema(name:mstringstring, type:map<string,string>, comment:from deserializer), ]
diff --git a/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out b/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out
index 980e7cf..bb65dcf 100644
--- a/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out
@@ -10,7 +10,7 @@ PREHOOK: query: EXPLAIN
   count(distinct(src2.key)) AS value2
   FROM src1 src2 group by src2.key
  ) b 
- ON (a.key = b.key)
+ ON (a.key = b.key) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value1 ASC, b.value2 ASC
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN
  SELECT a.key, a.value, b.key, b.value1,  b.value2
@@ -24,15 +24,16 @@ POSTHOOK: query: EXPLAIN
   count(distinct(src2.key)) AS value2
   FROM src1 src2 group by src2.key
  ) b 
- ON (a.key = b.key)
+ ON (a.key = b.key) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value1 ASC, b.value2 ASC
 POSTHOOK: type: QUERY
 ABSTRACT SYNTAX TREE:
-  (TOK_QUERY (TOK_FROM (TOK_FULLOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) key) (TOK_SELEXPR (TOK_FUNCTION count (. (TOK_TABLE_OR_COL src1) value)) value)) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src1) key)))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) key) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL src2) value)) value1) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL src2) key)) value2)) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src2) key)))) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) value1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) value2)))))
+  (TOK_QUERY (TOK_FROM (TOK_FULLOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src) src1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src1) key) key) (TOK_SELEXPR (TOK_FUNCTION count (. (TOK_TABLE_OR_COL src1) value)) value)) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src1) key)))) a) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src1) src2)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src2) key) key) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL src2) value)) value1) (TOK_SELEXPR (TOK_FUNCTIONDI count (. (TOK_TABLE_OR_COL src2) key)) value2)) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src2) key)))) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) value)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) value1)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) value2))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL a) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL a) value)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL b) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL b) value1)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL b) value2)))))
 
 STAGE DEPENDENCIES:
   Stage-1 is a root stage
-  Stage-2 depends on stages: Stage-1, Stage-3
-  Stage-3 is a root stage
+  Stage-2 depends on stages: Stage-1, Stage-4
+  Stage-3 depends on stages: Stage-2
+  Stage-4 is a root stage
   Stage-0 is a root stage
 
 STAGE PLANS:
@@ -165,12 +166,50 @@ STAGE PLANS:
               compressed: false
               GlobalTableId: 0
               table:
-                  input format: org.apache.hadoop.mapred.TextInputFormat
-                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
 
   Stage: Stage-3
     Map Reduce
       Alias -> Map Operator Tree:
+        file:/tmp/cloudera/hive_2012-01-25_19-05-41_977_2573156188965138607/-mr-10003 
+            Reduce Output Operator
+              key expressions:
+                    expr: _col0
+                    type: string
+                    expr: _col1
+                    type: bigint
+                    expr: _col2
+                    type: string
+                    expr: _col3
+                    type: bigint
+                    expr: _col4
+                    type: bigint
+              sort order: +++++
+              tag: -1
+              value expressions:
+                    expr: _col0
+                    type: string
+                    expr: _col1
+                    type: bigint
+                    expr: _col2
+                    type: string
+                    expr: _col3
+                    type: bigint
+                    expr: _col4
+                    type: bigint
+      Reduce Operator Tree:
+        Extract
+          File Output Operator
+            compressed: false
+            GlobalTableId: 0
+            table:
+                input format: org.apache.hadoop.mapred.TextInputFormat
+                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+
+  Stage: Stage-4
+    Map Reduce
+      Alias -> Map Operator Tree:
         a:src1 
           TableScan
             alias: src1
@@ -242,11 +281,11 @@ PREHOOK: query: SELECT a.key, a.value, b.key, b.value1,  b.value2
   count(distinct(src2.key)) AS value2
   FROM src1 src2 group by src2.key
  ) b 
- ON (a.key = b.key)
+ ON (a.key = b.key) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value1 ASC, b.value2 ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Input: default@src1
-PREHOOK: Output: file:/tmp/sdong/hive_2011-02-10_16-02-45_095_1063227124063139638/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-42_106_4753021492931289574/-mr-10000
 POSTHOOK: query: SELECT a.key, a.value, b.key, b.value1,  b.value2
  FROM 
   (
@@ -258,15 +297,33 @@ POSTHOOK: query: SELECT a.key, a.value, b.key, b.value1,  b.value2
   count(distinct(src2.key)) AS value2
   FROM src1 src2 group by src2.key
  ) b 
- ON (a.key = b.key)
+ ON (a.key = b.key) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value1 ASC, b.value2 ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Input: default@src1
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-02-10_16-02-45_095_1063227124063139638/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-05-42_106_4753021492931289574/-mr-10000
 NULL	NULL		1	0
 NULL	NULL		1	0
 NULL	NULL		1	0
 NULL	NULL		1	1
+NULL	NULL	val_146	1	0
+NULL	NULL	val_150	1	0
+NULL	NULL	val_165	1	0
+NULL	NULL	val_193	1	0
+NULL	NULL	val_213	1	0
+NULL	NULL	val_238	1	0
+NULL	NULL	val_255	1	0
+NULL	NULL	val_265	1	0
+NULL	NULL	val_27	1	0
+NULL	NULL	val_273	1	0
+NULL	NULL	val_278	1	0
+NULL	NULL	val_311	1	0
+NULL	NULL	val_401	1	0
+NULL	NULL	val_406	1	0
+NULL	NULL	val_409	1	0
+NULL	NULL	val_484	1	0
+NULL	NULL	val_66	1	0
+NULL	NULL	val_98	1	0
 0	3	NULL	NULL	NULL
 10	1	NULL	NULL	NULL
 100	2	NULL	NULL	NULL
@@ -576,21 +633,3 @@ NULL	NULL		1	1
 96	1	NULL	NULL	NULL
 97	2	NULL	NULL	NULL
 98	2	98	0	1
-NULL	NULL	val_146	1	0
-NULL	NULL	val_150	1	0
-NULL	NULL	val_165	1	0
-NULL	NULL	val_193	1	0
-NULL	NULL	val_213	1	0
-NULL	NULL	val_238	1	0
-NULL	NULL	val_255	1	0
-NULL	NULL	val_265	1	0
-NULL	NULL	val_27	1	0
-NULL	NULL	val_273	1	0
-NULL	NULL	val_278	1	0
-NULL	NULL	val_311	1	0
-NULL	NULL	val_401	1	0
-NULL	NULL	val_406	1	0
-NULL	NULL	val_409	1	0
-NULL	NULL	val_484	1	0
-NULL	NULL	val_66	1	0
-NULL	NULL	val_98	1	0
diff --git a/src/ql/src/test/results/clientpositive/join_1to1.q.out b/src/ql/src/test/results/clientpositive/join_1to1.q.out
index 40875a5..ff9770e 100644
--- a/src/ql/src/test/results/clientpositive/join_1to1.q.out
+++ b/src/ql/src/test/results/clientpositive/join_1to1.q.out
@@ -20,16 +20,16 @@ PREHOOK: Output: default@join_1to1_2
 POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/in6.txt' INTO TABLE join_1to1_2
 POSTHOOK: type: LOAD
 POSTHOOK: Output: default@join_1to1_2
-PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-29_153_819287332537414913/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-01_259_506888375849426626/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-29_153_819287332537414913/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-01_259_506888375849426626/-mr-10000
 5	10005	66	5	10005	66
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -39,15 +39,15 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -60,22 +60,22 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-37_205_3853401411582824516/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-10_490_8958179680482918684/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-37_205_3853401411582824516/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-10_490_8958179680482918684/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -85,15 +85,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -106,25 +106,27 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-45_133_5000785547018037129/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-19_525_3328482881410757453/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-45_133_5000785547018037129/-mr-10000
-NULL	10050	66	NULL	NULL	NULL
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-19_525_3328482881410757453/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	25	10025	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
-NULL	NULL	NULL	25	10025	66
 30	10030	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 50	10050	66	50	10050	66
@@ -135,24 +137,22 @@ NULL	NULL	NULL	25	10025	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	80	10040	66
-NULL	NULL	NULL	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-57_477_8268626202456442766/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-28_983_7045887882232820006/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-20-57_477_8268626202456442766/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-28_983_7045887882232820006/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -162,15 +162,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -183,25 +183,27 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-07_530_5883037614503394382/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-38_471_2766942588315511415/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-07_530_5883037614503394382/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-38_471_2766942588315511415/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	25	10025	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
-NULL	NULL	NULL	25	10025	66
 30	10030	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 50	10050	66	50	10050	66
@@ -212,18 +214,16 @@ NULL	NULL	NULL	25	10025	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	80	10040	66
-NULL	NULL	NULL	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-18_282_7317084573894626898/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-47_795_2078580828609802332/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-18_282_7317084573894626898/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-47_795_2078580828609802332/-mr-10000
 5	10005	66	5	10005	66
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -233,15 +233,15 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -254,22 +254,22 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-28_780_2696570463196136436/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-57_093_491450138342168000/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-28_780_2696570463196136436/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-06-57_093_491450138342168000/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -279,15 +279,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -300,25 +300,27 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-42_434_1480667017077026029/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-06_449_9074980800602489251/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-42_434_1480667017077026029/-mr-10000
-NULL	10050	66	NULL	NULL	NULL
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-06_449_9074980800602489251/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	25	10025	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
-NULL	NULL	NULL	25	10025	66
 30	10030	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 50	10050	66	50	10050	66
@@ -329,24 +331,22 @@ NULL	NULL	NULL	25	10025	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	80	10040	66
-NULL	NULL	NULL	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-51_288_5512301142456705063/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-15_831_3138190386361238333/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-21-51_288_5512301142456705063/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-15_831_3138190386361238333/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -356,15 +356,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -377,25 +377,27 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-02_120_8975661308229780900/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-25_171_7405624102409222929/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-02_120_8975661308229780900/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-25_171_7405624102409222929/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	25	10025	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
-NULL	NULL	NULL	25	10025	66
 30	10030	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 50	10050	66	50	10050	66
@@ -406,36 +408,34 @@ NULL	NULL	NULL	25	10025	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	80	10040	66
-NULL	NULL	NULL	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-12_482_4462251488601235627/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-34_710_666795069384945045/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-12_482_4462251488601235627/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-34_710_666795069384945045/-mr-10000
 5	10005	66	5	10005	66
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
 30	10030	66	30	10030	88
 35	10035	88	35	10035	88
 40	10040	66	40	10040	66
-40	10040	88	40	10040	66
 40	10040	66	40	10040	88
+40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
-50	10050	88	50	10050	88
-50	10050	88	50	10050	88
 50	10050	66	50	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -448,40 +448,40 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-23_225_2252852873807958052/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-43_992_3172771776277539636/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-23_225_2252852873807958052/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-43_992_3172771776277539636/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
 30	10030	66	30	10030	88
 35	10035	88	35	10035	88
 40	10040	66	40	10040	66
-40	10040	88	40	10040	66
 40	10040	66	40	10040	88
+40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
-50	10050	88	50	10050	88
-50	10050	88	50	10050	88
 50	10050	66	50	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -494,25 +494,27 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-36_933_7497927262929255928/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-53_379_5917474864866360710/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-36_933_7497927262929255928/-mr-10000
-NULL	10050	66	NULL	NULL	NULL
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-07-53_379_5917474864866360710/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	25	10025	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
-NULL	NULL	NULL	25	10025	66
 30	10030	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 50	10050	66	50	10050	66
@@ -523,42 +525,40 @@ NULL	NULL	NULL	25	10025	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	80	10040	66
-NULL	NULL	NULL	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-46_887_6402928547373416872/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-02_958_2712061552193342392/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-46_887_6402928547373416872/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-02_958_2712061552193342392/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
 30	10030	66	30	10030	88
 35	10035	88	35	10035	88
 40	10040	66	40	10040	66
-40	10040	88	40	10040	66
 40	10040	66	40	10040	88
+40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
-50	10050	88	50	10050	88
-50	10050	88	50	10050	88
 50	10050	66	50	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -571,25 +571,27 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-57_346_2072799218057878640/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-12_325_966583052690307498/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-22-57_346_2072799218057878640/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-12_325_966583052690307498/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	25	10025	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	NULL	80	10040	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
-NULL	NULL	NULL	25	10025	66
 30	10030	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 50	10050	66	50	10050	66
@@ -600,18 +602,16 @@ NULL	NULL	NULL	25	10025	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	80	10040	66
-NULL	NULL	NULL	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-08_081_7330385664639520823/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-21_755_1203274161568857709/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-08_081_7330385664639520823/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-21_755_1203274161568857709/-mr-10000
 5	10005	66	5	10005	66
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -621,15 +621,15 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -642,22 +642,22 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-20_605_1212073981863777868/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-31_073_1233134701025153488/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-20_605_1212073981863777868/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-31_073_1233134701025153488/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -667,15 +667,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -688,45 +688,49 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-32_030_1376413216376519019/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-40_362_820025421821727946/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-32_030_1376413216376519019/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-40_362_820025421821727946/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	30	10030	88
+NULL	NULL	NULL	35	10035	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	NULL	NULL	NULL
 30	10030	66	NULL	NULL	NULL
-NULL	NULL	NULL	30	10030	88
 35	10035	88	NULL	NULL	NULL
-NULL	NULL	NULL	35	10035	88
-40	10040	66	40	10040	66
 40	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
+40	10040	66	40	10040	66
 40	10040	88	NULL	NULL	NULL
 40	10040	88	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 50	10050	66	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 60	10040	66	60	10040	66
@@ -734,33 +738,29 @@ NULL	NULL	NULL	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-41_827_8885174767015375192/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-49_594_6674468661236921005/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-41_827_8885174767015375192/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-49_594_6674468661236921005/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -770,15 +770,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -791,45 +791,49 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-51_892_5107339076100535083/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-59_069_4788024957489538120/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-23-51_892_5107339076100535083/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-08-59_069_4788024957489538120/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	30	10030	88
+NULL	NULL	NULL	35	10035	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	NULL	NULL	NULL
 30	10030	66	NULL	NULL	NULL
-NULL	NULL	NULL	30	10030	88
 35	10035	88	NULL	NULL	NULL
-NULL	NULL	NULL	35	10035	88
-40	10040	66	40	10040	66
 40	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
+40	10040	66	40	10040	66
 40	10040	88	NULL	NULL	NULL
 40	10040	88	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 50	10050	66	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	66	50	10050	66
 50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 60	10040	66	60	10040	66
@@ -837,27 +841,23 @@ NULL	NULL	NULL	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
-PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-05_457_7734550160785374741/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-08_431_8431074976750930099/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-05_457_7734550160785374741/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-08_431_8431074976750930099/-mr-10000
 5	10005	66	5	10005	66
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -867,15 +867,15 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -888,22 +888,22 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-15_398_6526838758701035060/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-17_672_8495593448858817670/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-15_398_6526838758701035060/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-17_672_8495593448858817670/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -913,15 +913,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -934,45 +934,49 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-25_841_5052384962414662963/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-26_908_3580381531548658540/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-25_841_5052384962414662963/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-26_908_3580381531548658540/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	30	10030	88
+NULL	NULL	NULL	35	10035	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	NULL	NULL	NULL
 30	10030	66	NULL	NULL	NULL
-NULL	NULL	NULL	30	10030	88
 35	10035	88	NULL	NULL	NULL
-NULL	NULL	NULL	35	10035	88
-40	10040	66	40	10040	66
 40	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
+40	10040	66	40	10040	66
 40	10040	88	NULL	NULL	NULL
 40	10040	88	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 50	10050	66	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
+50	10050	66	50	10050	66
 50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
-50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 60	10040	66	60	10040	66
@@ -980,33 +984,29 @@ NULL	NULL	NULL	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-36_374_5468030835311850505/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-36_162_7006682013795871453/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-36_374_5468030835311850505/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-36_162_7006682013795871453/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
@@ -1016,15 +1016,15 @@ NULL	NULL	NULL	10	10010	66
 40	10040	66	40	10040	88
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
 50	10050	66	50	10050	66
-50	10050	88	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
-50	10050	88	50	10050	88
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -1037,45 +1037,49 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-49_065_6955091567995311011/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-45_525_5293852651341290943/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-49_065_6955091567995311011/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-45_525_5293852651341290943/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	30	10030	88
+NULL	NULL	NULL	35	10035	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	NULL	NULL	NULL
 30	10030	66	NULL	NULL	NULL
-NULL	NULL	NULL	30	10030	88
 35	10035	88	NULL	NULL	NULL
-NULL	NULL	NULL	35	10035	88
-40	10040	66	40	10040	66
 40	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
+40	10040	66	40	10040	66
 40	10040	88	NULL	NULL	NULL
 40	10040	88	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 50	10050	66	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
+50	10050	66	50	10050	66
 50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
-50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 60	10040	66	60	10040	66
@@ -1083,45 +1087,41 @@ NULL	NULL	NULL	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
-PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-59_560_3592561556746118709/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-54_709_6401588409071078999/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-24-59_560_3592561556746118709/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-09-54_709_6401588409071078999/-mr-10000
 5	10005	66	5	10005	66
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
 30	10030	66	30	10030	88
 35	10035	88	35	10035	88
 40	10040	66	40	10040	66
-40	10040	88	40	10040	66
 40	10040	66	40	10040	88
+40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
-50	10050	88	50	10050	88
-50	10050	88	50	10050	88
 50	10050	66	50	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -1134,40 +1134,40 @@ POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishna
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-10_152_5451154587710613858/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-04_337_5616062461971056897/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-10_152_5451154587710613858/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-04_337_5616062461971056897/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
 30	10030	66	30	10030	88
 35	10035	88	35	10035	88
 40	10040	66	40	10040	66
-40	10040	88	40	10040	66
 40	10040	66	40	10040	88
+40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
-50	10050	88	50	10050	88
-50	10050	88	50	10050	88
 50	10050	66	50	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -1180,45 +1180,49 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-19_903_3097300389666559778/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-13_744_5592806305139377466/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-19_903_3097300389666559778/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
-NULL	10050	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-13_744_5592806305139377466/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	30	10030	88
+NULL	NULL	NULL	35	10035	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	NULL	NULL	NULL
 30	10030	66	NULL	NULL	NULL
-NULL	NULL	NULL	30	10030	88
 35	10035	88	NULL	NULL	NULL
-NULL	NULL	NULL	35	10035	88
+40	10040	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 40	10040	88	NULL	NULL	NULL
-40	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 40	10040	88	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 50	10050	66	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
-50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
-50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 60	10040	66	60	10040	66
@@ -1226,51 +1230,47 @@ NULL	NULL	NULL	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-32_785_5133007163551739713/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-23_143_7365789185585936046/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-32_785_5133007163551739713/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-23_143_7365789185585936046/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
 30	10030	66	30	10030	88
 35	10035	88	35	10035	88
 40	10040	66	40	10040	66
-40	10040	88	40	10040	66
 40	10040	66	40	10040	88
+40	10040	88	40	10040	66
 40	10040	88	40	10040	88
-50	10050	66	50	10050	88
-50	10050	88	50	10050	88
-50	10050	88	50	10050	88
 50	10050	66	50	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
-50	10050	66	50	10050	66
 50	10050	88	50	10050	66
 50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
@@ -1283,45 +1283,49 @@ NULL	NULL	NULL	10	10010	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
 80	10040	88	80	10040	66
-PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@join_1to1_1
 PREHOOK: Input: default@join_1to1_2
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-43_923_6388278859724005632/-mr-10000
-POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-32_276_2421159655613584347/-mr-10000
+POSTHOOK: query: SELECT * FROM join_1to1_1 a full outer join join_1to1_2 b on a.key1 = b.key1 and a.key2 = b.key2 and a.value = 66 and b.value = 66 ORDER BY a.key1 ASC, a.key2 ASC, a.value ASC, b.key1 ASC, b.key2 ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@join_1to1_1
 POSTHOOK: Input: default@join_1to1_2
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-43_923_6388278859724005632/-mr-10000
-NULL	NULL	66	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-32_276_2421159655613584347/-mr-10000
 NULL	NULL	NULL	NULL	NULL	66
-NULL	10050	66	NULL	NULL	NULL
 NULL	NULL	NULL	NULL	10050	66
-5	10005	66	5	10005	66
 NULL	NULL	NULL	10	10010	66
+NULL	NULL	NULL	30	10030	88
+NULL	NULL	NULL	35	10035	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	40	10040	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	50	10050	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	NULL	70	10040	88
+NULL	NULL	66	NULL	NULL	NULL
+NULL	10050	66	NULL	NULL	NULL
+5	10005	66	5	10005	66
 15	10015	66	NULL	NULL	NULL
 20	10020	66	20	10020	66
 25	10025	88	NULL	NULL	NULL
 30	10030	66	NULL	NULL	NULL
-NULL	NULL	NULL	30	10030	88
 35	10035	88	NULL	NULL	NULL
-NULL	NULL	NULL	35	10035	88
+40	10040	66	NULL	NULL	NULL
 40	10040	66	40	10040	66
 40	10040	88	NULL	NULL	NULL
-40	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 40	10040	88	NULL	NULL	NULL
-NULL	NULL	NULL	40	10040	88
 50	10050	66	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
+50	10050	66	50	10050	66
+50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
 50	10050	88	NULL	NULL	NULL
-NULL	NULL	NULL	50	10050	88
-50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
-50	10050	66	50	10050	66
 50	10050	88	NULL	NULL	NULL
 50	10050	88	NULL	NULL	NULL
 60	10040	66	60	10040	66
@@ -1329,13 +1333,9 @@ NULL	NULL	NULL	50	10050	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 70	10040	66	NULL	NULL	NULL
-NULL	NULL	NULL	70	10040	88
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
 80	10040	88	NULL	NULL	NULL
diff --git a/src/ql/src/test/results/clientpositive/join_casesensitive.q.out b/src/ql/src/test/results/clientpositive/join_casesensitive.q.out
index 6684031..f03ccd6 100644
--- a/src/ql/src/test/results/clientpositive/join_casesensitive.q.out
+++ b/src/ql/src/test/results/clientpositive/join_casesensitive.q.out
@@ -20,98 +20,98 @@ PREHOOK: Output: default@jointwo
 POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/in6.txt' INTO TABLE joinTwo
 POSTHOOK: type: LOAD
 POSTHOOK: Output: default@jointwo
-PREHOOK: query: SELECT * FROM joinone JOIN joinTwo ON(joinone.key2=joinTwo.key2)
+PREHOOK: query: SELECT * FROM joinone JOIN joinTwo ON(joinone.key2=joinTwo.key2) ORDER BY joinone.key1 ASC, joinone.key2 ASC, joinone.value ASC, joinTwo.key1 ASC, joinTwo.key2 ASC, joinTwo.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@joinone
 PREHOOK: Input: default@jointwo
-PREHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-58_179_9014420791983887840/-mr-10000
-POSTHOOK: query: SELECT * FROM joinone JOIN joinTwo ON(joinone.key2=joinTwo.key2)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-43_397_1240946167700618963/-mr-10000
+POSTHOOK: query: SELECT * FROM joinone JOIN joinTwo ON(joinone.key2=joinTwo.key2) ORDER BY joinone.key1 ASC, joinone.key2 ASC, joinone.value ASC, joinTwo.key1 ASC, joinTwo.key2 ASC, joinTwo.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@joinone
 POSTHOOK: Input: default@jointwo
-POSTHOOK: Output: file:/var/folders/67/67R3POPtF90VG63KSmCbcU++F0U/-Tmp-/krishnak/hive_2011-03-21_00-25-58_179_9014420791983887840/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-43_397_1240946167700618963/-mr-10000
+NULL	10050	66	NULL	10050	66
+NULL	10050	66	50	10050	66
+NULL	10050	66	50	10050	66
+NULL	10050	66	50	10050	88
 5	10005	66	5	10005	66
 20	10020	66	20	10020	66
 25	10025	88	25	10025	66
 30	10030	66	30	10030	88
 35	10035	88	35	10035	88
-80	10040	88	80	10040	66
-80	10040	88	80	10040	66
-80	10040	88	40	10040	66
-80	10040	88	40	10040	88
-80	10040	88	60	10040	66
-80	10040	88	60	10040	66
-80	10040	88	70	10040	88
-80	10040	88	70	10040	88
-80	10040	88	80	10040	66
-80	10040	88	80	10040	66
-80	10040	88	40	10040	66
-80	10040	88	40	10040	88
-80	10040	88	60	10040	66
-80	10040	88	60	10040	66
-80	10040	88	70	10040	88
-80	10040	88	70	10040	88
-40	10040	66	80	10040	66
-40	10040	66	80	10040	66
 40	10040	66	40	10040	66
 40	10040	66	40	10040	88
 40	10040	66	60	10040	66
 40	10040	66	60	10040	66
 40	10040	66	70	10040	88
 40	10040	66	70	10040	88
-40	10040	88	80	10040	66
-40	10040	88	80	10040	66
+40	10040	66	80	10040	66
+40	10040	66	80	10040	66
 40	10040	88	40	10040	66
 40	10040	88	40	10040	88
 40	10040	88	60	10040	66
 40	10040	88	60	10040	66
 40	10040	88	70	10040	88
 40	10040	88	70	10040	88
-60	10040	66	80	10040	66
-60	10040	66	80	10040	66
+40	10040	88	80	10040	66
+40	10040	88	80	10040	66
+50	10050	66	NULL	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	66
+50	10050	66	50	10050	88
+50	10050	88	NULL	10050	66
+50	10050	88	NULL	10050	66
+50	10050	88	50	10050	66
+50	10050	88	50	10050	66
+50	10050	88	50	10050	66
+50	10050	88	50	10050	66
+50	10050	88	50	10050	88
+50	10050	88	50	10050	88
+60	10040	66	40	10040	66
 60	10040	66	40	10040	66
 60	10040	66	40	10040	88
+60	10040	66	40	10040	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
-60	10040	66	70	10040	88
-60	10040	66	70	10040	88
-60	10040	66	80	10040	66
-60	10040	66	80	10040	66
-60	10040	66	40	10040	66
-60	10040	66	40	10040	88
 60	10040	66	60	10040	66
 60	10040	66	60	10040	66
 60	10040	66	70	10040	88
 60	10040	66	70	10040	88
-70	10040	66	80	10040	66
-70	10040	66	80	10040	66
+60	10040	66	70	10040	88
+60	10040	66	70	10040	88
+60	10040	66	80	10040	66
+60	10040	66	80	10040	66
+60	10040	66	80	10040	66
+60	10040	66	80	10040	66
+70	10040	66	40	10040	66
 70	10040	66	40	10040	66
 70	10040	66	40	10040	88
+70	10040	66	40	10040	88
 70	10040	66	60	10040	66
 70	10040	66	60	10040	66
-70	10040	66	70	10040	88
-70	10040	66	70	10040	88
-70	10040	66	80	10040	66
-70	10040	66	80	10040	66
-70	10040	66	40	10040	66
-70	10040	66	40	10040	88
 70	10040	66	60	10040	66
 70	10040	66	60	10040	66
 70	10040	66	70	10040	88
 70	10040	66	70	10040	88
-50	10050	88	50	10050	66
-50	10050	88	50	10050	66
-50	10050	88	NULL	10050	66
-50	10050	88	50	10050	88
-50	10050	88	50	10050	66
-50	10050	88	50	10050	66
-50	10050	88	NULL	10050	66
-50	10050	88	50	10050	88
-NULL	10050	66	50	10050	66
-NULL	10050	66	50	10050	66
-NULL	10050	66	NULL	10050	66
-NULL	10050	66	50	10050	88
-50	10050	66	50	10050	66
-50	10050	66	50	10050	66
-50	10050	66	NULL	10050	66
-50	10050	66	50	10050	88
+70	10040	66	70	10040	88
+70	10040	66	70	10040	88
+70	10040	66	80	10040	66
+70	10040	66	80	10040	66
+70	10040	66	80	10040	66
+70	10040	66	80	10040	66
+80	10040	88	40	10040	66
+80	10040	88	40	10040	66
+80	10040	88	40	10040	88
+80	10040	88	40	10040	88
+80	10040	88	60	10040	66
+80	10040	88	60	10040	66
+80	10040	88	60	10040	66
+80	10040	88	60	10040	66
+80	10040	88	70	10040	88
+80	10040	88	70	10040	88
+80	10040	88	70	10040	88
+80	10040	88	70	10040	88
+80	10040	88	80	10040	66
+80	10040	88	80	10040	66
+80	10040	88	80	10040	66
+80	10040	88	80	10040	66
diff --git a/src/ql/src/test/results/clientpositive/join_filters.q.out b/src/ql/src/test/results/clientpositive/join_filters.q.out
index 6e1b103..a62aa04 100644
--- a/src/ql/src/test/results/clientpositive/join_filters.q.out
+++ b/src/ql/src/test/results/clientpositive/join_filters.q.out
@@ -9,499 +9,499 @@ PREHOOK: Output: default@myinput1
 POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/in3.txt' INTO TABLE myinput1
 POSTHOOK: type: LOAD
 POSTHOOK: Output: default@myinput1
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-06_136_4143846511241372518/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-53_959_4678848543117504855/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-06_136_4143846511241372518/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-10-53_959_4678848543117504855/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-09_433_7189440681974829938/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-03_025_7955462004282010855/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-09_433_7189440681974829938/-mr-10000
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-03_025_7955462004282010855/-mr-10000
 NULL	40	NULL	NULL
+12	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-12_665_9088599536872679440/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-12_100_6983040145015177293/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-12_665_9088599536872679440/-mr-10000
-NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-12_100_6983040145015177293/-mr-10000
 NULL	NULL	NULL	40
+NULL	NULL	12	35
 NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-15_830_1271135940833886593/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-21_141_5185531257242427094/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-15_830_1271135940833886593/-mr-10000
-12	35	NULL	NULL
-NULL	NULL	12	35
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-21_141_5185531257242427094/-mr-10000
 NULL	NULL	NULL	40
-12	35	NULL	NULL
+NULL	NULL	NULL	40
+NULL	NULL	NULL	40
+NULL	NULL	NULL	40
+NULL	NULL	12	35
+NULL	NULL	12	35
+NULL	NULL	12	35
+NULL	NULL	12	35
+NULL	NULL	48	NULL
+NULL	NULL	48	NULL
+NULL	NULL	48	NULL
 NULL	NULL	48	NULL
-12	35	NULL	NULL
 NULL	40	NULL	NULL
-NULL	NULL	12	35
 NULL	40	NULL	NULL
-NULL	NULL	NULL	40
 NULL	40	NULL	NULL
-NULL	NULL	48	NULL
 NULL	40	NULL	NULL
+12	35	NULL	NULL
+12	35	NULL	NULL
+12	35	NULL	NULL
+12	35	NULL	NULL
 48	NULL	NULL	NULL
-NULL	NULL	12	35
 48	NULL	NULL	NULL
-NULL	NULL	NULL	40
 48	NULL	NULL	NULL
-NULL	NULL	48	NULL
 48	NULL	NULL	NULL
 100	100	NULL	NULL
-NULL	NULL	12	35
 100	100	NULL	NULL
-NULL	NULL	NULL	40
 100	100	NULL	NULL
-NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-18_878_3532846243449616595/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-30_330_3788413488391769992/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-18_878_3532846243449616595/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-30_330_3788413488391769992/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-22_233_6994098195191731464/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-39_405_2758170420131898392/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-22_233_6994098195191731464/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-39_405_2758170420131898392/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-25_574_6597803804460994978/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-48_617_8714153075559321840/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-25_574_6597803804460994978/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-48_617_8714153075559321840/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-28_986_6379633371801675289/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-57_671_5251740170706163625/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-28_986_6379633371801675289/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-11-57_671_5251740170706163625/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-32_362_6085738342464540501/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-06_741_5172687860565306741/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-32_362_6085738342464540501/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-06_741_5172687860565306741/-mr-10000
 NULL	40	NULL	NULL
 12	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-35_511_544116862832187719/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-16_006_4048631933921695035/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-35_511_544116862832187719/-mr-10000
-48	NULL	NULL	NULL
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-16_006_4048631933921695035/-mr-10000
 NULL	40	NULL	NULL
+12	35	NULL	NULL
+48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-38_685_1149288483005211240/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-24_963_4815857239765076463/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-38_685_1149288483005211240/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-24_963_4815857239765076463/-mr-10000
 NULL	40	NULL	NULL
 12	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-41_885_707888279821370106/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-34_144_8059340765002036479/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-41_885_707888279821370106/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-34_144_8059340765002036479/-mr-10000
 NULL	40	NULL	NULL
 12	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-45_124_3257578565836640964/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-43_197_3407865851415822388/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-45_124_3257578565836640964/-mr-10000
-NULL	NULL	48	NULL
-NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-43_197_3407865851415822388/-mr-10000
 NULL	NULL	NULL	40
+NULL	NULL	12	35
+NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-48_354_2150111331178622358/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-52_358_1943945651950396591/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-48_354_2150111331178622358/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-12-52_358_1943945651950396591/-mr-10000
 NULL	NULL	NULL	40
 NULL	NULL	12	35
 NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-51_581_8696089538536072161/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-01_464_7114755242792932651/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-51_581_8696089538536072161/-mr-10000
-NULL	NULL	48	NULL
-NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-01_464_7114755242792932651/-mr-10000
 NULL	NULL	NULL	40
+NULL	NULL	12	35
+NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-54_822_8412990568576543856/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-10_599_7122215970373956220/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-54_822_8412990568576543856/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-10_599_7122215970373956220/-mr-10000
 NULL	NULL	NULL	40
 NULL	NULL	12	35
 NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-58_030_2491986575362784430/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-19_612_5962551300955095299/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-44-58_030_2491986575362784430/-mr-10000
-NULL	40	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-19_612_5962551300955095299/-mr-10000
+NULL	NULL	NULL	40
+NULL	NULL	12	35
 NULL	NULL	48	NULL
+NULL	40	NULL	NULL
 12	35	NULL	NULL
-NULL	NULL	12	35
-NULL	NULL	NULL	40
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-01_095_8317599983660190105/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-28_641_6195156976360514519/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-01_095_8317599983660190105/-mr-10000
-NULL	40	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-28_641_6195156976360514519/-mr-10000
 NULL	NULL	NULL	40
-12	35	NULL	NULL
 NULL	NULL	12	35
-48	NULL	NULL	NULL
 NULL	NULL	48	NULL
+NULL	40	NULL	NULL
+12	35	NULL	NULL
+48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-04_391_5299382650187500025/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-37_632_5623116073571922212/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-04_391_5299382650187500025/-mr-10000
-48	NULL	NULL	NULL
-NULL	NULL	48	NULL
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-37_632_5623116073571922212/-mr-10000
+NULL	NULL	NULL	40
 NULL	NULL	12	35
+NULL	NULL	48	NULL
 NULL	40	NULL	NULL
-NULL	NULL	NULL	40
+12	35	NULL	NULL
+48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-07_466_7652504035197567640/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-46_619_7290674563298782372/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-07_466_7652504035197567640/-mr-10000
-48	NULL	NULL	NULL
-NULL	NULL	48	NULL
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-46_619_7290674563298782372/-mr-10000
+NULL	NULL	NULL	40
 NULL	NULL	12	35
+NULL	NULL	48	NULL
 NULL	40	NULL	NULL
-NULL	NULL	NULL	40
+12	35	NULL	NULL
+48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-10_598_885633603452934425/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-55_667_430473894480487629/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-10_598_885633603452934425/-mr-10000
-NULL	NULL	NULL	NULL	48	NULL
-NULL	NULL	NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-13-55_667_430473894480487629/-mr-10000
 NULL	NULL	NULL	NULL	NULL	40
+NULL	NULL	NULL	NULL	12	35
+NULL	NULL	NULL	NULL	48	NULL
 100	100	100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-14_080_106178965867945841/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-05_055_4545479006314769628/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-14_080_106178965867945841/-mr-10000
-NULL	NULL	48	NULL	NULL	NULL
-NULL	NULL	12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-05_055_4545479006314769628/-mr-10000
 NULL	NULL	NULL	40	NULL	NULL
+NULL	NULL	12	35	NULL	NULL
+NULL	NULL	48	NULL	NULL	NULL
 100	100	100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-17_446_7684947086572213100/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-14_255_6157226682735356933/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-17_446_7684947086572213100/-mr-10000
-NULL	NULL	NULL	NULL	48	NULL
-NULL	NULL	NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-14_255_6157226682735356933/-mr-10000
 NULL	NULL	NULL	NULL	NULL	40
+NULL	NULL	NULL	NULL	12	35
+NULL	NULL	NULL	NULL	48	NULL
 100	100	100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-23_680_3262053415382620684/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-27_901_7440551648111417769/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-23_680_3262053415382620684/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-27_901_7440551648111417769/-mr-10000
 NULL	NULL	NULL	NULL	NULL	40
 NULL	NULL	NULL	NULL	12	35
 NULL	NULL	NULL	NULL	48	NULL
 100	100	100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-29_856_6682437525814712267/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-41_719_1859940648407277632/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-29_856_6682437525814712267/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-41_719_1859940648407277632/-mr-10000
 NULL	NULL	NULL	40	NULL	NULL
 NULL	NULL	12	35	NULL	NULL
 NULL	NULL	48	NULL	NULL	NULL
 100	100	100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-36_039_4555944124585381366/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-55_369_8074987097157483776/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-36_039_4555944124585381366/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-14-55_369_8074987097157483776/-mr-10000
 NULL	NULL	NULL	NULL	NULL	40
 NULL	NULL	NULL	NULL	12	35
 NULL	NULL	NULL	NULL	48	NULL
 100	100	100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-42_344_7752472248205741272/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-09_129_4519335629855179347/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-42_344_7752472248205741272/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-09_129_4519335629855179347/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-47_156_3000640606644703172/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-20_485_2798776265117549064/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-47_156_3000640606644703172/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-20_485_2798776265117549064/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-51_887_6272924293068046055/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-31_930_2485746093976885286/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-51_887_6272924293068046055/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-31_930_2485746093976885286/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-56_687_7414851528519775884/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-43_299_2760432052539022109/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-45-56_687_7414851528519775884/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-43_299_2760432052539022109/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-01_434_1059166710761631132/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-54_566_2804678894376754194/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-01_434_1059166710761631132/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-15-54_566_2804678894376754194/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-06_361_4562919212727642846/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-06_026_7846170071933661330/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-06_361_4562919212727642846/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-06_026_7846170071933661330/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-11_147_1680966912701228192/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-17_258_3909028066393320133/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-11_147_1680966912701228192/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-17_258_3909028066393320133/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-15_949_1624174600330032018/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-28_576_3218835035704700217/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-15_949_1624174600330032018/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-28_576_3218835035704700217/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-20_664_8491129607272453705/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-40_000_1016545606411675617/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-20_664_8491129607272453705/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-40_000_1016545606411675617/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-25_513_4224511617689287644/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-51_262_7242543282403073102/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-25_513_4224511617689287644/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-16-51_262_7242543282403073102/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-30_220_67098539288775048/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-02_434_753066470854534431/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-30_220_67098539288775048/-mr-10000
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-02_434_753066470854534431/-mr-10000
 NULL	40	NULL	NULL
+12	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-34_793_5760059310316545585/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-13_793_7841839638939668810/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-34_793_5760059310316545585/-mr-10000
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-13_793_7841839638939668810/-mr-10000
 NULL	40	NULL	NULL
+12	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-39_582_2295273658887545219/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-25_015_8294910576752480714/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-39_582_2295273658887545219/-mr-10000
-12	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-25_015_8294910576752480714/-mr-10000
 NULL	40	NULL	NULL
+12	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-44_106_6520083975788694086/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-36_184_1295990012733783115/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-44_106_6520083975788694086/-mr-10000
-NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-36_184_1295990012733783115/-mr-10000
 NULL	NULL	NULL	40
+NULL	NULL	12	35
 NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-48_680_1951899355843153482/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-47_586_5056930489466838568/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-48_680_1951899355843153482/-mr-10000
-NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-47_586_5056930489466838568/-mr-10000
 NULL	NULL	NULL	40
+NULL	NULL	12	35
 NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-53_170_108523947288581180/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-58_922_4969260413229633952/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-53_170_108523947288581180/-mr-10000
-NULL	NULL	12	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-17-58_922_4969260413229633952/-mr-10000
 NULL	NULL	NULL	40
+NULL	NULL	12	35
 NULL	NULL	48	NULL
 100	100	100	100
 PREHOOK: query: CREATE TABLE smb_input1(key int, value int) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
@@ -538,701 +538,701 @@ PREHOOK: Output: default@smb_input2
 POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/in2.txt' into table smb_input2
 POSTHOOK: type: LOAD
 POSTHOOK: Output: default@smb_input2
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-58_357_4410746196388529643/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-12_244_6851421972122657862/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-46-58_357_4410746196388529643/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-12_244_6851421972122657862/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-04_623_136301650446568614/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-21_508_512221184151722667/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-04_623_136301650446568614/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-21_508_512221184151722667/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-10_752_1058236029688315919/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-30_742_1804652164056337460/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-10_752_1058236029688315919/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-30_742_1804652164056337460/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-16_916_1092744910970124174/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-40_106_8700430376677863339/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-16_916_1092744910970124174/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-40_106_8700430376677863339/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-24_586_7857432656478650955/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-51_764_659640421231245124/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-24_586_7857432656478650955/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-18-51_764_659640421231245124/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-30_720_7904050561289148368/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-01_053_6048968085954304272/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-30_720_7904050561289148368/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-01_053_6048968085954304272/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-36_916_8423768264941006608/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-10_445_485676876031056349/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-36_916_8423768264941006608/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-10_445_485676876031056349/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-43_196_4065139396897125942/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-19_792_1447393646057628788/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-43_196_4065139396897125942/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-19_792_1447393646057628788/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-50_733_6403411767020866728/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-31_446_5974271916583665146/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-50_733_6403411767020866728/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-31_446_5974271916583665146/-mr-10000
 NULL	35	NULL	NULL
 NULL	135	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
 148	NULL	NULL	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-56_574_8897305587629170811/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-40_600_2876988171248751966/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-47-56_574_8897305587629170811/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-40_600_2876988171248751966/-mr-10000
 NULL	35	NULL	NULL
 NULL	135	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
 148	NULL	NULL	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-02_615_7738591212922193635/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-50_046_1232028144267716385/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-02_615_7738591212922193635/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-50_046_1232028144267716385/-mr-10000
 NULL	35	NULL	NULL
 NULL	135	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
 148	NULL	NULL	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-09_578_2819459856675549263/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-59_036_6143289660458100755/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-09_578_2819459856675549263/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-19-59_036_6143289660458100755/-mr-10000
 NULL	NULL	NULL	35
 NULL	NULL	NULL	135
 NULL	NULL	48	NULL
-100	100	100	100
 NULL	NULL	148	NULL
+100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-15_678_7989214657758158675/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-08_202_1931727438363530421/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-15_678_7989214657758158675/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-08_202_1931727438363530421/-mr-10000
 NULL	NULL	NULL	35
 NULL	NULL	NULL	135
 NULL	NULL	48	NULL
-100	100	100	100
 NULL	NULL	148	NULL
+100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-21_684_3762882030995349462/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-17_529_6420589679015562850/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-21_684_3762882030995349462/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-17_529_6420589679015562850/-mr-10000
 NULL	NULL	NULL	35
 NULL	NULL	NULL	135
 NULL	NULL	48	NULL
-100	100	100	100
 NULL	NULL	148	NULL
+100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-27_690_1784282160213529590/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-26_716_7047061978719578315/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-27_690_1784282160213529590/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-26_716_7047061978719578315/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-31_021_946367346878570546/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-35_699_6458114689162875930/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-31_021_946367346878570546/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-35_699_6458114689162875930/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-34_336_510259150180637113/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-44_773_450532957707665629/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-34_336_510259150180637113/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-44_773_450532957707665629/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-37_702_5832656268512018362/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-53_764_4865977989247533500/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-37_702_5832656268512018362/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-20-53_764_4865977989247533500/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-41_042_4285249128483802222/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-02_840_6177533646503709884/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-41_042_4285249128483802222/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-02_840_6177533646503709884/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-44_383_1208586959150192391/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-11_941_9018576475178578256/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-44_383_1208586959150192391/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-11_941_9018576475178578256/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-47_682_364622404756473602/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-20_990_405293266815507860/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-47_682_364622404756473602/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-20_990_405293266815507860/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-51_006_3011244914112855742/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-30_094_9024863239113366268/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-51_006_3011244914112855742/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-30_094_9024863239113366268/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-54_297_8705846383423486569/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-39_313_9204772333498501702/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-54_297_8705846383423486569/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-39_313_9204772333498501702/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-57_685_374703154744371465/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-48_412_8412958173598721995/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-48-57_685_374703154744371465/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-48_412_8412958173598721995/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-01_011_6839633605728286422/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-57_658_1169520686612655816/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-01_011_6839633605728286422/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-21-57_658_1169520686612655816/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-04_596_3573609674387803717/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-06_706_63065923182054906/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-04_596_3573609674387803717/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-06_706_63065923182054906/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-07_945_8534741666426166888/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-15_783_5147226451823934489/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-07_945_8534741666426166888/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-15_783_5147226451823934489/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-11_294_6032335903681077285/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-24_992_8720447994563042781/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-11_294_6032335903681077285/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-24_992_8720447994563042781/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-14_726_8555187910536941756/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-34_060_1869401985004643637/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-14_726_8555187910536941756/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-34_060_1869401985004643637/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-18_017_6301282797429353925/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-43_163_2349492542266347806/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-18_017_6301282797429353925/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-43_163_2349492542266347806/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-21_357_2841670204580514025/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-52_231_6661876364521137452/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-21_357_2841670204580514025/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-22-52_231_6661876364521137452/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-24_755_8132657499354992728/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-01_273_8020179056918605608/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-24_755_8132657499354992728/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-01_273_8020179056918605608/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-28_104_6053158237627871629/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-10_520_733575737127065087/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-28_104_6053158237627871629/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-10_520_733575737127065087/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-31_428_3598373408269159568/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-19_563_4497554766664418026/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-31_428_3598373408269159568/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-19_563_4497554766664418026/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-34_792_1742599569390613581/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-28_599_3287897916743793306/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-34_792_1742599569390613581/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-28_599_3287897916743793306/-mr-10000
 100	100	100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-38_707_1963361830909941081/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-38_020_831619887240654650/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-38_707_1963361830909941081/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-38_020_831619887240654650/-mr-10000
 100	100	100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-42_521_1920588452949442346/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-47_277_4921816655377056361/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-42_521_1920588452949442346/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-23-47_277_4921816655377056361/-mr-10000
 100	100	100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-48_853_2438513917811181873/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-01_015_5428076780169954671/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) RIGHT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-48_853_2438513917811181873/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-01_015_5428076780169954671/-mr-10000
 100	100	100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-55_161_5067934554246919181/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-14_868_4456222603368078072/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) LEFT OUTER JOIN myinput1 c ON (b.key=c.key AND c.key > 40 AND c.value > 50 AND c.key = c.value AND b.key > 40 AND b.value > 50 AND b.key = b.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-49-55_161_5067934554246919181/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-14_868_4456222603368078072/-mr-10000
 100	100	100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-01_509_5163028637857415879/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-28_761_4991733785595769500/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.key = c.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value AND c.key > 40 AND c.value > 50 AND c.key = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC, c.key ASC, c.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-01_509_5163028637857415879/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-28_761_4991733785595769500/-mr-10000
 100	100	100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-07_986_1795600033483355845/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-42_425_3191908778343386586/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-07_986_1795600033483355845/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-42_425_3191908778343386586/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-12_725_854333558018185248/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-53_776_5861047209286791448/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-12_725_854333558018185248/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-24-53_776_5861047209286791448/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-17_632_8535359375505387500/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-05_185_7378288352901213104/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-17_632_8535359375505387500/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-05_185_7378288352901213104/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-22_480_4965365049708514038/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-16_507_2255965753302446051/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-22_480_4965365049708514038/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-16_507_2255965753302446051/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-27_361_5571150512518677258/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-27_754_3568291978943817744/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-27_361_5571150512518677258/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-27_754_3568291978943817744/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-32_148_7783623952962090796/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-39_030_8983659429007957665/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b on a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-32_148_7783623952962090796/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-39_030_8983659429007957665/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-37_030_6268089223908465244/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-50_410_8626952465170670124/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-37_030_6268089223908465244/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-25-50_410_8626952465170670124/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-41_811_5879086134579387109/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-01_753_7223216214999156176/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-41_811_5879086134579387109/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-01_753_7223216214999156176/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-46_677_3850263582433173924/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-13_156_8723193410616854854/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-46_677_3850263582433173924/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-13_156_8723193410616854854/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-51_592_292250382887640847/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-24_516_2338813158107483013/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-51_592_292250382887640847/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-24_516_2338813158107483013/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-56_430_1456181398611365497/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-35_898_2147972681343842028/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-50-56_430_1456181398611365497/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-35_898_2147972681343842028/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-01_822_1476298036912727173/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-47_170_3170066195413759261/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-01_822_1476298036912727173/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-47_170_3170066195413759261/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-06_587_126596666314668330/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-58_727_2987204214739338024/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-06_587_126596666314668330/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-26-58_727_2987204214739338024/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-11_316_9029076326461454086/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-10_053_850342490728241151/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-11_316_9029076326461454086/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-10_053_850342490728241151/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-16_080_2825468055135352667/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-21_432_7614933887616750977/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-16_080_2825468055135352667/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-21_432_7614933887616750977/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-20_888_4151447393988126110/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-32_639_7662659482817301151/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-20_888_4151447393988126110/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-32_639_7662659482817301151/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-25_726_4906285317853368172/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-43_995_9192471144908001961/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-25_726_4906285317853368172/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-43_995_9192471144908001961/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-31_890_7529438522875372563/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-53_274_1535413780299996749/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-31_890_7529438522875372563/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-27-53_274_1535413780299996749/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-38_039_4504236148311762421/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-02_662_2673397316834601572/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-38_039_4504236148311762421/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-02_662_2673397316834601572/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-44_162_8368031401815393904/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-11_910_2230649725644383258/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-44_162_8368031401815393904/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-11_910_2230649725644383258/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-51_797_2058037768345100446/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-23_488_3723967833036628653/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-51_797_2058037768345100446/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-23_488_3723967833036628653/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-57_954_8794372203787276138/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-32_790_6251585465454407541/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-51-57_954_8794372203787276138/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-32_790_6251585465454407541/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-04_195_677114452616545890/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-42_103_959524367229687286/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-04_195_677114452616545890/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-42_103_959524367229687286/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-10_373_3115432485475023996/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-51_393_8453479327129845878/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.key = b.key AND a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-10_373_3115432485475023996/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-28-51_393_8453479327129845878/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-18_017_2031997709825416685/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-03_091_2305320656868727270/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-18_017_2031997709825416685/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-03_091_2305320656868727270/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-24_114_4419385509805939031/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-12_224_95891984999469612/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-24_114_4419385509805939031/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-12_224_95891984999469612/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-30_349_3521317947953359344/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-21_539_4396901802595775198/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-30_349_3521317947953359344/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-21_539_4396901802595775198/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-36_525_5962374720111863311/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-30_772_2533535102563895229/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-36_525_5962374720111863311/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-30_772_2533535102563895229/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-42_835_6559370006918693101/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-40_009_6656397578789142643/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-42_835_6559370006918693101/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-40_009_6656397578789142643/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-49_013_6526238162755486517/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-49_321_185551890620852609/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value AND a.key > 40 AND a.value > 50 AND a.key = a.value AND b.key > 40 AND b.value > 50 AND b.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-52-49_013_6526238162755486517/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-29-49_321_185551890620852609/-mr-10000
 100	100	100	100
 200	200	200	200
diff --git a/src/ql/src/test/results/clientpositive/join_nulls.q.out b/src/ql/src/test/results/clientpositive/join_nulls.q.out
index 8837194..a174c82 100644
--- a/src/ql/src/test/results/clientpositive/join_nulls.q.out
+++ b/src/ql/src/test/results/clientpositive/join_nulls.q.out
@@ -9,14 +9,14 @@ PREHOOK: Output: default@myinput1
 POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/in1.txt' INTO TABLE myinput1
 POSTHOOK: type: LOAD
 POSTHOOK: Output: default@myinput1
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-31_683_8641177538651570201/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-00_155_1065279200896394997/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-31_683_8641177538651570201/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-00_155_1065279200896394997/-mr-10000
 NULL	35	NULL	35
 NULL	35	48	NULL
 NULL	35	100	100
@@ -26,14 +26,14 @@ NULL	35	100	100
 100	100	NULL	35
 100	100	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-34_705_7891360827662899707/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-09_107_6219504485374900607/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-34_705_7891360827662899707/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-09_107_6219504485374900607/-mr-10000
 NULL	35	NULL	35
 NULL	35	48	NULL
 NULL	35	100	100
@@ -43,14 +43,14 @@ NULL	35	100	100
 100	100	NULL	35
 100	100	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-37_744_4114021800417008700/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-18_077_8395373986141377176/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-37_744_4114021800417008700/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-18_077_8395373986141377176/-mr-10000
 NULL	35	NULL	35
 NULL	35	48	NULL
 NULL	35	100	100
@@ -60,364 +60,364 @@ NULL	35	100	100
 100	100	NULL	35
 100	100	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-40_759_3815040582770495358/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-26_966_2608208247926261514/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-40_759_3815040582770495358/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-26_966_2608208247926261514/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-43_808_2759732574228684621/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-35_887_6352854014542098498/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-43_808_2759732574228684621/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-35_887_6352854014542098498/-mr-10000
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-46_947_1207295790379918107/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-45_036_8273388569058282787/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-46_947_1207295790379918107/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-45_036_8273388569058282787/-mr-10000
 NULL	35	NULL	35
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key
+PREHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-49_979_72536747155082974/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-54_122_3835395702549421115/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key=b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-49_979_72536747155082974/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-30-54_122_3835395702549421115/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-53_028_5270841162233231903/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-03_147_4688726784466502666/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-53_028_5270841162233231903/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-03_147_4688726784466502666/-mr-10000
 NULL	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-56_033_2563212770228159974/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-12_172_4295867503780434651/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-56_033_2563212770228159974/-mr-10000
-48	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-12_172_4295867503780434651/-mr-10000
 NULL	35	NULL	35
+48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-59_098_2956450952074441661/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-21_335_7427904362764959214/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-53-59_098_2956450952074441661/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-21_335_7427904362764959214/-mr-10000
 NULL	35	NULL	NULL
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-02_499_2634558695451930427/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-30_369_1290163697190331766/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key and a.value=b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-02_499_2634558695451930427/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-30_369_1290163697190331766/-mr-10000
 NULL	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-05_524_2948137722448172501/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-39_526_6762502167450040009/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-05_524_2948137722448172501/-mr-10000
-NULL	NULL	48	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-39_526_6762502167450040009/-mr-10000
 NULL	NULL	NULL	35
+NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-08_565_8758755781275848937/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-48_661_6365139154266635392/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-08_565_8758755781275848937/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-48_661_6365139154266635392/-mr-10000
 NULL	NULL	NULL	35
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-11_597_4163684755001064006/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-57_594_6215023716125640347/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-11_597_4163684755001064006/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-31-57_594_6215023716125640347/-mr-10000
 NULL	NULL	48	NULL
 NULL	35	NULL	35
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value
+PREHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-14_644_1473757744203304399/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-06_606_9176801495180064845/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key=b.key and a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-14_644_1473757744203304399/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-06_606_9176801495180064845/-mr-10000
 NULL	NULL	NULL	35
 NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-17_701_3233060431500842705/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-15_619_3172302576515651169/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-17_701_3233060431500842705/-mr-10000
-NULL	35	NULL	NULL
-NULL	NULL	48	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-15_619_3172302576515651169/-mr-10000
 NULL	NULL	NULL	35
+NULL	NULL	48	NULL
+NULL	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-20_731_3400521495107335830/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-24_553_3338505480902606936/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-20_731_3400521495107335830/-mr-10000
-NULL	35	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-24_553_3338505480902606936/-mr-10000
 NULL	NULL	NULL	35
+NULL	35	NULL	NULL
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-23_772_8205102532037513591/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-33_722_5259539277405212669/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-23_772_8205102532037513591/-mr-10000
-48	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-33_722_5259539277405212669/-mr-10000
 NULL	NULL	48	NULL
 NULL	35	NULL	35
+48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key
+PREHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-26_795_2591262681463484422/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-42_642_9138491965984266926/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a FULL OUTER JOIN myinput1 b ON a.value = b.value and a.key=b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-26_795_2591262681463484422/-mr-10000
-48	NULL	NULL	NULL
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-42_642_9138491965984266926/-mr-10000
+NULL	NULL	NULL	35
 NULL	NULL	48	NULL
 NULL	35	NULL	NULL
-NULL	NULL	NULL	35
+48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value)
+PREHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-29_952_3907129954364673344/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-51_777_2305197430108520217/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a LEFT OUTER JOIN myinput1 b ON (a.value=b.value) RIGHT OUTER JOIN myinput1 c ON (b.value=c.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-29_952_3907129954364673344/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-32-51_777_2305197430108520217/-mr-10000
 NULL	NULL	NULL	NULL	48	NULL
 NULL	35	NULL	35	NULL	35
 100	100	100	100	100	100
-PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value)
+PREHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-33_142_6823602675610897415/-mr-10000
-POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value)
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-00_920_1566610295463062715/-mr-10000
+POSTHOOK: query: SELECT * from myinput1 a RIGHT OUTER JOIN myinput1 b ON (a.value=b.value) LEFT OUTER JOIN myinput1 c ON (b.value=c.value) ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-33_142_6823602675610897415/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-00_920_1566610295463062715/-mr-10000
 NULL	NULL	48	NULL	NULL	NULL
 NULL	35	NULL	35	NULL	35
 100	100	100	100	100	100
-PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value
+PREHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-36_316_8421887369237695484/-mr-10000
-POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-10_080_5743997104112095408/-mr-10000
+POSTHOOK: query: SELECT * FROM myinput1 a LEFT OUTER JOIN myinput1 b RIGHT OUTER JOIN myinput1 c ON a.value = b.value and b.value = c.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-36_316_8421887369237695484/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-10_080_5743997104112095408/-mr-10000
 NULL	NULL	NULL	NULL	48	NULL
 NULL	35	NULL	35	NULL	35
 100	100	100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-42_314_7832502288070481455/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-23_762_1384396839584486045/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-42_314_7832502288070481455/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-23_762_1384396839584486045/-mr-10000
 NULL	35	NULL	35
-48	NULL	NULL	35
-100	100	NULL	35
 NULL	35	48	NULL
-48	NULL	48	NULL
-100	100	48	NULL
 NULL	35	100	100
+48	NULL	NULL	35
+48	NULL	48	NULL
 48	NULL	100	100
+100	100	NULL	35
+100	100	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-46_762_6120606337889646190/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-34_872_5349492211981650066/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-46_762_6120606337889646190/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-34_872_5349492211981650066/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-51_044_4003336790967485394/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-45_970_6972264736291079679/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-51_044_4003336790967485394/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-45_970_6972264736291079679/-mr-10000
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-55_518_3112283007132020008/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-57_042_6075724759679830793/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-55_518_3112283007132020008/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-33-57_042_6075724759679830793/-mr-10000
 NULL	35	NULL	35
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-59_949_5790066510806491529/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-08_048_4487481088439273698/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-54-59_949_5790066510806491529/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-08_048_4487481088439273698/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-04_795_2786006750968345680/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-19_186_6900931718038462207/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-04_795_2786006750968345680/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-19_186_6900931718038462207/-mr-10000
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-09_243_7699519116048493679/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-30_230_267331547792665089/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-09_243_7699519116048493679/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-30_230_267331547792665089/-mr-10000
 NULL	35	NULL	35
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-13_641_5006098680854899312/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-41_318_5576655835916576655/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a JOIN myinput1 b ON a.value = b.value and a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-13_641_5006098680854899312/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-41_318_5576655835916576655/-mr-10000
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-18_040_7373396463499323566/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-52_508_5694775296329365019/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-18_040_7373396463499323566/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-34-52_508_5694775296329365019/-mr-10000
 NULL	35	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-22_447_6328039718202844843/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-03_691_4747004564963338868/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-22_447_6328039718202844843/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-03_691_4747004564963338868/-mr-10000
 NULL	35	NULL	NULL
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-26_837_6878002404083813297/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-14_935_7381342872591695900/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM myinput1 a LEFT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-26_837_6878002404083813297/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-14_935_7381342872591695900/-mr-10000
 NULL	35	NULL	35
 48	NULL	NULL	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-31_327_4809407974402234126/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-26_079_6260231363642168668/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-31_327_4809407974402234126/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-26_079_6260231363642168668/-mr-10000
 NULL	NULL	NULL	35
 NULL	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-35_742_1654943644282955382/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-37_159_1183159035869695873/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-35_742_1654943644282955382/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-37_159_1183159035869695873/-mr-10000
 NULL	NULL	NULL	35
 48	NULL	48	NULL
 100	100	100	100
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@myinput1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-40_216_7170971377841192858/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-48_314_4152794205712263422/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM myinput1 a RIGHT OUTER JOIN myinput1 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@myinput1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-40_216_7170971377841192858/-mr-10000
-NULL	35	NULL	35
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-35-48_314_4152794205712263422/-mr-10000
 NULL	NULL	48	NULL
+NULL	35	NULL	35
 100	100	100	100
 PREHOOK: query: CREATE TABLE smb_input1(key int, value int) CLUSTERED BY (key) SORTED BY (key) INTO 2 BUCKETS
 PREHOOK: type: CREATETABLE
@@ -453,170 +453,170 @@ PREHOOK: Output: default@smb_input2
 POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/in2.txt' into table smb_input2
 POSTHOOK: type: LOAD
 POSTHOOK: Output: default@smb_input2
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-45_071_1721369920851863145/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-01_699_5669424533514200937/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-45_071_1721369920851863145/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-01_699_5669424533514200937/-mr-10000
 48	NULL	48	NULL
 100	100	100	100
 148	NULL	148	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-52_288_5442108787449062892/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-12_762_4432145388021856116/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key AND a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-52_288_5442108787449062892/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-12_762_4432145388021856116/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-59_488_9220251315068456695/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-24_004_5269873133239386998/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-55-59_488_9220251315068456695/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-24_004_5269873133239386998/-mr-10000
 NULL	NULL	NULL	35
 NULL	NULL	NULL	135
 48	NULL	48	NULL
 100	100	100	100
 148	NULL	148	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-06_798_1515908496616104358/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-35_296_8442116077709444599/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-06_798_1515908496616104358/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-35_296_8442116077709444599/-mr-10000
 48	NULL	48	NULL
 100	100	100	100
 148	NULL	148	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-13_978_37675414267460205/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-46_284_9195203838146673216/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input1 b ON a.key = b.key ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-13_978_37675414267460205/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-46_284_9195203838146673216/-mr-10000
 NULL	35	NULL	NULL
 NULL	135	NULL	NULL
 48	NULL	48	NULL
 100	100	100	100
 148	NULL	148	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-21_231_8292843591044391733/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-57_432_5950392428994773092/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-21_231_8292843591044391733/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-36-57_432_5950392428994773092/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-28_835_6286309168082618901/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-08_666_5468959008093998493/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-28_835_6286309168082618901/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-08_666_5468959008093998493/-mr-10000
 100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-36_026_7352279404756888950/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-19_822_6582233092510741793/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input1 a LEFT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-36_026_7352279404756888950/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-19_822_6582233092510741793/-mr-10000
 NULL	35	NULL	NULL
 NULL	135	NULL	NULL
 48	NULL	NULL	NULL
 100	100	100	100
 148	NULL	NULL	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input1
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-43_251_628261964080538715/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-31_002_91586866624700030/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input1 a RIGHT OUTER JOIN smb_input2 b ON a.key = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input1
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-43_251_628261964080538715/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-31_002_91586866624700030/-mr-10000
 NULL	NULL	NULL	35
 NULL	NULL	NULL	135
 NULL	NULL	48	NULL
-100	100	100	100
 NULL	NULL	148	NULL
+100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-50_368_3840876669646785753/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-42_201_6872733347546056936/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-50_368_3840876669646785753/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-42_201_6872733347546056936/-mr-10000
 NULL	35	NULL	35
-100	100	100	100
 NULL	135	NULL	135
+100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY b.key, b.value
+PREHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-57_464_1575904257589847287/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY b.key, b.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-53_278_6481359685493330815/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(a) */ * FROM smb_input2 a RIGHT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-56-57_464_1575904257589847287/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-37-53_278_6481359685493330815/-mr-10000
+NULL	NULL	48	NULL
+NULL	NULL	148	NULL
 NULL	35	NULL	35
 NULL	135	NULL	135
-NULL	NULL	48	NULL
 100	100	100	100
-NULL	NULL	148	NULL
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-57-04_710_6771480365280106011/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-38-04_470_6908798474263849846/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-57-04_710_6771480365280106011/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-38-04_470_6908798474263849846/-mr-10000
 NULL	35	NULL	35
-100	100	100	100
 NULL	135	NULL	135
+100	100	100	100
 200	200	200	200
-PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key, a.value
+PREHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@smb_input2
-PREHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-57-11_842_9028034862567967736/-mr-10000
-POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key, a.value
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-38-15_535_2028609261092488510/-mr-10000
+POSTHOOK: query: SELECT /*+ MAPJOIN(b) */ * FROM smb_input2 a LEFT OUTER JOIN smb_input2 b ON a.value = b.value ORDER BY a.key ASC, a.value ASC, b.key ASC, b.value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@smb_input2
-POSTHOOK: Output: file:/tmp/krishnak/hive_2011-03-21_03-57-11_842_9028034862567967736/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-38-15_535_2028609261092488510/-mr-10000
 NULL	35	NULL	35
 NULL	135	NULL	135
 48	NULL	NULL	NULL
diff --git a/src/ql/src/test/results/clientpositive/merge3.q.out b/src/ql/src/test/results/clientpositive/merge3.q.out
index 5916fcd..f79acbd 100644
--- a/src/ql/src/test/results/clientpositive/merge3.q.out
+++ b/src/ql/src/test/results/clientpositive/merge3.q.out
@@ -79,9 +79,9 @@ STAGE PLANS:
               File Output Operator
                 compressed: false
                 GlobalTableId: 1
-                directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10002
+                directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10002
                 NumFilesPerFileSink: 1
-                Stats Publishing Key Prefix: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10001/
+                Stats Publishing Key Prefix: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10001/
                 table:
                     input format: org.apache.hadoop.mapred.TextInputFormat
                     output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -96,9 +96,9 @@ STAGE PLANS:
                 MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src [merge_src]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src [merge_src]
       Path -> Partition:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src 
           Partition
             base file name: merge_src
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -109,7 +109,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src
               name default.merge_src
               numFiles 4
               numPartitions 0
@@ -119,7 +119,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 23248
-              transient_lastDdlTime 1320966913
+              transient_lastDdlTime 1327549114
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -130,7 +130,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src
                 name default.merge_src
                 numFiles 4
                 numPartitions 0
@@ -140,7 +140,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 23248
-                transient_lastDdlTime 1320966913
+                transient_lastDdlTime 1327549114
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src
             name: default.merge_src
@@ -152,15 +152,15 @@ STAGE PLANS:
     Move Operator
       files:
           hdfs directory: true
-          source: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10002
-          destination: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10001
+          source: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10002
+          destination: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10001
 
   Stage: Stage-0
     Move Operator
       files:
           hdfs directory: true
-          source: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10001
-          destination: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src2
+          source: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10001
+          destination: pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src2
 
   Stage: Stage-6
       Create Table Operator:
@@ -175,16 +175,16 @@ STAGE PLANS:
 
   Stage: Stage-2
     Stats-Aggr Operator
-      Stats Aggregation Key Prefix: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10001/
+      Stats Aggregation Key Prefix: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10001/
 
   Stage: Stage-3
     Map Reduce
       Alias -> Map Operator Tree:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10002 
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10002 
             File Output Operator
               compressed: false
               GlobalTableId: 0
-              directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10001
+              directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10001
               NumFilesPerFileSink: 1
               table:
                   input format: org.apache.hadoop.mapred.TextInputFormat
@@ -200,9 +200,9 @@ STAGE PLANS:
               MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10002 [pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10002]
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10002 [pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10002]
       Path -> Partition:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-19_753_2586421080662223289/-ext-10002 
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-38-44_051_8101445172455438802/-ext-10002 
           Partition
             base file name: -ext-10002
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -237,2018 +237,2018 @@ POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).key SIMPLE [(srcpart)
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-09).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-09).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: select * from merge_src2
+PREHOOK: query: select * from merge_src2 ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@merge_src2
-PREHOOK: Output: file:/tmp/rsurowka/hive_2011-11-10_15-15-28_320_625694146403262646/-mr-10000
-POSTHOOK: query: select * from merge_src2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-38-55_676_2757737534069998251/-mr-10000
+POSTHOOK: query: select * from merge_src2 ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@merge_src2
-POSTHOOK: Output: file:/tmp/rsurowka/hive_2011-11-10_15-15-28_320_625694146403262646/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-38-55_676_2757737534069998251/-mr-10000
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-09).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-09).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
-238	val_238
-86	val_86
-311	val_311
-27	val_27
-165	val_165
-409	val_409
-255	val_255
-278	val_278
-98	val_98
-484	val_484
-265	val_265
-193	val_193
-401	val_401
-150	val_150
-273	val_273
-224	val_224
-369	val_369
-66	val_66
-128	val_128
-213	val_213
-146	val_146
-406	val_406
-429	val_429
-374	val_374
-152	val_152
-469	val_469
-145	val_145
-495	val_495
-37	val_37
-327	val_327
-281	val_281
-277	val_277
-209	val_209
-15	val_15
-82	val_82
-403	val_403
-166	val_166
-417	val_417
-430	val_430
-252	val_252
-292	val_292
-219	val_219
-287	val_287
-153	val_153
-193	val_193
-338	val_338
-446	val_446
-459	val_459
-394	val_394
-237	val_237
-482	val_482
-174	val_174
-413	val_413
-494	val_494
-207	val_207
-199	val_199
-466	val_466
-208	val_208
-174	val_174
-399	val_399
-396	val_396
-247	val_247
-417	val_417
-489	val_489
-162	val_162
-377	val_377
-397	val_397
-309	val_309
-365	val_365
-266	val_266
-439	val_439
-342	val_342
-367	val_367
-325	val_325
-167	val_167
-195	val_195
-475	val_475
-17	val_17
-113	val_113
-155	val_155
-203	val_203
-339	val_339
 0	val_0
-455	val_455
-128	val_128
-311	val_311
-316	val_316
-57	val_57
-302	val_302
-205	val_205
-149	val_149
-438	val_438
-345	val_345
-129	val_129
-170	val_170
-20	val_20
-489	val_489
-157	val_157
-378	val_378
-221	val_221
-92	val_92
-111	val_111
-47	val_47
-72	val_72
-4	val_4
-280	val_280
-35	val_35
-427	val_427
-277	val_277
-208	val_208
-356	val_356
-399	val_399
-169	val_169
-382	val_382
-498	val_498
-125	val_125
-386	val_386
-437	val_437
-469	val_469
-192	val_192
-286	val_286
-187	val_187
-176	val_176
-54	val_54
-459	val_459
-51	val_51
-138	val_138
-103	val_103
-239	val_239
-213	val_213
-216	val_216
-430	val_430
-278	val_278
-176	val_176
-289	val_289
-221	val_221
-65	val_65
-318	val_318
-332	val_332
-311	val_311
-275	val_275
-137	val_137
-241	val_241
-83	val_83
-333	val_333
-180	val_180
-284	val_284
-12	val_12
-230	val_230
-181	val_181
-67	val_67
-260	val_260
-404	val_404
-384	val_384
-489	val_489
-353	val_353
-373	val_373
-272	val_272
-138	val_138
-217	val_217
-84	val_84
-348	val_348
-466	val_466
-58	val_58
-8	val_8
-411	val_411
-230	val_230
-208	val_208
-348	val_348
-24	val_24
-463	val_463
-431	val_431
-179	val_179
-172	val_172
-42	val_42
-129	val_129
-158	val_158
-119	val_119
-496	val_496
 0	val_0
-322	val_322
-197	val_197
-468	val_468
-393	val_393
-454	val_454
-100	val_100
-298	val_298
-199	val_199
-191	val_191
-418	val_418
-96	val_96
-26	val_26
-165	val_165
-327	val_327
-230	val_230
-205	val_205
-120	val_120
-131	val_131
-51	val_51
-404	val_404
-43	val_43
-436	val_436
-156	val_156
-469	val_469
-468	val_468
-308	val_308
-95	val_95
-196	val_196
-288	val_288
-481	val_481
-457	val_457
-98	val_98
-282	val_282
-197	val_197
-187	val_187
-318	val_318
-318	val_318
-409	val_409
-470	val_470
-137	val_137
-369	val_369
-316	val_316
-169	val_169
-413	val_413
-85	val_85
-77	val_77
 0	val_0
-490	val_490
-87	val_87
-364	val_364
-179	val_179
-118	val_118
-134	val_134
-395	val_395
-282	val_282
-138	val_138
-238	val_238
-419	val_419
-15	val_15
-118	val_118
-72	val_72
-90	val_90
-307	val_307
-19	val_19
-435	val_435
+0	val_0
+0	val_0
+0	val_0
+0	val_0
+0	val_0
+0	val_0
+0	val_0
+0	val_0
+0	val_0
 10	val_10
-277	val_277
-273	val_273
-306	val_306
-224	val_224
-309	val_309
-389	val_389
-327	val_327
-242	val_242
-369	val_369
-392	val_392
-272	val_272
-331	val_331
-401	val_401
-242	val_242
-452	val_452
-177	val_177
-226	val_226
-5	val_5
-497	val_497
-402	val_402
-396	val_396
-317	val_317
-395	val_395
-58	val_58
-35	val_35
-336	val_336
-95	val_95
-11	val_11
-168	val_168
-34	val_34
-229	val_229
-233	val_233
-143	val_143
-472	val_472
-322	val_322
-498	val_498
-160	val_160
-195	val_195
-42	val_42
-321	val_321
-430	val_430
-119	val_119
-489	val_489
-458	val_458
-78	val_78
-76	val_76
-41	val_41
-223	val_223
-492	val_492
-149	val_149
-449	val_449
-218	val_218
-228	val_228
-138	val_138
-453	val_453
-30	val_30
-209	val_209
-64	val_64
-468	val_468
-76	val_76
-74	val_74
-342	val_342
-69	val_69
-230	val_230
-33	val_33
-368	val_368
+10	val_10
+10	val_10
+10	val_10
+100	val_100
+100	val_100
+100	val_100
+100	val_100
+100	val_100
+100	val_100
+100	val_100
+100	val_100
+103	val_103
+103	val_103
+103	val_103
+103	val_103
+103	val_103
+103	val_103
+103	val_103
 103	val_103
-296	val_296
-113	val_113
-216	val_216
-367	val_367
-344	val_344
-167	val_167
-274	val_274
-219	val_219
-239	val_239
-485	val_485
-116	val_116
-223	val_223
-256	val_256
-263	val_263
-70	val_70
-487	val_487
-480	val_480
-401	val_401
-288	val_288
-191	val_191
-5	val_5
-244	val_244
-438	val_438
-128	val_128
-467	val_467
-432	val_432
-202	val_202
-316	val_316
-229	val_229
-469	val_469
-463	val_463
-280	val_280
-2	val_2
-35	val_35
-283	val_283
-331	val_331
-235	val_235
-80	val_80
-44	val_44
-193	val_193
-321	val_321
-335	val_335
 104	val_104
-466	val_466
-366	val_366
-175	val_175
-403	val_403
-483	val_483
-53	val_53
+104	val_104
+104	val_104
+104	val_104
+104	val_104
+104	val_104
+104	val_104
+104	val_104
 105	val_105
-257	val_257
-406	val_406
-409	val_409
-190	val_190
-406	val_406
-401	val_401
+105	val_105
+105	val_105
+105	val_105
+11	val_11
+11	val_11
+11	val_11
+11	val_11
+111	val_111
+111	val_111
+111	val_111
+111	val_111
+113	val_113
+113	val_113
+113	val_113
+113	val_113
+113	val_113
+113	val_113
+113	val_113
+113	val_113
 114	val_114
-258	val_258
-90	val_90
-203	val_203
-262	val_262
-348	val_348
-424	val_424
-12	val_12
-396	val_396
-201	val_201
-217	val_217
-164	val_164
-431	val_431
-454	val_454
-478	val_478
-298	val_298
-125	val_125
-431	val_431
-164	val_164
-424	val_424
-187	val_187
-382	val_382
-5	val_5
-70	val_70
-397	val_397
-480	val_480
-291	val_291
-24	val_24
-351	val_351
-255	val_255
-104	val_104
-70	val_70
-163	val_163
-438	val_438
+114	val_114
+114	val_114
+114	val_114
+116	val_116
+116	val_116
+116	val_116
+116	val_116
+118	val_118
+118	val_118
+118	val_118
+118	val_118
+118	val_118
+118	val_118
+118	val_118
+118	val_118
 119	val_119
-414	val_414
-200	val_200
-491	val_491
-237	val_237
-439	val_439
-360	val_360
-248	val_248
-479	val_479
-305	val_305
-417	val_417
-199	val_199
-444	val_444
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+119	val_119
+12	val_12
+12	val_12
+12	val_12
+12	val_12
+12	val_12
+12	val_12
+12	val_12
+12	val_12
 120	val_120
-429	val_429
-169	val_169
-443	val_443
-323	val_323
-325	val_325
-277	val_277
-230	val_230
-478	val_478
-178	val_178
-468	val_468
-310	val_310
-317	val_317
-333	val_333
-493	val_493
-460	val_460
-207	val_207
-249	val_249
-265	val_265
-480	val_480
-83	val_83
-136	val_136
-353	val_353
-172	val_172
-214	val_214
-462	val_462
-233	val_233
-406	val_406
+120	val_120
+120	val_120
+120	val_120
+120	val_120
+120	val_120
+120	val_120
+120	val_120
+125	val_125
+125	val_125
+125	val_125
+125	val_125
+125	val_125
+125	val_125
+125	val_125
+125	val_125
+126	val_126
+126	val_126
+126	val_126
+126	val_126
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+128	val_128
+129	val_129
+129	val_129
+129	val_129
+129	val_129
+129	val_129
+129	val_129
+129	val_129
+129	val_129
+131	val_131
+131	val_131
+131	val_131
+131	val_131
+133	val_133
+133	val_133
+133	val_133
 133	val_133
-175	val_175
-189	val_189
-454	val_454
-375	val_375
-401	val_401
-421	val_421
-407	val_407
-384	val_384
-256	val_256
-26	val_26
 134	val_134
-67	val_67
-384	val_384
-379	val_379
-18	val_18
-462	val_462
-492	val_492
-100	val_100
-298	val_298
-9	val_9
-341	val_341
-498	val_498
+134	val_134
+134	val_134
+134	val_134
+134	val_134
+134	val_134
+134	val_134
+134	val_134
+136	val_136
+136	val_136
+136	val_136
+136	val_136
+137	val_137
+137	val_137
+137	val_137
+137	val_137
+137	val_137
+137	val_137
+137	val_137
+137	val_137
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+138	val_138
+143	val_143
+143	val_143
+143	val_143
+143	val_143
+145	val_145
+145	val_145
+145	val_145
+145	val_145
 146	val_146
-458	val_458
-362	val_362
-186	val_186
-285	val_285
-348	val_348
-167	val_167
-18	val_18
-273	val_273
-183	val_183
-281	val_281
-344	val_344
-97	val_97
-469	val_469
-315	val_315
-84	val_84
-28	val_28
-37	val_37
-448	val_448
-152	val_152
-348	val_348
-307	val_307
-194	val_194
-414	val_414
-477	val_477
-222	val_222
-126	val_126
-90	val_90
-169	val_169
-403	val_403
-400	val_400
-200	val_200
-97	val_97
-238	val_238
-86	val_86
-311	val_311
-27	val_27
-165	val_165
-409	val_409
-255	val_255
-278	val_278
-98	val_98
-484	val_484
-265	val_265
-193	val_193
-401	val_401
-150	val_150
-273	val_273
-224	val_224
-369	val_369
-66	val_66
-128	val_128
-213	val_213
 146	val_146
-406	val_406
-429	val_429
-374	val_374
-152	val_152
-469	val_469
-145	val_145
-495	val_495
-37	val_37
-327	val_327
-281	val_281
-277	val_277
-209	val_209
+146	val_146
+146	val_146
+146	val_146
+146	val_146
+146	val_146
+146	val_146
+149	val_149
+149	val_149
+149	val_149
+149	val_149
+149	val_149
+149	val_149
+149	val_149
+149	val_149
 15	val_15
-82	val_82
-403	val_403
-166	val_166
-417	val_417
-430	val_430
-252	val_252
-292	val_292
-219	val_219
-287	val_287
+15	val_15
+15	val_15
+15	val_15
+15	val_15
+15	val_15
+15	val_15
+15	val_15
+150	val_150
+150	val_150
+150	val_150
+150	val_150
+152	val_152
+152	val_152
+152	val_152
+152	val_152
+152	val_152
+152	val_152
+152	val_152
+152	val_152
 153	val_153
-193	val_193
-338	val_338
-446	val_446
-459	val_459
-394	val_394
-237	val_237
-482	val_482
-174	val_174
-413	val_413
-494	val_494
-207	val_207
-199	val_199
-466	val_466
-208	val_208
-174	val_174
-399	val_399
-396	val_396
-247	val_247
-417	val_417
-489	val_489
+153	val_153
+153	val_153
+153	val_153
+155	val_155
+155	val_155
+155	val_155
+155	val_155
+156	val_156
+156	val_156
+156	val_156
+156	val_156
+157	val_157
+157	val_157
+157	val_157
+157	val_157
+158	val_158
+158	val_158
+158	val_158
+158	val_158
+160	val_160
+160	val_160
+160	val_160
+160	val_160
 162	val_162
-377	val_377
-397	val_397
-309	val_309
-365	val_365
-266	val_266
-439	val_439
-342	val_342
-367	val_367
-325	val_325
+162	val_162
+162	val_162
+162	val_162
+163	val_163
+163	val_163
+163	val_163
+163	val_163
+164	val_164
+164	val_164
+164	val_164
+164	val_164
+164	val_164
+164	val_164
+164	val_164
+164	val_164
+165	val_165
+165	val_165
+165	val_165
+165	val_165
+165	val_165
+165	val_165
+165	val_165
+165	val_165
+166	val_166
+166	val_166
+166	val_166
+166	val_166
 167	val_167
-195	val_195
-475	val_475
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+167	val_167
+168	val_168
+168	val_168
+168	val_168
+168	val_168
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+169	val_169
+17	val_17
+17	val_17
+17	val_17
 17	val_17
-113	val_113
-155	val_155
-203	val_203
-339	val_339
-0	val_0
-455	val_455
-128	val_128
-311	val_311
-316	val_316
-57	val_57
-302	val_302
-205	val_205
-149	val_149
-438	val_438
-345	val_345
-129	val_129
 170	val_170
-20	val_20
-489	val_489
-157	val_157
-378	val_378
-221	val_221
-92	val_92
-111	val_111
-47	val_47
-72	val_72
-4	val_4
-280	val_280
-35	val_35
-427	val_427
-277	val_277
-208	val_208
-356	val_356
-399	val_399
-169	val_169
-382	val_382
-498	val_498
-125	val_125
-386	val_386
-437	val_437
-469	val_469
-192	val_192
-286	val_286
-187	val_187
+170	val_170
+170	val_170
+170	val_170
+172	val_172
+172	val_172
+172	val_172
+172	val_172
+172	val_172
+172	val_172
+172	val_172
+172	val_172
+174	val_174
+174	val_174
+174	val_174
+174	val_174
+174	val_174
+174	val_174
+174	val_174
+174	val_174
+175	val_175
+175	val_175
+175	val_175
+175	val_175
+175	val_175
+175	val_175
+175	val_175
+175	val_175
 176	val_176
-54	val_54
-459	val_459
-51	val_51
-138	val_138
-103	val_103
-239	val_239
-213	val_213
-216	val_216
-430	val_430
-278	val_278
 176	val_176
-289	val_289
-221	val_221
-65	val_65
-318	val_318
-332	val_332
-311	val_311
-275	val_275
-137	val_137
-241	val_241
-83	val_83
-333	val_333
+176	val_176
+176	val_176
+176	val_176
+176	val_176
+176	val_176
+176	val_176
+177	val_177
+177	val_177
+177	val_177
+177	val_177
+178	val_178
+178	val_178
+178	val_178
+178	val_178
+179	val_179
+179	val_179
+179	val_179
+179	val_179
+179	val_179
+179	val_179
+179	val_179
+179	val_179
+18	val_18
+18	val_18
+18	val_18
+18	val_18
+18	val_18
+18	val_18
+18	val_18
+18	val_18
+180	val_180
+180	val_180
+180	val_180
 180	val_180
-284	val_284
-12	val_12
-230	val_230
 181	val_181
-67	val_67
-260	val_260
-404	val_404
-384	val_384
-489	val_489
-353	val_353
-373	val_373
-272	val_272
-138	val_138
-217	val_217
-84	val_84
-348	val_348
-466	val_466
-58	val_58
-8	val_8
-411	val_411
-230	val_230
-208	val_208
-348	val_348
-24	val_24
-463	val_463
-431	val_431
-179	val_179
-172	val_172
-42	val_42
-129	val_129
-158	val_158
-119	val_119
-496	val_496
-0	val_0
-322	val_322
-197	val_197
-468	val_468
-393	val_393
-454	val_454
-100	val_100
-298	val_298
-199	val_199
-191	val_191
-418	val_418
-96	val_96
-26	val_26
-165	val_165
-327	val_327
-230	val_230
-205	val_205
-120	val_120
-131	val_131
-51	val_51
-404	val_404
-43	val_43
-436	val_436
-156	val_156
-469	val_469
-468	val_468
-308	val_308
-95	val_95
-196	val_196
-288	val_288
-481	val_481
-457	val_457
-98	val_98
-282	val_282
-197	val_197
+181	val_181
+181	val_181
+181	val_181
+183	val_183
+183	val_183
+183	val_183
+183	val_183
+186	val_186
+186	val_186
+186	val_186
+186	val_186
 187	val_187
-318	val_318
-318	val_318
-409	val_409
-470	val_470
-137	val_137
-369	val_369
-316	val_316
-169	val_169
-413	val_413
-85	val_85
-77	val_77
-0	val_0
-490	val_490
-87	val_87
-364	val_364
-179	val_179
-118	val_118
-134	val_134
-395	val_395
-282	val_282
-138	val_138
-238	val_238
-419	val_419
-15	val_15
-118	val_118
-72	val_72
-90	val_90
-307	val_307
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+187	val_187
+189	val_189
+189	val_189
+189	val_189
+189	val_189
 19	val_19
-435	val_435
-10	val_10
-277	val_277
-273	val_273
-306	val_306
-224	val_224
-309	val_309
-389	val_389
-327	val_327
-242	val_242
-369	val_369
-392	val_392
-272	val_272
-331	val_331
-401	val_401
-242	val_242
-452	val_452
-177	val_177
-226	val_226
-5	val_5
-497	val_497
-402	val_402
-396	val_396
-317	val_317
-395	val_395
-58	val_58
-35	val_35
-336	val_336
-95	val_95
-11	val_11
-168	val_168
-34	val_34
-229	val_229
-233	val_233
-143	val_143
-472	val_472
-322	val_322
-498	val_498
-160	val_160
+19	val_19
+19	val_19
+19	val_19
+190	val_190
+190	val_190
+190	val_190
+190	val_190
+191	val_191
+191	val_191
+191	val_191
+191	val_191
+191	val_191
+191	val_191
+191	val_191
+191	val_191
+192	val_192
+192	val_192
+192	val_192
+192	val_192
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+193	val_193
+194	val_194
+194	val_194
+194	val_194
+194	val_194
 195	val_195
-42	val_42
-321	val_321
-430	val_430
-119	val_119
-489	val_489
-458	val_458
-78	val_78
-76	val_76
-41	val_41
-223	val_223
-492	val_492
-149	val_149
-449	val_449
-218	val_218
-228	val_228
-138	val_138
-453	val_453
-30	val_30
+195	val_195
+195	val_195
+195	val_195
+195	val_195
+195	val_195
+195	val_195
+195	val_195
+196	val_196
+196	val_196
+196	val_196
+196	val_196
+197	val_197
+197	val_197
+197	val_197
+197	val_197
+197	val_197
+197	val_197
+197	val_197
+197	val_197
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+199	val_199
+2	val_2
+2	val_2
+2	val_2
+2	val_2
+20	val_20
+20	val_20
+20	val_20
+20	val_20
+200	val_200
+200	val_200
+200	val_200
+200	val_200
+200	val_200
+200	val_200
+200	val_200
+200	val_200
+201	val_201
+201	val_201
+201	val_201
+201	val_201
+202	val_202
+202	val_202
+202	val_202
+202	val_202
+203	val_203
+203	val_203
+203	val_203
+203	val_203
+203	val_203
+203	val_203
+203	val_203
+203	val_203
+205	val_205
+205	val_205
+205	val_205
+205	val_205
+205	val_205
+205	val_205
+205	val_205
+205	val_205
+207	val_207
+207	val_207
+207	val_207
+207	val_207
+207	val_207
+207	val_207
+207	val_207
+207	val_207
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
+208	val_208
 209	val_209
-64	val_64
-468	val_468
-76	val_76
-74	val_74
-342	val_342
-69	val_69
-230	val_230
-33	val_33
-368	val_368
-103	val_103
-296	val_296
-113	val_113
+209	val_209
+209	val_209
+209	val_209
+209	val_209
+209	val_209
+209	val_209
+209	val_209
+213	val_213
+213	val_213
+213	val_213
+213	val_213
+213	val_213
+213	val_213
+213	val_213
+213	val_213
+214	val_214
+214	val_214
+214	val_214
+214	val_214
 216	val_216
-367	val_367
-344	val_344
-167	val_167
-274	val_274
+216	val_216
+216	val_216
+216	val_216
+216	val_216
+216	val_216
+216	val_216
+216	val_216
+217	val_217
+217	val_217
+217	val_217
+217	val_217
+217	val_217
+217	val_217
+217	val_217
+217	val_217
+218	val_218
+218	val_218
+218	val_218
+218	val_218
 219	val_219
-239	val_239
-485	val_485
-116	val_116
+219	val_219
+219	val_219
+219	val_219
+219	val_219
+219	val_219
+219	val_219
+219	val_219
+221	val_221
+221	val_221
+221	val_221
+221	val_221
+221	val_221
+221	val_221
+221	val_221
+221	val_221
+222	val_222
+222	val_222
+222	val_222
+222	val_222
 223	val_223
-256	val_256
-263	val_263
-70	val_70
-487	val_487
-480	val_480
-401	val_401
-288	val_288
-191	val_191
-5	val_5
-244	val_244
-438	val_438
-128	val_128
-467	val_467
-432	val_432
-202	val_202
-316	val_316
+223	val_223
+223	val_223
+223	val_223
+223	val_223
+223	val_223
+223	val_223
+223	val_223
+224	val_224
+224	val_224
+224	val_224
+224	val_224
+224	val_224
+224	val_224
+224	val_224
+224	val_224
+226	val_226
+226	val_226
+226	val_226
+226	val_226
+228	val_228
+228	val_228
+228	val_228
+228	val_228
 229	val_229
-469	val_469
-463	val_463
-280	val_280
-2	val_2
-35	val_35
-283	val_283
-331	val_331
+229	val_229
+229	val_229
+229	val_229
+229	val_229
+229	val_229
+229	val_229
+229	val_229
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+230	val_230
+233	val_233
+233	val_233
+233	val_233
+233	val_233
+233	val_233
+233	val_233
+233	val_233
+233	val_233
+235	val_235
+235	val_235
+235	val_235
 235	val_235
-80	val_80
-44	val_44
-193	val_193
-321	val_321
-335	val_335
-104	val_104
-466	val_466
-366	val_366
-175	val_175
-403	val_403
-483	val_483
-53	val_53
-105	val_105
-257	val_257
-406	val_406
-409	val_409
-190	val_190
-406	val_406
-401	val_401
-114	val_114
-258	val_258
-90	val_90
-203	val_203
-262	val_262
-348	val_348
-424	val_424
-12	val_12
-396	val_396
-201	val_201
-217	val_217
-164	val_164
-431	val_431
-454	val_454
-478	val_478
-298	val_298
-125	val_125
-431	val_431
-164	val_164
-424	val_424
-187	val_187
-382	val_382
-5	val_5
-70	val_70
-397	val_397
-480	val_480
-291	val_291
-24	val_24
-351	val_351
-255	val_255
-104	val_104
-70	val_70
-163	val_163
-438	val_438
-119	val_119
-414	val_414
-200	val_200
-491	val_491
 237	val_237
-439	val_439
-360	val_360
+237	val_237
+237	val_237
+237	val_237
+237	val_237
+237	val_237
+237	val_237
+237	val_237
+238	val_238
+238	val_238
+238	val_238
+238	val_238
+238	val_238
+238	val_238
+238	val_238
+238	val_238
+239	val_239
+239	val_239
+239	val_239
+239	val_239
+239	val_239
+239	val_239
+239	val_239
+239	val_239
+24	val_24
+24	val_24
+24	val_24
+24	val_24
+24	val_24
+24	val_24
+24	val_24
+24	val_24
+241	val_241
+241	val_241
+241	val_241
+241	val_241
+242	val_242
+242	val_242
+242	val_242
+242	val_242
+242	val_242
+242	val_242
+242	val_242
+242	val_242
+244	val_244
+244	val_244
+244	val_244
+244	val_244
+247	val_247
+247	val_247
+247	val_247
+247	val_247
+248	val_248
+248	val_248
+248	val_248
 248	val_248
-479	val_479
-305	val_305
-417	val_417
-199	val_199
-444	val_444
-120	val_120
-429	val_429
-169	val_169
-443	val_443
-323	val_323
-325	val_325
-277	val_277
-230	val_230
-478	val_478
-178	val_178
-468	val_468
-310	val_310
-317	val_317
-333	val_333
-493	val_493
-460	val_460
-207	val_207
 249	val_249
-265	val_265
-480	val_480
-83	val_83
-136	val_136
-353	val_353
-172	val_172
-214	val_214
-462	val_462
-233	val_233
-406	val_406
-133	val_133
-175	val_175
-189	val_189
-454	val_454
-375	val_375
-401	val_401
-421	val_421
-407	val_407
-384	val_384
+249	val_249
+249	val_249
+249	val_249
+252	val_252
+252	val_252
+252	val_252
+252	val_252
+255	val_255
+255	val_255
+255	val_255
+255	val_255
+255	val_255
+255	val_255
+255	val_255
+255	val_255
+256	val_256
+256	val_256
+256	val_256
+256	val_256
+256	val_256
+256	val_256
+256	val_256
 256	val_256
+257	val_257
+257	val_257
+257	val_257
+257	val_257
+258	val_258
+258	val_258
+258	val_258
+258	val_258
 26	val_26
-134	val_134
-67	val_67
-384	val_384
-379	val_379
-18	val_18
-462	val_462
-492	val_492
-100	val_100
-298	val_298
-9	val_9
-341	val_341
-498	val_498
-146	val_146
-458	val_458
-362	val_362
-186	val_186
-285	val_285
-348	val_348
-167	val_167
-18	val_18
-273	val_273
-183	val_183
-281	val_281
-344	val_344
-97	val_97
-469	val_469
-315	val_315
-84	val_84
-28	val_28
-37	val_37
-448	val_448
-152	val_152
-348	val_348
-307	val_307
-194	val_194
-414	val_414
-477	val_477
-222	val_222
-126	val_126
-90	val_90
-169	val_169
-403	val_403
-400	val_400
-200	val_200
-97	val_97
-238	val_238
-86	val_86
-311	val_311
-27	val_27
-165	val_165
-409	val_409
-255	val_255
-278	val_278
-98	val_98
-484	val_484
+26	val_26
+26	val_26
+26	val_26
+26	val_26
+26	val_26
+26	val_26
+26	val_26
+260	val_260
+260	val_260
+260	val_260
+260	val_260
+262	val_262
+262	val_262
+262	val_262
+262	val_262
+263	val_263
+263	val_263
+263	val_263
+263	val_263
 265	val_265
-193	val_193
-401	val_401
-150	val_150
+265	val_265
+265	val_265
+265	val_265
+265	val_265
+265	val_265
+265	val_265
+265	val_265
+266	val_266
+266	val_266
+266	val_266
+266	val_266
+27	val_27
+27	val_27
+27	val_27
+27	val_27
+272	val_272
+272	val_272
+272	val_272
+272	val_272
+272	val_272
+272	val_272
+272	val_272
+272	val_272
 273	val_273
-224	val_224
-369	val_369
-66	val_66
-128	val_128
-213	val_213
-146	val_146
-406	val_406
-429	val_429
-374	val_374
-152	val_152
-469	val_469
-145	val_145
-495	val_495
-37	val_37
-327	val_327
-281	val_281
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+273	val_273
+274	val_274
+274	val_274
+274	val_274
+274	val_274
+275	val_275
+275	val_275
+275	val_275
+275	val_275
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
+277	val_277
 277	val_277
-209	val_209
-15	val_15
-82	val_82
-403	val_403
-166	val_166
-417	val_417
-430	val_430
-252	val_252
-292	val_292
-219	val_219
-287	val_287
-153	val_153
-193	val_193
-338	val_338
-446	val_446
-459	val_459
-394	val_394
-237	val_237
-482	val_482
-174	val_174
-413	val_413
-494	val_494
-207	val_207
-199	val_199
-466	val_466
-208	val_208
-174	val_174
-399	val_399
-396	val_396
-247	val_247
-417	val_417
-489	val_489
-162	val_162
-377	val_377
-397	val_397
-309	val_309
-365	val_365
-266	val_266
-439	val_439
-342	val_342
-367	val_367
-325	val_325
-167	val_167
-195	val_195
-475	val_475
-17	val_17
-113	val_113
-155	val_155
-203	val_203
-339	val_339
-0	val_0
-455	val_455
-128	val_128
-311	val_311
-316	val_316
-57	val_57
-302	val_302
-205	val_205
-149	val_149
-438	val_438
-345	val_345
-129	val_129
-170	val_170
-20	val_20
-489	val_489
-157	val_157
-378	val_378
-221	val_221
-92	val_92
-111	val_111
-47	val_47
-72	val_72
-4	val_4
-280	val_280
-35	val_35
-427	val_427
 277	val_277
-208	val_208
-356	val_356
-399	val_399
-169	val_169
-382	val_382
-498	val_498
-125	val_125
-386	val_386
-437	val_437
-469	val_469
-192	val_192
-286	val_286
-187	val_187
-176	val_176
-54	val_54
-459	val_459
-51	val_51
-138	val_138
-103	val_103
-239	val_239
-213	val_213
-216	val_216
-430	val_430
 278	val_278
-176	val_176
-289	val_289
-221	val_221
-65	val_65
-318	val_318
-332	val_332
-311	val_311
-275	val_275
-137	val_137
-241	val_241
-83	val_83
-333	val_333
-180	val_180
+278	val_278
+278	val_278
+278	val_278
+278	val_278
+278	val_278
+278	val_278
+278	val_278
+28	val_28
+28	val_28
+28	val_28
+28	val_28
+280	val_280
+280	val_280
+280	val_280
+280	val_280
+280	val_280
+280	val_280
+280	val_280
+280	val_280
+281	val_281
+281	val_281
+281	val_281
+281	val_281
+281	val_281
+281	val_281
+281	val_281
+281	val_281
+282	val_282
+282	val_282
+282	val_282
+282	val_282
+282	val_282
+282	val_282
+282	val_282
+282	val_282
+283	val_283
+283	val_283
+283	val_283
+283	val_283
 284	val_284
-12	val_12
-230	val_230
-181	val_181
-67	val_67
-260	val_260
-404	val_404
-384	val_384
-489	val_489
-353	val_353
-373	val_373
-272	val_272
-138	val_138
-217	val_217
-84	val_84
-348	val_348
-466	val_466
-58	val_58
-8	val_8
-411	val_411
-230	val_230
-208	val_208
-348	val_348
-24	val_24
-463	val_463
-431	val_431
-179	val_179
-172	val_172
-42	val_42
-129	val_129
-158	val_158
-119	val_119
-496	val_496
-0	val_0
-322	val_322
-197	val_197
-468	val_468
-393	val_393
-454	val_454
-100	val_100
+284	val_284
+284	val_284
+284	val_284
+285	val_285
+285	val_285
+285	val_285
+285	val_285
+286	val_286
+286	val_286
+286	val_286
+286	val_286
+287	val_287
+287	val_287
+287	val_287
+287	val_287
+288	val_288
+288	val_288
+288	val_288
+288	val_288
+288	val_288
+288	val_288
+288	val_288
+288	val_288
+289	val_289
+289	val_289
+289	val_289
+289	val_289
+291	val_291
+291	val_291
+291	val_291
+291	val_291
+292	val_292
+292	val_292
+292	val_292
+292	val_292
+296	val_296
+296	val_296
+296	val_296
+296	val_296
 298	val_298
-199	val_199
-191	val_191
-418	val_418
-96	val_96
-26	val_26
-165	val_165
-327	val_327
-230	val_230
-205	val_205
-120	val_120
-131	val_131
-51	val_51
-404	val_404
-43	val_43
-436	val_436
-156	val_156
-469	val_469
-468	val_468
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+298	val_298
+30	val_30
+30	val_30
+30	val_30
+30	val_30
+302	val_302
+302	val_302
+302	val_302
+302	val_302
+305	val_305
+305	val_305
+305	val_305
+305	val_305
+306	val_306
+306	val_306
+306	val_306
+306	val_306
+307	val_307
+307	val_307
+307	val_307
+307	val_307
+307	val_307
+307	val_307
+307	val_307
+307	val_307
 308	val_308
-95	val_95
-196	val_196
-288	val_288
-481	val_481
-457	val_457
-98	val_98
-282	val_282
-197	val_197
-187	val_187
+308	val_308
+308	val_308
+308	val_308
+309	val_309
+309	val_309
+309	val_309
+309	val_309
+309	val_309
+309	val_309
+309	val_309
+309	val_309
+310	val_310
+310	val_310
+310	val_310
+310	val_310
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+311	val_311
+315	val_315
+315	val_315
+315	val_315
+315	val_315
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+316	val_316
+317	val_317
+317	val_317
+317	val_317
+317	val_317
+317	val_317
+317	val_317
+317	val_317
+317	val_317
 318	val_318
 318	val_318
-409	val_409
-470	val_470
-137	val_137
-369	val_369
-316	val_316
-169	val_169
-413	val_413
-85	val_85
-77	val_77
-0	val_0
-490	val_490
-87	val_87
-364	val_364
-179	val_179
-118	val_118
-134	val_134
-395	val_395
-282	val_282
-138	val_138
-238	val_238
-419	val_419
-15	val_15
-118	val_118
-72	val_72
-90	val_90
-307	val_307
-19	val_19
-435	val_435
-10	val_10
-277	val_277
-273	val_273
-306	val_306
-224	val_224
-309	val_309
-389	val_389
+318	val_318
+318	val_318
+318	val_318
+318	val_318
+318	val_318
+318	val_318
+318	val_318
+318	val_318
+318	val_318
+318	val_318
+321	val_321
+321	val_321
+321	val_321
+321	val_321
+321	val_321
+321	val_321
+321	val_321
+321	val_321
+322	val_322
+322	val_322
+322	val_322
+322	val_322
+322	val_322
+322	val_322
+322	val_322
+322	val_322
+323	val_323
+323	val_323
+323	val_323
+323	val_323
+325	val_325
+325	val_325
+325	val_325
+325	val_325
+325	val_325
+325	val_325
+325	val_325
+325	val_325
 327	val_327
-242	val_242
-369	val_369
-392	val_392
-272	val_272
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+327	val_327
+33	val_33
+33	val_33
+33	val_33
+33	val_33
 331	val_331
-401	val_401
-242	val_242
-452	val_452
-177	val_177
-226	val_226
-5	val_5
-497	val_497
-402	val_402
-396	val_396
-317	val_317
-395	val_395
-58	val_58
-35	val_35
+331	val_331
+331	val_331
+331	val_331
+331	val_331
+331	val_331
+331	val_331
+331	val_331
+332	val_332
+332	val_332
+332	val_332
+332	val_332
+333	val_333
+333	val_333
+333	val_333
+333	val_333
+333	val_333
+333	val_333
+333	val_333
+333	val_333
+335	val_335
+335	val_335
+335	val_335
+335	val_335
 336	val_336
-95	val_95
-11	val_11
-168	val_168
+336	val_336
+336	val_336
+336	val_336
+338	val_338
+338	val_338
+338	val_338
+338	val_338
+339	val_339
+339	val_339
+339	val_339
+339	val_339
 34	val_34
-229	val_229
-233	val_233
-143	val_143
-472	val_472
-322	val_322
-498	val_498
-160	val_160
-195	val_195
-42	val_42
-321	val_321
-430	val_430
-119	val_119
-489	val_489
-458	val_458
-78	val_78
-76	val_76
-41	val_41
-223	val_223
-492	val_492
-149	val_149
-449	val_449
-218	val_218
-228	val_228
-138	val_138
-453	val_453
-30	val_30
-209	val_209
-64	val_64
-468	val_468
-76	val_76
-74	val_74
+34	val_34
+34	val_34
+34	val_34
+341	val_341
+341	val_341
+341	val_341
+341	val_341
+342	val_342
+342	val_342
+342	val_342
+342	val_342
+342	val_342
+342	val_342
+342	val_342
 342	val_342
-69	val_69
-230	val_230
-33	val_33
-368	val_368
-103	val_103
-296	val_296
-113	val_113
-216	val_216
-367	val_367
 344	val_344
-167	val_167
-274	val_274
-219	val_219
-239	val_239
-485	val_485
-116	val_116
-223	val_223
-256	val_256
-263	val_263
-70	val_70
-487	val_487
-480	val_480
-401	val_401
-288	val_288
-191	val_191
-5	val_5
-244	val_244
-438	val_438
-128	val_128
-467	val_467
-432	val_432
-202	val_202
-316	val_316
-229	val_229
-469	val_469
-463	val_463
-280	val_280
-2	val_2
+344	val_344
+344	val_344
+344	val_344
+344	val_344
+344	val_344
+344	val_344
+344	val_344
+345	val_345
+345	val_345
+345	val_345
+345	val_345
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
+348	val_348
 35	val_35
-283	val_283
-331	val_331
-235	val_235
-80	val_80
-44	val_44
-193	val_193
-321	val_321
-335	val_335
-104	val_104
-466	val_466
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+35	val_35
+351	val_351
+351	val_351
+351	val_351
+351	val_351
+353	val_353
+353	val_353
+353	val_353
+353	val_353
+353	val_353
+353	val_353
+353	val_353
+353	val_353
+356	val_356
+356	val_356
+356	val_356
+356	val_356
+360	val_360
+360	val_360
+360	val_360
+360	val_360
+362	val_362
+362	val_362
+362	val_362
+362	val_362
+364	val_364
+364	val_364
+364	val_364
+364	val_364
+365	val_365
+365	val_365
+365	val_365
+365	val_365
 366	val_366
-175	val_175
+366	val_366
+366	val_366
+366	val_366
+367	val_367
+367	val_367
+367	val_367
+367	val_367
+367	val_367
+367	val_367
+367	val_367
+367	val_367
+368	val_368
+368	val_368
+368	val_368
+368	val_368
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+369	val_369
+37	val_37
+37	val_37
+37	val_37
+37	val_37
+37	val_37
+37	val_37
+37	val_37
+37	val_37
+373	val_373
+373	val_373
+373	val_373
+373	val_373
+374	val_374
+374	val_374
+374	val_374
+374	val_374
+375	val_375
+375	val_375
+375	val_375
+375	val_375
+377	val_377
+377	val_377
+377	val_377
+377	val_377
+378	val_378
+378	val_378
+378	val_378
+378	val_378
+379	val_379
+379	val_379
+379	val_379
+379	val_379
+382	val_382
+382	val_382
+382	val_382
+382	val_382
+382	val_382
+382	val_382
+382	val_382
+382	val_382
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+384	val_384
+386	val_386
+386	val_386
+386	val_386
+386	val_386
+389	val_389
+389	val_389
+389	val_389
+389	val_389
+392	val_392
+392	val_392
+392	val_392
+392	val_392
+393	val_393
+393	val_393
+393	val_393
+393	val_393
+394	val_394
+394	val_394
+394	val_394
+394	val_394
+395	val_395
+395	val_395
+395	val_395
+395	val_395
+395	val_395
+395	val_395
+395	val_395
+395	val_395
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+396	val_396
+397	val_397
+397	val_397
+397	val_397
+397	val_397
+397	val_397
+397	val_397
+397	val_397
+397	val_397
+399	val_399
+399	val_399
+399	val_399
+399	val_399
+399	val_399
+399	val_399
+399	val_399
+399	val_399
+4	val_4
+4	val_4
+4	val_4
+4	val_4
+400	val_400
+400	val_400
+400	val_400
+400	val_400
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+401	val_401
+402	val_402
+402	val_402
+402	val_402
+402	val_402
 403	val_403
-483	val_483
-53	val_53
-105	val_105
-257	val_257
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+403	val_403
+404	val_404
+404	val_404
+404	val_404
+404	val_404
+404	val_404
+404	val_404
+404	val_404
+404	val_404
 406	val_406
-409	val_409
-190	val_190
 406	val_406
-401	val_401
-114	val_114
-258	val_258
-90	val_90
-203	val_203
-262	val_262
-348	val_348
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+406	val_406
+407	val_407
+407	val_407
+407	val_407
+407	val_407
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+409	val_409
+41	val_41
+41	val_41
+41	val_41
+41	val_41
+411	val_411
+411	val_411
+411	val_411
+411	val_411
+413	val_413
+413	val_413
+413	val_413
+413	val_413
+413	val_413
+413	val_413
+413	val_413
+413	val_413
+414	val_414
+414	val_414
+414	val_414
+414	val_414
+414	val_414
+414	val_414
+414	val_414
+414	val_414
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+417	val_417
+418	val_418
+418	val_418
+418	val_418
+418	val_418
+419	val_419
+419	val_419
+419	val_419
+419	val_419
+42	val_42
+42	val_42
+42	val_42
+42	val_42
+42	val_42
+42	val_42
+42	val_42
+42	val_42
+421	val_421
+421	val_421
+421	val_421
+421	val_421
 424	val_424
-12	val_12
-396	val_396
-201	val_201
-217	val_217
-164	val_164
+424	val_424
+424	val_424
+424	val_424
+424	val_424
+424	val_424
+424	val_424
+424	val_424
+427	val_427
+427	val_427
+427	val_427
+427	val_427
+429	val_429
+429	val_429
+429	val_429
+429	val_429
+429	val_429
+429	val_429
+429	val_429
+429	val_429
+43	val_43
+43	val_43
+43	val_43
+43	val_43
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
+430	val_430
 431	val_431
-454	val_454
-478	val_478
-298	val_298
-125	val_125
 431	val_431
-164	val_164
-424	val_424
-187	val_187
-382	val_382
-5	val_5
-70	val_70
-397	val_397
-480	val_480
-291	val_291
-24	val_24
-351	val_351
-255	val_255
-104	val_104
-70	val_70
-163	val_163
+431	val_431
+431	val_431
+431	val_431
+431	val_431
+431	val_431
+431	val_431
+431	val_431
+431	val_431
+431	val_431
+431	val_431
+432	val_432
+432	val_432
+432	val_432
+432	val_432
+435	val_435
+435	val_435
+435	val_435
+435	val_435
+436	val_436
+436	val_436
+436	val_436
+436	val_436
+437	val_437
+437	val_437
+437	val_437
+437	val_437
+438	val_438
+438	val_438
+438	val_438
+438	val_438
+438	val_438
+438	val_438
+438	val_438
+438	val_438
+438	val_438
+438	val_438
+438	val_438
 438	val_438
-119	val_119
-414	val_414
-200	val_200
-491	val_491
-237	val_237
 439	val_439
-360	val_360
-248	val_248
-479	val_479
-305	val_305
-417	val_417
-199	val_199
-444	val_444
-120	val_120
-429	val_429
-169	val_169
+439	val_439
+439	val_439
+439	val_439
+439	val_439
+439	val_439
+439	val_439
+439	val_439
+44	val_44
+44	val_44
+44	val_44
+44	val_44
 443	val_443
-323	val_323
-325	val_325
-277	val_277
-230	val_230
-478	val_478
-178	val_178
-468	val_468
-310	val_310
-317	val_317
-333	val_333
-493	val_493
+443	val_443
+443	val_443
+443	val_443
+444	val_444
+444	val_444
+444	val_444
+444	val_444
+446	val_446
+446	val_446
+446	val_446
+446	val_446
+448	val_448
+448	val_448
+448	val_448
+448	val_448
+449	val_449
+449	val_449
+449	val_449
+449	val_449
+452	val_452
+452	val_452
+452	val_452
+452	val_452
+453	val_453
+453	val_453
+453	val_453
+453	val_453
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+454	val_454
+455	val_455
+455	val_455
+455	val_455
+455	val_455
+457	val_457
+457	val_457
+457	val_457
+457	val_457
+458	val_458
+458	val_458
+458	val_458
+458	val_458
+458	val_458
+458	val_458
+458	val_458
+458	val_458
+459	val_459
+459	val_459
+459	val_459
+459	val_459
+459	val_459
+459	val_459
+459	val_459
+459	val_459
+460	val_460
+460	val_460
+460	val_460
 460	val_460
-207	val_207
-249	val_249
-265	val_265
-480	val_480
-83	val_83
-136	val_136
-353	val_353
-172	val_172
-214	val_214
 462	val_462
-233	val_233
-406	val_406
-133	val_133
-175	val_175
-189	val_189
-454	val_454
-375	val_375
-401	val_401
-421	val_421
-407	val_407
-384	val_384
-256	val_256
-26	val_26
-134	val_134
-67	val_67
-384	val_384
-379	val_379
-18	val_18
 462	val_462
-492	val_492
-100	val_100
-298	val_298
-9	val_9
-341	val_341
-498	val_498
-146	val_146
-458	val_458
-362	val_362
-186	val_186
-285	val_285
-348	val_348
-167	val_167
-18	val_18
-273	val_273
-183	val_183
-281	val_281
-344	val_344
-97	val_97
+462	val_462
+462	val_462
+462	val_462
+462	val_462
+462	val_462
+462	val_462
+463	val_463
+463	val_463
+463	val_463
+463	val_463
+463	val_463
+463	val_463
+463	val_463
+463	val_463
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+466	val_466
+467	val_467
+467	val_467
+467	val_467
+467	val_467
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
+468	val_468
 469	val_469
-315	val_315
-84	val_84
-28	val_28
-37	val_37
-448	val_448
-152	val_152
-348	val_348
-307	val_307
-194	val_194
-414	val_414
-477	val_477
-222	val_222
-126	val_126
-90	val_90
-169	val_169
-403	val_403
-400	val_400
-200	val_200
-97	val_97
-238	val_238
-86	val_86
-311	val_311
-27	val_27
-165	val_165
-409	val_409
-255	val_255
-278	val_278
-98	val_98
-484	val_484
-265	val_265
-193	val_193
-401	val_401
-150	val_150
-273	val_273
-224	val_224
-369	val_369
-66	val_66
-128	val_128
-213	val_213
-146	val_146
-406	val_406
-429	val_429
-374	val_374
-152	val_152
 469	val_469
-145	val_145
-495	val_495
-37	val_37
-327	val_327
-281	val_281
-277	val_277
-209	val_209
-15	val_15
-82	val_82
-403	val_403
-166	val_166
-417	val_417
-430	val_430
-252	val_252
-292	val_292
-219	val_219
-287	val_287
-153	val_153
-193	val_193
-338	val_338
-446	val_446
-459	val_459
-394	val_394
-237	val_237
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+469	val_469
+47	val_47
+47	val_47
+47	val_47
+47	val_47
+470	val_470
+470	val_470
+470	val_470
+470	val_470
+472	val_472
+472	val_472
+472	val_472
+472	val_472
+475	val_475
+475	val_475
+475	val_475
+475	val_475
+477	val_477
+477	val_477
+477	val_477
+477	val_477
+478	val_478
+478	val_478
+478	val_478
+478	val_478
+478	val_478
+478	val_478
+478	val_478
+478	val_478
+479	val_479
+479	val_479
+479	val_479
+479	val_479
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+480	val_480
+481	val_481
+481	val_481
+481	val_481
+481	val_481
 482	val_482
-174	val_174
-413	val_413
-494	val_494
-207	val_207
-199	val_199
-466	val_466
-208	val_208
-174	val_174
-399	val_399
-396	val_396
-247	val_247
-417	val_417
+482	val_482
+482	val_482
+482	val_482
+483	val_483
+483	val_483
+483	val_483
+483	val_483
+484	val_484
+484	val_484
+484	val_484
+484	val_484
+485	val_485
+485	val_485
+485	val_485
+485	val_485
+487	val_487
+487	val_487
+487	val_487
+487	val_487
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
+489	val_489
 489	val_489
-162	val_162
-377	val_377
-397	val_397
-309	val_309
-365	val_365
-266	val_266
-439	val_439
-342	val_342
-367	val_367
-325	val_325
-167	val_167
-195	val_195
-475	val_475
-17	val_17
-113	val_113
-155	val_155
-203	val_203
-339	val_339
-0	val_0
-455	val_455
-128	val_128
-311	val_311
-316	val_316
-57	val_57
-302	val_302
-205	val_205
-149	val_149
-438	val_438
-345	val_345
-129	val_129
-170	val_170
-20	val_20
 489	val_489
-157	val_157
-378	val_378
-221	val_221
-92	val_92
-111	val_111
-47	val_47
-72	val_72
-4	val_4
-280	val_280
-35	val_35
-427	val_427
-277	val_277
-208	val_208
-356	val_356
-399	val_399
-169	val_169
-382	val_382
-498	val_498
-125	val_125
-386	val_386
-437	val_437
-469	val_469
-192	val_192
-286	val_286
-187	val_187
-176	val_176
-54	val_54
-459	val_459
-51	val_51
-138	val_138
-103	val_103
-239	val_239
-213	val_213
-216	val_216
-430	val_430
-278	val_278
-176	val_176
-289	val_289
-221	val_221
-65	val_65
-318	val_318
-332	val_332
-311	val_311
-275	val_275
-137	val_137
-241	val_241
-83	val_83
-333	val_333
-180	val_180
-284	val_284
-12	val_12
-230	val_230
-181	val_181
-67	val_67
-260	val_260
-404	val_404
-384	val_384
 489	val_489
-353	val_353
-373	val_373
-272	val_272
-138	val_138
-217	val_217
-84	val_84
-348	val_348
-466	val_466
-58	val_58
-8	val_8
-411	val_411
-230	val_230
-208	val_208
-348	val_348
-24	val_24
-463	val_463
-431	val_431
-179	val_179
-172	val_172
-42	val_42
-129	val_129
-158	val_158
-119	val_119
-496	val_496
-0	val_0
-322	val_322
-197	val_197
-468	val_468
-393	val_393
-454	val_454
-100	val_100
-298	val_298
-199	val_199
-191	val_191
-418	val_418
-96	val_96
-26	val_26
-165	val_165
-327	val_327
-230	val_230
-205	val_205
-120	val_120
-131	val_131
-51	val_51
-404	val_404
-43	val_43
-436	val_436
-156	val_156
-469	val_469
-468	val_468
-308	val_308
-95	val_95
-196	val_196
-288	val_288
-481	val_481
-457	val_457
-98	val_98
-282	val_282
-197	val_197
-187	val_187
-318	val_318
-318	val_318
-409	val_409
-470	val_470
-137	val_137
-369	val_369
-316	val_316
-169	val_169
-413	val_413
-85	val_85
-77	val_77
-0	val_0
 490	val_490
-87	val_87
-364	val_364
-179	val_179
-118	val_118
-134	val_134
-395	val_395
-282	val_282
-138	val_138
-238	val_238
-419	val_419
-15	val_15
-118	val_118
-72	val_72
-90	val_90
-307	val_307
-19	val_19
-435	val_435
-10	val_10
-277	val_277
-273	val_273
-306	val_306
-224	val_224
-309	val_309
-389	val_389
-327	val_327
-242	val_242
-369	val_369
-392	val_392
-272	val_272
-331	val_331
-401	val_401
-242	val_242
-452	val_452
-177	val_177
-226	val_226
-5	val_5
+490	val_490
+490	val_490
+490	val_490
+491	val_491
+491	val_491
+491	val_491
+491	val_491
+492	val_492
+492	val_492
+492	val_492
+492	val_492
+492	val_492
+492	val_492
+492	val_492
+492	val_492
+493	val_493
+493	val_493
+493	val_493
+493	val_493
+494	val_494
+494	val_494
+494	val_494
+494	val_494
+495	val_495
+495	val_495
+495	val_495
+495	val_495
+496	val_496
+496	val_496
+496	val_496
+496	val_496
+497	val_497
+497	val_497
+497	val_497
 497	val_497
-402	val_402
-396	val_396
-317	val_317
-395	val_395
-58	val_58
-35	val_35
-336	val_336
-95	val_95
-11	val_11
-168	val_168
-34	val_34
-229	val_229
-233	val_233
-143	val_143
-472	val_472
-322	val_322
 498	val_498
-160	val_160
-195	val_195
-42	val_42
-321	val_321
-430	val_430
-119	val_119
-489	val_489
-458	val_458
-78	val_78
-76	val_76
-41	val_41
-223	val_223
-492	val_492
-149	val_149
-449	val_449
-218	val_218
-228	val_228
-138	val_138
-453	val_453
-30	val_30
-209	val_209
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+498	val_498
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+5	val_5
+51	val_51
+51	val_51
+51	val_51
+51	val_51
+51	val_51
+51	val_51
+51	val_51
+51	val_51
+53	val_53
+53	val_53
+53	val_53
+53	val_53
+54	val_54
+54	val_54
+54	val_54
+54	val_54
+57	val_57
+57	val_57
+57	val_57
+57	val_57
+58	val_58
+58	val_58
+58	val_58
+58	val_58
+58	val_58
+58	val_58
+58	val_58
+58	val_58
 64	val_64
-468	val_468
-76	val_76
-74	val_74
-342	val_342
+64	val_64
+64	val_64
+64	val_64
+65	val_65
+65	val_65
+65	val_65
+65	val_65
+66	val_66
+66	val_66
+66	val_66
+66	val_66
+67	val_67
+67	val_67
+67	val_67
+67	val_67
+67	val_67
+67	val_67
+67	val_67
+67	val_67
+69	val_69
+69	val_69
+69	val_69
 69	val_69
-230	val_230
-33	val_33
-368	val_368
-103	val_103
-296	val_296
-113	val_113
-216	val_216
-367	val_367
-344	val_344
-167	val_167
-274	val_274
-219	val_219
-239	val_239
-485	val_485
-116	val_116
-223	val_223
-256	val_256
-263	val_263
 70	val_70
-487	val_487
-480	val_480
-401	val_401
-288	val_288
-191	val_191
-5	val_5
-244	val_244
-438	val_438
-128	val_128
-467	val_467
-432	val_432
-202	val_202
-316	val_316
-229	val_229
-469	val_469
-463	val_463
-280	val_280
-2	val_2
-35	val_35
-283	val_283
-331	val_331
-235	val_235
-80	val_80
-44	val_44
-193	val_193
-321	val_321
-335	val_335
-104	val_104
-466	val_466
-366	val_366
-175	val_175
-403	val_403
-483	val_483
-53	val_53
-105	val_105
-257	val_257
-406	val_406
-409	val_409
-190	val_190
-406	val_406
-401	val_401
-114	val_114
-258	val_258
-90	val_90
-203	val_203
-262	val_262
-348	val_348
-424	val_424
-12	val_12
-396	val_396
-201	val_201
-217	val_217
-164	val_164
-431	val_431
-454	val_454
-478	val_478
-298	val_298
-125	val_125
-431	val_431
-164	val_164
-424	val_424
-187	val_187
-382	val_382
-5	val_5
 70	val_70
-397	val_397
-480	val_480
-291	val_291
-24	val_24
-351	val_351
-255	val_255
-104	val_104
 70	val_70
-163	val_163
-438	val_438
-119	val_119
-414	val_414
-200	val_200
-491	val_491
-237	val_237
-439	val_439
-360	val_360
-248	val_248
-479	val_479
-305	val_305
-417	val_417
-199	val_199
-444	val_444
-120	val_120
-429	val_429
-169	val_169
-443	val_443
-323	val_323
-325	val_325
-277	val_277
-230	val_230
-478	val_478
-178	val_178
-468	val_468
-310	val_310
-317	val_317
-333	val_333
-493	val_493
-460	val_460
-207	val_207
-249	val_249
-265	val_265
-480	val_480
+70	val_70
+70	val_70
+70	val_70
+70	val_70
+70	val_70
+70	val_70
+70	val_70
+70	val_70
+70	val_70
+72	val_72
+72	val_72
+72	val_72
+72	val_72
+72	val_72
+72	val_72
+72	val_72
+72	val_72
+74	val_74
+74	val_74
+74	val_74
+74	val_74
+76	val_76
+76	val_76
+76	val_76
+76	val_76
+76	val_76
+76	val_76
+76	val_76
+76	val_76
+77	val_77
+77	val_77
+77	val_77
+77	val_77
+78	val_78
+78	val_78
+78	val_78
+78	val_78
+8	val_8
+8	val_8
+8	val_8
+8	val_8
+80	val_80
+80	val_80
+80	val_80
+80	val_80
+82	val_82
+82	val_82
+82	val_82
+82	val_82
+83	val_83
+83	val_83
+83	val_83
+83	val_83
+83	val_83
+83	val_83
+83	val_83
 83	val_83
-136	val_136
-353	val_353
-172	val_172
-214	val_214
-462	val_462
-233	val_233
-406	val_406
-133	val_133
-175	val_175
-189	val_189
-454	val_454
-375	val_375
-401	val_401
-421	val_421
-407	val_407
-384	val_384
-256	val_256
-26	val_26
-134	val_134
-67	val_67
-384	val_384
-379	val_379
-18	val_18
-462	val_462
-492	val_492
-100	val_100
-298	val_298
-9	val_9
-341	val_341
-498	val_498
-146	val_146
-458	val_458
-362	val_362
-186	val_186
-285	val_285
-348	val_348
-167	val_167
-18	val_18
-273	val_273
-183	val_183
-281	val_281
-344	val_344
-97	val_97
-469	val_469
-315	val_315
 84	val_84
-28	val_28
-37	val_37
-448	val_448
-152	val_152
-348	val_348
-307	val_307
-194	val_194
-414	val_414
-477	val_477
-222	val_222
-126	val_126
+84	val_84
+84	val_84
+84	val_84
+84	val_84
+84	val_84
+84	val_84
+84	val_84
+85	val_85
+85	val_85
+85	val_85
+85	val_85
+86	val_86
+86	val_86
+86	val_86
+86	val_86
+87	val_87
+87	val_87
+87	val_87
+87	val_87
+9	val_9
+9	val_9
+9	val_9
+9	val_9
 90	val_90
-169	val_169
-403	val_403
-400	val_400
-200	val_200
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+90	val_90
+92	val_92
+92	val_92
+92	val_92
+92	val_92
+95	val_95
+95	val_95
+95	val_95
+95	val_95
+95	val_95
+95	val_95
+95	val_95
+95	val_95
+96	val_96
+96	val_96
+96	val_96
+96	val_96
+97	val_97
 97	val_97
+97	val_97
+97	val_97
+97	val_97
+97	val_97
+97	val_97
+97	val_97
+98	val_98
+98	val_98
+98	val_98
+98	val_98
+98	val_98
+98	val_98
+98	val_98
+98	val_98
 PREHOOK: query: describe formatted merge_src2
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: describe formatted merge_src2
@@ -2264,12 +2264,12 @@ value               	string              	None
 	 	 
 # Detailed Table Information	 	 
 Database:           	default             	 
-Owner:              	rsurowka            	 
-CreateTime:         	Thu Nov 10 15:15:28 PST 2011	 
+Owner:              	cloudera            	 
+CreateTime:         	Wed Jan 25 19:38:55 PST 2012	 
 LastAccessTime:     	UNKNOWN             	 
 Protect Mode:       	None                	 
 Retention:          	0                   	 
-Location:           	pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src2	 
+Location:           	pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src2	 
 Table Type:         	MANAGED_TABLE       	 
 Table Parameters:	 	 
 	numFiles            	1                   
@@ -2277,7 +2277,7 @@ Table Parameters:
 	numRows             	2000                
 	rawDataSize         	21248               
 	totalSize           	23248               
-	transient_lastDdlTime	1320966928          
+	transient_lastDdlTime	1327549135          
 	 	 
 # Storage Information	 	 
 SerDe Library:      	org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe	 
@@ -2343,9 +2343,9 @@ STAGE PLANS:
               File Output Operator
                 compressed: false
                 GlobalTableId: 1
-                directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10002
+                directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10002
                 NumFilesPerFileSink: 1
-                Stats Publishing Key Prefix: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10000/
+                Stats Publishing Key Prefix: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10000/
                 table:
                     input format: org.apache.hadoop.mapred.TextInputFormat
                     output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -2355,13 +2355,13 @@ STAGE PLANS:
                       columns.types string:string
                       file.inputformat org.apache.hadoop.mapred.TextInputFormat
                       file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                      location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                      location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                       name default.merge_src_part2
                       partition_columns ds
                       serialization.ddl struct merge_src_part2 { string key, string value}
                       serialization.format 1
                       serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                      transient_lastDdlTime 1320966928
+                      transient_lastDdlTime 1327549140
                     serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                     name: default.merge_src_part2
                 TotalFiles: 1
@@ -2369,10 +2369,10 @@ STAGE PLANS:
                 MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 [merge_src_part]
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 [merge_src_part]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 [merge_src_part]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 [merge_src_part]
       Path -> Partition:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 
           Partition
             base file name: ds=2008-04-08
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -2385,7 +2385,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08
               name default.merge_src_part
               numFiles 2
               numPartitions 2
@@ -2396,7 +2396,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 11624
-              transient_lastDdlTime 1320966919
+              transient_lastDdlTime 1327549123
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -2407,7 +2407,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part
                 name default.merge_src_part
                 numFiles 4
                 numPartitions 2
@@ -2418,11 +2418,11 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 23248
-                transient_lastDdlTime 1320966919
+                transient_lastDdlTime 1327549123
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part
             name: default.merge_src_part
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 
           Partition
             base file name: ds=2008-04-09
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -2435,7 +2435,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09
               name default.merge_src_part
               numFiles 2
               numPartitions 2
@@ -2446,7 +2446,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 11624
-              transient_lastDdlTime 1320966919
+              transient_lastDdlTime 1327549123
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -2457,7 +2457,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part
                 name default.merge_src_part
                 numFiles 4
                 numPartitions 2
@@ -2468,7 +2468,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 23248
-                transient_lastDdlTime 1320966919
+                transient_lastDdlTime 1327549123
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part
             name: default.merge_src_part
@@ -2480,8 +2480,8 @@ STAGE PLANS:
     Move Operator
       files:
           hdfs directory: true
-          source: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10002
-          destination: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10000
+          source: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10002
+          destination: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10000
 
   Stage: Stage-0
     Move Operator
@@ -2489,7 +2489,7 @@ STAGE PLANS:
           partition:
             ds 
           replace: true
-          source: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10000
+          source: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10000
           table:
               input format: org.apache.hadoop.mapred.TextInputFormat
               output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -2499,29 +2499,29 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                 name default.merge_src_part2
                 partition_columns ds
                 serialization.ddl struct merge_src_part2 { string key, string value}
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                transient_lastDdlTime 1320966928
+                transient_lastDdlTime 1327549140
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part2
-          tmp directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10001
+          tmp directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10001
 
   Stage: Stage-2
     Stats-Aggr Operator
-      Stats Aggregation Key Prefix: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10000/
+      Stats Aggregation Key Prefix: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10000/
 
   Stage: Stage-3
     Map Reduce
       Alias -> Map Operator Tree:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10002 
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10002 
             File Output Operator
               compressed: false
               GlobalTableId: 0
-              directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10000
+              directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10000
               NumFilesPerFileSink: 1
               table:
                   input format: org.apache.hadoop.mapred.TextInputFormat
@@ -2532,13 +2532,13 @@ STAGE PLANS:
                     columns.types string:string
                     file.inputformat org.apache.hadoop.mapred.TextInputFormat
                     file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                    location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                    location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                     name default.merge_src_part2
                     partition_columns ds
                     serialization.ddl struct merge_src_part2 { string key, string value}
                     serialization.format 1
                     serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                    transient_lastDdlTime 1320966928
+                    transient_lastDdlTime 1327549140
                   serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                   name: default.merge_src_part2
               TotalFiles: 1
@@ -2546,9 +2546,9 @@ STAGE PLANS:
               MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10002 [pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10002]
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10002 [pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10002]
       Path -> Partition:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-28_784_26196590456392265/-ext-10002 
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-00_507_5169383057523481585/-ext-10002 
           Partition
             base file name: -ext-10002
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -2559,13 +2559,13 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
               name default.merge_src_part2
               partition_columns ds
               serialization.ddl struct merge_src_part2 { string key, string value}
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-              transient_lastDdlTime 1320966928
+              transient_lastDdlTime 1327549140
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -2576,13 +2576,13 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                 name default.merge_src_part2
                 partition_columns ds
                 serialization.ddl struct merge_src_part2 { string key, string value}
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                transient_lastDdlTime 1320966928
+                transient_lastDdlTime 1327549140
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part2
             name: default.merge_src_part2
@@ -2625,16 +2625,16 @@ POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).key SIMPLE [(merge_s
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).value SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:value, type:string, comment:null), ]
 ds=2008-04-08
 ds=2008-04-09
-PREHOOK: query: select * from merge_src_part2 where ds is not null
+PREHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-08
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-09
-PREHOOK: Output: file:/tmp/rsurowka/hive_2011-11-10_15-15-38_493_913584916147829798/-mr-10000
-POSTHOOK: query: select * from merge_src_part2 where ds is not null
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-13_403_607847440256958837/-mr-10000
+POSTHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-08
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-09
-POSTHOOK: Output: file:/tmp/rsurowka/hive_2011-11-10_15-15-38_493_913584916147829798/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-13_403_607847440256958837/-mr-10000
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-09).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -2643,2006 +2643,2006 @@ POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-08).key SIMPLE [(merge_s
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-08).value SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).key SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).value SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:value, type:string, comment:null), ]
-238	val_238	2008-04-08
-86	val_86	2008-04-08
-311	val_311	2008-04-08
-27	val_27	2008-04-08
-165	val_165	2008-04-08
-409	val_409	2008-04-08
-255	val_255	2008-04-08
-278	val_278	2008-04-08
-98	val_98	2008-04-08
-484	val_484	2008-04-08
-265	val_265	2008-04-08
-193	val_193	2008-04-08
-401	val_401	2008-04-08
-150	val_150	2008-04-08
-273	val_273	2008-04-08
-224	val_224	2008-04-08
-369	val_369	2008-04-08
-66	val_66	2008-04-08
-128	val_128	2008-04-08
-213	val_213	2008-04-08
-146	val_146	2008-04-08
-406	val_406	2008-04-08
-429	val_429	2008-04-08
-374	val_374	2008-04-08
-152	val_152	2008-04-08
-469	val_469	2008-04-08
-145	val_145	2008-04-08
-495	val_495	2008-04-08
-37	val_37	2008-04-08
-327	val_327	2008-04-08
-281	val_281	2008-04-08
-277	val_277	2008-04-08
-209	val_209	2008-04-08
-15	val_15	2008-04-08
-82	val_82	2008-04-08
-403	val_403	2008-04-08
-166	val_166	2008-04-08
-417	val_417	2008-04-08
-430	val_430	2008-04-08
-252	val_252	2008-04-08
-292	val_292	2008-04-08
-219	val_219	2008-04-08
-287	val_287	2008-04-08
-153	val_153	2008-04-08
-193	val_193	2008-04-08
-338	val_338	2008-04-08
-446	val_446	2008-04-08
-459	val_459	2008-04-08
-394	val_394	2008-04-08
-237	val_237	2008-04-08
-482	val_482	2008-04-08
-174	val_174	2008-04-08
-413	val_413	2008-04-08
-494	val_494	2008-04-08
-207	val_207	2008-04-08
-199	val_199	2008-04-08
-466	val_466	2008-04-08
-208	val_208	2008-04-08
-174	val_174	2008-04-08
-399	val_399	2008-04-08
-396	val_396	2008-04-08
-247	val_247	2008-04-08
-417	val_417	2008-04-08
-489	val_489	2008-04-08
-162	val_162	2008-04-08
-377	val_377	2008-04-08
-397	val_397	2008-04-08
-309	val_309	2008-04-08
-365	val_365	2008-04-08
-266	val_266	2008-04-08
-439	val_439	2008-04-08
-342	val_342	2008-04-08
-367	val_367	2008-04-08
-325	val_325	2008-04-08
-167	val_167	2008-04-08
-195	val_195	2008-04-08
-475	val_475	2008-04-08
-17	val_17	2008-04-08
-113	val_113	2008-04-08
-155	val_155	2008-04-08
-203	val_203	2008-04-08
-339	val_339	2008-04-08
 0	val_0	2008-04-08
-455	val_455	2008-04-08
-128	val_128	2008-04-08
-311	val_311	2008-04-08
-316	val_316	2008-04-08
-57	val_57	2008-04-08
-302	val_302	2008-04-08
-205	val_205	2008-04-08
-149	val_149	2008-04-08
-438	val_438	2008-04-08
-345	val_345	2008-04-08
-129	val_129	2008-04-08
-170	val_170	2008-04-08
-20	val_20	2008-04-08
-489	val_489	2008-04-08
-157	val_157	2008-04-08
-378	val_378	2008-04-08
-221	val_221	2008-04-08
-92	val_92	2008-04-08
-111	val_111	2008-04-08
-47	val_47	2008-04-08
-72	val_72	2008-04-08
-4	val_4	2008-04-08
-280	val_280	2008-04-08
-35	val_35	2008-04-08
-427	val_427	2008-04-08
-277	val_277	2008-04-08
-208	val_208	2008-04-08
-356	val_356	2008-04-08
-399	val_399	2008-04-08
-169	val_169	2008-04-08
-382	val_382	2008-04-08
-498	val_498	2008-04-08
-125	val_125	2008-04-08
-386	val_386	2008-04-08
-437	val_437	2008-04-08
-469	val_469	2008-04-08
-192	val_192	2008-04-08
-286	val_286	2008-04-08
-187	val_187	2008-04-08
-176	val_176	2008-04-08
-54	val_54	2008-04-08
-459	val_459	2008-04-08
-51	val_51	2008-04-08
-138	val_138	2008-04-08
-103	val_103	2008-04-08
-239	val_239	2008-04-08
-213	val_213	2008-04-08
-216	val_216	2008-04-08
-430	val_430	2008-04-08
-278	val_278	2008-04-08
-176	val_176	2008-04-08
-289	val_289	2008-04-08
-221	val_221	2008-04-08
-65	val_65	2008-04-08
-318	val_318	2008-04-08
-332	val_332	2008-04-08
-311	val_311	2008-04-08
-275	val_275	2008-04-08
-137	val_137	2008-04-08
-241	val_241	2008-04-08
-83	val_83	2008-04-08
-333	val_333	2008-04-08
-180	val_180	2008-04-08
-284	val_284	2008-04-08
-12	val_12	2008-04-08
-230	val_230	2008-04-08
-181	val_181	2008-04-08
-67	val_67	2008-04-08
-260	val_260	2008-04-08
-404	val_404	2008-04-08
-384	val_384	2008-04-08
-489	val_489	2008-04-08
-353	val_353	2008-04-08
-373	val_373	2008-04-08
-272	val_272	2008-04-08
-138	val_138	2008-04-08
-217	val_217	2008-04-08
-84	val_84	2008-04-08
-348	val_348	2008-04-08
-466	val_466	2008-04-08
-58	val_58	2008-04-08
-8	val_8	2008-04-08
-411	val_411	2008-04-08
-230	val_230	2008-04-08
-208	val_208	2008-04-08
-348	val_348	2008-04-08
-24	val_24	2008-04-08
-463	val_463	2008-04-08
-431	val_431	2008-04-08
-179	val_179	2008-04-08
-172	val_172	2008-04-08
-42	val_42	2008-04-08
-129	val_129	2008-04-08
-158	val_158	2008-04-08
-119	val_119	2008-04-08
-496	val_496	2008-04-08
 0	val_0	2008-04-08
-322	val_322	2008-04-08
-197	val_197	2008-04-08
-468	val_468	2008-04-08
-393	val_393	2008-04-08
-454	val_454	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-199	val_199	2008-04-08
-191	val_191	2008-04-08
-418	val_418	2008-04-08
-96	val_96	2008-04-08
-26	val_26	2008-04-08
-165	val_165	2008-04-08
-327	val_327	2008-04-08
-230	val_230	2008-04-08
-205	val_205	2008-04-08
-120	val_120	2008-04-08
-131	val_131	2008-04-08
-51	val_51	2008-04-08
-404	val_404	2008-04-08
-43	val_43	2008-04-08
-436	val_436	2008-04-08
-156	val_156	2008-04-08
-469	val_469	2008-04-08
-468	val_468	2008-04-08
-308	val_308	2008-04-08
-95	val_95	2008-04-08
-196	val_196	2008-04-08
-288	val_288	2008-04-08
-481	val_481	2008-04-08
-457	val_457	2008-04-08
-98	val_98	2008-04-08
-282	val_282	2008-04-08
-197	val_197	2008-04-08
-187	val_187	2008-04-08
-318	val_318	2008-04-08
-318	val_318	2008-04-08
-409	val_409	2008-04-08
-470	val_470	2008-04-08
-137	val_137	2008-04-08
-369	val_369	2008-04-08
-316	val_316	2008-04-08
-169	val_169	2008-04-08
-413	val_413	2008-04-08
-85	val_85	2008-04-08
-77	val_77	2008-04-08
 0	val_0	2008-04-08
-490	val_490	2008-04-08
-87	val_87	2008-04-08
-364	val_364	2008-04-08
-179	val_179	2008-04-08
-118	val_118	2008-04-08
-134	val_134	2008-04-08
-395	val_395	2008-04-08
-282	val_282	2008-04-08
-138	val_138	2008-04-08
-238	val_238	2008-04-08
-419	val_419	2008-04-08
-15	val_15	2008-04-08
-118	val_118	2008-04-08
-72	val_72	2008-04-08
-90	val_90	2008-04-08
-307	val_307	2008-04-08
-19	val_19	2008-04-08
-435	val_435	2008-04-08
+0	val_0	2008-04-08
+0	val_0	2008-04-08
+0	val_0	2008-04-08
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+10	val_10	2008-04-09
+10	val_10	2008-04-09
 10	val_10	2008-04-08
-277	val_277	2008-04-08
-273	val_273	2008-04-08
-306	val_306	2008-04-08
-224	val_224	2008-04-08
-309	val_309	2008-04-08
-389	val_389	2008-04-08
-327	val_327	2008-04-08
-242	val_242	2008-04-08
-369	val_369	2008-04-08
-392	val_392	2008-04-08
-272	val_272	2008-04-08
-331	val_331	2008-04-08
-401	val_401	2008-04-08
-242	val_242	2008-04-08
-452	val_452	2008-04-08
-177	val_177	2008-04-08
-226	val_226	2008-04-08
-5	val_5	2008-04-08
-497	val_497	2008-04-08
-402	val_402	2008-04-08
-396	val_396	2008-04-08
-317	val_317	2008-04-08
-395	val_395	2008-04-08
-58	val_58	2008-04-08
-35	val_35	2008-04-08
-336	val_336	2008-04-08
-95	val_95	2008-04-08
-11	val_11	2008-04-08
-168	val_168	2008-04-08
-34	val_34	2008-04-08
-229	val_229	2008-04-08
-233	val_233	2008-04-08
-143	val_143	2008-04-08
-472	val_472	2008-04-08
-322	val_322	2008-04-08
-498	val_498	2008-04-08
-160	val_160	2008-04-08
-195	val_195	2008-04-08
-42	val_42	2008-04-08
-321	val_321	2008-04-08
-430	val_430	2008-04-08
-119	val_119	2008-04-08
-489	val_489	2008-04-08
-458	val_458	2008-04-08
-78	val_78	2008-04-08
-76	val_76	2008-04-08
-41	val_41	2008-04-08
-223	val_223	2008-04-08
-492	val_492	2008-04-08
-149	val_149	2008-04-08
-449	val_449	2008-04-08
-218	val_218	2008-04-08
-228	val_228	2008-04-08
-138	val_138	2008-04-08
-453	val_453	2008-04-08
-30	val_30	2008-04-08
-209	val_209	2008-04-08
-64	val_64	2008-04-08
-468	val_468	2008-04-08
-76	val_76	2008-04-08
-74	val_74	2008-04-08
-342	val_342	2008-04-08
-69	val_69	2008-04-08
-230	val_230	2008-04-08
-33	val_33	2008-04-08
-368	val_368	2008-04-08
+10	val_10	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-09
+100	val_100	2008-04-09
+100	val_100	2008-04-09
+100	val_100	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-08
+103	val_103	2008-04-08
+103	val_103	2008-04-08
 103	val_103	2008-04-08
-296	val_296	2008-04-08
-113	val_113	2008-04-08
-216	val_216	2008-04-08
-367	val_367	2008-04-08
-344	val_344	2008-04-08
-167	val_167	2008-04-08
-274	val_274	2008-04-08
-219	val_219	2008-04-08
-239	val_239	2008-04-08
-485	val_485	2008-04-08
-116	val_116	2008-04-08
-223	val_223	2008-04-08
-256	val_256	2008-04-08
-263	val_263	2008-04-08
-70	val_70	2008-04-08
-487	val_487	2008-04-08
-480	val_480	2008-04-08
-401	val_401	2008-04-08
-288	val_288	2008-04-08
-191	val_191	2008-04-08
-5	val_5	2008-04-08
-244	val_244	2008-04-08
-438	val_438	2008-04-08
-128	val_128	2008-04-08
-467	val_467	2008-04-08
-432	val_432	2008-04-08
-202	val_202	2008-04-08
-316	val_316	2008-04-08
-229	val_229	2008-04-08
-469	val_469	2008-04-08
-463	val_463	2008-04-08
-280	val_280	2008-04-08
-2	val_2	2008-04-08
-35	val_35	2008-04-08
-283	val_283	2008-04-08
-331	val_331	2008-04-08
-235	val_235	2008-04-08
-80	val_80	2008-04-08
-44	val_44	2008-04-08
-193	val_193	2008-04-08
-321	val_321	2008-04-08
-335	val_335	2008-04-08
 104	val_104	2008-04-08
-466	val_466	2008-04-08
-366	val_366	2008-04-08
-175	val_175	2008-04-08
-403	val_403	2008-04-08
-483	val_483	2008-04-08
-53	val_53	2008-04-08
+104	val_104	2008-04-08
+104	val_104	2008-04-08
+104	val_104	2008-04-08
+104	val_104	2008-04-09
+104	val_104	2008-04-09
+104	val_104	2008-04-09
+104	val_104	2008-04-09
+105	val_105	2008-04-09
+105	val_105	2008-04-09
 105	val_105	2008-04-08
-257	val_257	2008-04-08
-406	val_406	2008-04-08
-409	val_409	2008-04-08
-190	val_190	2008-04-08
-406	val_406	2008-04-08
-401	val_401	2008-04-08
+105	val_105	2008-04-08
+11	val_11	2008-04-08
+11	val_11	2008-04-08
+11	val_11	2008-04-09
+11	val_11	2008-04-09
+111	val_111	2008-04-09
+111	val_111	2008-04-09
+111	val_111	2008-04-08
+111	val_111	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-09
+113	val_113	2008-04-09
+113	val_113	2008-04-09
+113	val_113	2008-04-09
+114	val_114	2008-04-09
+114	val_114	2008-04-09
 114	val_114	2008-04-08
-258	val_258	2008-04-08
-90	val_90	2008-04-08
-203	val_203	2008-04-08
-262	val_262	2008-04-08
-348	val_348	2008-04-08
-424	val_424	2008-04-08
-12	val_12	2008-04-08
-396	val_396	2008-04-08
-201	val_201	2008-04-08
-217	val_217	2008-04-08
-164	val_164	2008-04-08
-431	val_431	2008-04-08
-454	val_454	2008-04-08
-478	val_478	2008-04-08
-298	val_298	2008-04-08
-125	val_125	2008-04-08
-431	val_431	2008-04-08
-164	val_164	2008-04-08
-424	val_424	2008-04-08
-187	val_187	2008-04-08
-382	val_382	2008-04-08
-5	val_5	2008-04-08
-70	val_70	2008-04-08
-397	val_397	2008-04-08
-480	val_480	2008-04-08
-291	val_291	2008-04-08
-24	val_24	2008-04-08
-351	val_351	2008-04-08
-255	val_255	2008-04-08
-104	val_104	2008-04-08
-70	val_70	2008-04-08
-163	val_163	2008-04-08
-438	val_438	2008-04-08
+114	val_114	2008-04-08
+116	val_116	2008-04-08
+116	val_116	2008-04-08
+116	val_116	2008-04-09
+116	val_116	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-08
+118	val_118	2008-04-08
+118	val_118	2008-04-08
+118	val_118	2008-04-08
 119	val_119	2008-04-08
-414	val_414	2008-04-08
-200	val_200	2008-04-08
-491	val_491	2008-04-08
-237	val_237	2008-04-08
-439	val_439	2008-04-08
-360	val_360	2008-04-08
-248	val_248	2008-04-08
-479	val_479	2008-04-08
-305	val_305	2008-04-08
-417	val_417	2008-04-08
-199	val_199	2008-04-08
-444	val_444	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-08
+12	val_12	2008-04-08
+12	val_12	2008-04-08
+12	val_12	2008-04-08
 120	val_120	2008-04-08
-429	val_429	2008-04-08
-169	val_169	2008-04-08
-443	val_443	2008-04-08
-323	val_323	2008-04-08
-325	val_325	2008-04-08
-277	val_277	2008-04-08
-230	val_230	2008-04-08
-478	val_478	2008-04-08
-178	val_178	2008-04-08
-468	val_468	2008-04-08
-310	val_310	2008-04-08
-317	val_317	2008-04-08
-333	val_333	2008-04-08
-493	val_493	2008-04-08
-460	val_460	2008-04-08
-207	val_207	2008-04-08
-249	val_249	2008-04-08
-265	val_265	2008-04-08
-480	val_480	2008-04-08
-83	val_83	2008-04-08
-136	val_136	2008-04-08
-353	val_353	2008-04-08
-172	val_172	2008-04-08
-214	val_214	2008-04-08
-462	val_462	2008-04-08
-233	val_233	2008-04-08
-406	val_406	2008-04-08
+120	val_120	2008-04-08
+120	val_120	2008-04-08
+120	val_120	2008-04-08
+120	val_120	2008-04-09
+120	val_120	2008-04-09
+120	val_120	2008-04-09
+120	val_120	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-08
+125	val_125	2008-04-08
+125	val_125	2008-04-08
+125	val_125	2008-04-08
+126	val_126	2008-04-08
+126	val_126	2008-04-08
+126	val_126	2008-04-09
+126	val_126	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-09
+129	val_129	2008-04-09
+129	val_129	2008-04-09
+129	val_129	2008-04-09
+131	val_131	2008-04-09
+131	val_131	2008-04-09
+131	val_131	2008-04-08
+131	val_131	2008-04-08
 133	val_133	2008-04-08
-175	val_175	2008-04-08
-189	val_189	2008-04-08
-454	val_454	2008-04-08
-375	val_375	2008-04-08
-401	val_401	2008-04-08
-421	val_421	2008-04-08
-407	val_407	2008-04-08
-384	val_384	2008-04-08
-256	val_256	2008-04-08
-26	val_26	2008-04-08
+133	val_133	2008-04-08
+133	val_133	2008-04-09
+133	val_133	2008-04-09
+134	val_134	2008-04-09
+134	val_134	2008-04-09
+134	val_134	2008-04-09
+134	val_134	2008-04-09
 134	val_134	2008-04-08
-67	val_67	2008-04-08
-384	val_384	2008-04-08
-379	val_379	2008-04-08
-18	val_18	2008-04-08
-462	val_462	2008-04-08
-492	val_492	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-9	val_9	2008-04-08
-341	val_341	2008-04-08
-498	val_498	2008-04-08
+134	val_134	2008-04-08
+134	val_134	2008-04-08
+134	val_134	2008-04-08
+136	val_136	2008-04-08
+136	val_136	2008-04-08
+136	val_136	2008-04-09
+136	val_136	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-08
+137	val_137	2008-04-08
+137	val_137	2008-04-08
+137	val_137	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+143	val_143	2008-04-09
+143	val_143	2008-04-09
+143	val_143	2008-04-08
+143	val_143	2008-04-08
+145	val_145	2008-04-08
+145	val_145	2008-04-08
+145	val_145	2008-04-09
+145	val_145	2008-04-09
+146	val_146	2008-04-09
+146	val_146	2008-04-09
+146	val_146	2008-04-09
+146	val_146	2008-04-09
 146	val_146	2008-04-08
-458	val_458	2008-04-08
-362	val_362	2008-04-08
-186	val_186	2008-04-08
-285	val_285	2008-04-08
-348	val_348	2008-04-08
-167	val_167	2008-04-08
-18	val_18	2008-04-08
-273	val_273	2008-04-08
-183	val_183	2008-04-08
-281	val_281	2008-04-08
-344	val_344	2008-04-08
-97	val_97	2008-04-08
-469	val_469	2008-04-08
-315	val_315	2008-04-08
-84	val_84	2008-04-08
-28	val_28	2008-04-08
-37	val_37	2008-04-08
-448	val_448	2008-04-08
-152	val_152	2008-04-08
-348	val_348	2008-04-08
-307	val_307	2008-04-08
-194	val_194	2008-04-08
-414	val_414	2008-04-08
-477	val_477	2008-04-08
-222	val_222	2008-04-08
-126	val_126	2008-04-08
-90	val_90	2008-04-08
-169	val_169	2008-04-08
-403	val_403	2008-04-08
-400	val_400	2008-04-08
-200	val_200	2008-04-08
-97	val_97	2008-04-08
-238	val_238	2008-04-08
-86	val_86	2008-04-08
-311	val_311	2008-04-08
-27	val_27	2008-04-08
-165	val_165	2008-04-08
-409	val_409	2008-04-08
-255	val_255	2008-04-08
-278	val_278	2008-04-08
-98	val_98	2008-04-08
-484	val_484	2008-04-08
-265	val_265	2008-04-08
-193	val_193	2008-04-08
-401	val_401	2008-04-08
-150	val_150	2008-04-08
-273	val_273	2008-04-08
-224	val_224	2008-04-08
-369	val_369	2008-04-08
-66	val_66	2008-04-08
-128	val_128	2008-04-08
-213	val_213	2008-04-08
 146	val_146	2008-04-08
-406	val_406	2008-04-08
-429	val_429	2008-04-08
-374	val_374	2008-04-08
-152	val_152	2008-04-08
-469	val_469	2008-04-08
-145	val_145	2008-04-08
-495	val_495	2008-04-08
-37	val_37	2008-04-08
-327	val_327	2008-04-08
-281	val_281	2008-04-08
-277	val_277	2008-04-08
-209	val_209	2008-04-08
+146	val_146	2008-04-08
+146	val_146	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-09
+149	val_149	2008-04-09
+149	val_149	2008-04-09
+149	val_149	2008-04-09
+15	val_15	2008-04-09
+15	val_15	2008-04-09
+15	val_15	2008-04-09
+15	val_15	2008-04-09
 15	val_15	2008-04-08
-82	val_82	2008-04-08
-403	val_403	2008-04-08
-166	val_166	2008-04-08
-417	val_417	2008-04-08
-430	val_430	2008-04-08
-252	val_252	2008-04-08
-292	val_292	2008-04-08
-219	val_219	2008-04-08
-287	val_287	2008-04-08
+15	val_15	2008-04-08
+15	val_15	2008-04-08
+15	val_15	2008-04-08
+150	val_150	2008-04-08
+150	val_150	2008-04-08
+150	val_150	2008-04-09
+150	val_150	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-08
+152	val_152	2008-04-08
+152	val_152	2008-04-08
+152	val_152	2008-04-08
 153	val_153	2008-04-08
-193	val_193	2008-04-08
-338	val_338	2008-04-08
-446	val_446	2008-04-08
-459	val_459	2008-04-08
-394	val_394	2008-04-08
-237	val_237	2008-04-08
-482	val_482	2008-04-08
-174	val_174	2008-04-08
-413	val_413	2008-04-08
-494	val_494	2008-04-08
-207	val_207	2008-04-08
-199	val_199	2008-04-08
-466	val_466	2008-04-08
-208	val_208	2008-04-08
-174	val_174	2008-04-08
-399	val_399	2008-04-08
-396	val_396	2008-04-08
-247	val_247	2008-04-08
-417	val_417	2008-04-08
-489	val_489	2008-04-08
+153	val_153	2008-04-08
+153	val_153	2008-04-09
+153	val_153	2008-04-09
+155	val_155	2008-04-09
+155	val_155	2008-04-09
+155	val_155	2008-04-08
+155	val_155	2008-04-08
+156	val_156	2008-04-08
+156	val_156	2008-04-08
+156	val_156	2008-04-09
+156	val_156	2008-04-09
+157	val_157	2008-04-09
+157	val_157	2008-04-09
+157	val_157	2008-04-08
+157	val_157	2008-04-08
+158	val_158	2008-04-08
+158	val_158	2008-04-08
+158	val_158	2008-04-09
+158	val_158	2008-04-09
+160	val_160	2008-04-09
+160	val_160	2008-04-09
+160	val_160	2008-04-08
+160	val_160	2008-04-08
 162	val_162	2008-04-08
-377	val_377	2008-04-08
-397	val_397	2008-04-08
-309	val_309	2008-04-08
-365	val_365	2008-04-08
-266	val_266	2008-04-08
-439	val_439	2008-04-08
-342	val_342	2008-04-08
-367	val_367	2008-04-08
-325	val_325	2008-04-08
+162	val_162	2008-04-08
+162	val_162	2008-04-09
+162	val_162	2008-04-09
+163	val_163	2008-04-09
+163	val_163	2008-04-09
+163	val_163	2008-04-08
+163	val_163	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-09
+164	val_164	2008-04-09
+164	val_164	2008-04-09
+164	val_164	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-08
+165	val_165	2008-04-08
+165	val_165	2008-04-08
+165	val_165	2008-04-08
+166	val_166	2008-04-08
+166	val_166	2008-04-08
+166	val_166	2008-04-09
+166	val_166	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
 167	val_167	2008-04-08
-195	val_195	2008-04-08
-475	val_475	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+168	val_168	2008-04-08
+168	val_168	2008-04-08
+168	val_168	2008-04-09
+168	val_168	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
 17	val_17	2008-04-08
-113	val_113	2008-04-08
-155	val_155	2008-04-08
-203	val_203	2008-04-08
-339	val_339	2008-04-08
-0	val_0	2008-04-08
-455	val_455	2008-04-08
-128	val_128	2008-04-08
-311	val_311	2008-04-08
-316	val_316	2008-04-08
-57	val_57	2008-04-08
-302	val_302	2008-04-08
-205	val_205	2008-04-08
-149	val_149	2008-04-08
-438	val_438	2008-04-08
-345	val_345	2008-04-08
-129	val_129	2008-04-08
+17	val_17	2008-04-08
+17	val_17	2008-04-09
+17	val_17	2008-04-09
+170	val_170	2008-04-09
+170	val_170	2008-04-09
 170	val_170	2008-04-08
-20	val_20	2008-04-08
-489	val_489	2008-04-08
-157	val_157	2008-04-08
-378	val_378	2008-04-08
-221	val_221	2008-04-08
-92	val_92	2008-04-08
-111	val_111	2008-04-08
-47	val_47	2008-04-08
-72	val_72	2008-04-08
-4	val_4	2008-04-08
-280	val_280	2008-04-08
-35	val_35	2008-04-08
-427	val_427	2008-04-08
-277	val_277	2008-04-08
-208	val_208	2008-04-08
-356	val_356	2008-04-08
-399	val_399	2008-04-08
-169	val_169	2008-04-08
-382	val_382	2008-04-08
-498	val_498	2008-04-08
-125	val_125	2008-04-08
-386	val_386	2008-04-08
-437	val_437	2008-04-08
-469	val_469	2008-04-08
-192	val_192	2008-04-08
-286	val_286	2008-04-08
-187	val_187	2008-04-08
+170	val_170	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-09
+172	val_172	2008-04-09
+172	val_172	2008-04-09
+172	val_172	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-08
+174	val_174	2008-04-08
+174	val_174	2008-04-08
+174	val_174	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-09
+175	val_175	2008-04-09
+175	val_175	2008-04-09
+175	val_175	2008-04-09
+176	val_176	2008-04-09
+176	val_176	2008-04-09
+176	val_176	2008-04-09
+176	val_176	2008-04-09
 176	val_176	2008-04-08
-54	val_54	2008-04-08
-459	val_459	2008-04-08
-51	val_51	2008-04-08
-138	val_138	2008-04-08
-103	val_103	2008-04-08
-239	val_239	2008-04-08
-213	val_213	2008-04-08
-216	val_216	2008-04-08
-430	val_430	2008-04-08
-278	val_278	2008-04-08
 176	val_176	2008-04-08
-289	val_289	2008-04-08
-221	val_221	2008-04-08
-65	val_65	2008-04-08
-318	val_318	2008-04-08
-332	val_332	2008-04-08
-311	val_311	2008-04-08
-275	val_275	2008-04-08
-137	val_137	2008-04-08
-241	val_241	2008-04-08
-83	val_83	2008-04-08
-333	val_333	2008-04-08
+176	val_176	2008-04-08
+176	val_176	2008-04-08
+177	val_177	2008-04-08
+177	val_177	2008-04-08
+177	val_177	2008-04-09
+177	val_177	2008-04-09
+178	val_178	2008-04-09
+178	val_178	2008-04-09
+178	val_178	2008-04-08
+178	val_178	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-09
+179	val_179	2008-04-09
+179	val_179	2008-04-09
+179	val_179	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-08
+18	val_18	2008-04-08
+18	val_18	2008-04-08
+18	val_18	2008-04-08
 180	val_180	2008-04-08
-284	val_284	2008-04-08
-12	val_12	2008-04-08
-230	val_230	2008-04-08
+180	val_180	2008-04-08
+180	val_180	2008-04-09
+180	val_180	2008-04-09
+181	val_181	2008-04-09
+181	val_181	2008-04-09
 181	val_181	2008-04-08
-67	val_67	2008-04-08
-260	val_260	2008-04-08
-404	val_404	2008-04-08
-384	val_384	2008-04-08
-489	val_489	2008-04-08
-353	val_353	2008-04-08
-373	val_373	2008-04-08
-272	val_272	2008-04-08
-138	val_138	2008-04-08
-217	val_217	2008-04-08
-84	val_84	2008-04-08
-348	val_348	2008-04-08
-466	val_466	2008-04-08
-58	val_58	2008-04-08
-8	val_8	2008-04-08
-411	val_411	2008-04-08
-230	val_230	2008-04-08
-208	val_208	2008-04-08
-348	val_348	2008-04-08
-24	val_24	2008-04-08
-463	val_463	2008-04-08
-431	val_431	2008-04-08
-179	val_179	2008-04-08
-172	val_172	2008-04-08
-42	val_42	2008-04-08
-129	val_129	2008-04-08
-158	val_158	2008-04-08
-119	val_119	2008-04-08
-496	val_496	2008-04-08
-0	val_0	2008-04-08
-322	val_322	2008-04-08
-197	val_197	2008-04-08
-468	val_468	2008-04-08
-393	val_393	2008-04-08
-454	val_454	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-199	val_199	2008-04-08
-191	val_191	2008-04-08
-418	val_418	2008-04-08
-96	val_96	2008-04-08
-26	val_26	2008-04-08
-165	val_165	2008-04-08
-327	val_327	2008-04-08
-230	val_230	2008-04-08
-205	val_205	2008-04-08
-120	val_120	2008-04-08
-131	val_131	2008-04-08
-51	val_51	2008-04-08
-404	val_404	2008-04-08
-43	val_43	2008-04-08
-436	val_436	2008-04-08
-156	val_156	2008-04-08
-469	val_469	2008-04-08
-468	val_468	2008-04-08
-308	val_308	2008-04-08
-95	val_95	2008-04-08
-196	val_196	2008-04-08
-288	val_288	2008-04-08
-481	val_481	2008-04-08
-457	val_457	2008-04-08
-98	val_98	2008-04-08
-282	val_282	2008-04-08
-197	val_197	2008-04-08
+181	val_181	2008-04-08
+183	val_183	2008-04-08
+183	val_183	2008-04-08
+183	val_183	2008-04-09
+183	val_183	2008-04-09
+186	val_186	2008-04-09
+186	val_186	2008-04-09
+186	val_186	2008-04-08
+186	val_186	2008-04-08
 187	val_187	2008-04-08
-318	val_318	2008-04-08
-318	val_318	2008-04-08
-409	val_409	2008-04-08
-470	val_470	2008-04-08
-137	val_137	2008-04-08
-369	val_369	2008-04-08
-316	val_316	2008-04-08
-169	val_169	2008-04-08
-413	val_413	2008-04-08
-85	val_85	2008-04-08
-77	val_77	2008-04-08
-0	val_0	2008-04-08
-490	val_490	2008-04-08
-87	val_87	2008-04-08
-364	val_364	2008-04-08
-179	val_179	2008-04-08
-118	val_118	2008-04-08
-134	val_134	2008-04-08
-395	val_395	2008-04-08
-282	val_282	2008-04-08
-138	val_138	2008-04-08
-238	val_238	2008-04-08
-419	val_419	2008-04-08
-15	val_15	2008-04-08
-118	val_118	2008-04-08
-72	val_72	2008-04-08
-90	val_90	2008-04-08
-307	val_307	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+189	val_189	2008-04-09
+189	val_189	2008-04-09
+189	val_189	2008-04-08
+189	val_189	2008-04-08
 19	val_19	2008-04-08
-435	val_435	2008-04-08
-10	val_10	2008-04-08
-277	val_277	2008-04-08
-273	val_273	2008-04-08
-306	val_306	2008-04-08
-224	val_224	2008-04-08
-309	val_309	2008-04-08
-389	val_389	2008-04-08
-327	val_327	2008-04-08
-242	val_242	2008-04-08
-369	val_369	2008-04-08
-392	val_392	2008-04-08
-272	val_272	2008-04-08
-331	val_331	2008-04-08
-401	val_401	2008-04-08
-242	val_242	2008-04-08
-452	val_452	2008-04-08
-177	val_177	2008-04-08
-226	val_226	2008-04-08
-5	val_5	2008-04-08
-497	val_497	2008-04-08
-402	val_402	2008-04-08
-396	val_396	2008-04-08
-317	val_317	2008-04-08
-395	val_395	2008-04-08
-58	val_58	2008-04-08
-35	val_35	2008-04-08
-336	val_336	2008-04-08
-95	val_95	2008-04-08
-11	val_11	2008-04-08
-168	val_168	2008-04-08
-34	val_34	2008-04-08
-229	val_229	2008-04-08
-233	val_233	2008-04-08
-143	val_143	2008-04-08
-472	val_472	2008-04-08
-322	val_322	2008-04-08
-498	val_498	2008-04-08
-160	val_160	2008-04-08
+19	val_19	2008-04-08
+19	val_19	2008-04-09
+19	val_19	2008-04-09
+190	val_190	2008-04-09
+190	val_190	2008-04-09
+190	val_190	2008-04-08
+190	val_190	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-09
+191	val_191	2008-04-09
+191	val_191	2008-04-09
+191	val_191	2008-04-09
+192	val_192	2008-04-09
+192	val_192	2008-04-09
+192	val_192	2008-04-08
+192	val_192	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+194	val_194	2008-04-09
+194	val_194	2008-04-09
+194	val_194	2008-04-08
+194	val_194	2008-04-08
 195	val_195	2008-04-08
-42	val_42	2008-04-08
-321	val_321	2008-04-08
-430	val_430	2008-04-08
-119	val_119	2008-04-08
-489	val_489	2008-04-08
-458	val_458	2008-04-08
-78	val_78	2008-04-08
-76	val_76	2008-04-08
-41	val_41	2008-04-08
-223	val_223	2008-04-08
-492	val_492	2008-04-08
-149	val_149	2008-04-08
-449	val_449	2008-04-08
-218	val_218	2008-04-08
-228	val_228	2008-04-08
-138	val_138	2008-04-08
-453	val_453	2008-04-08
-30	val_30	2008-04-08
+195	val_195	2008-04-08
+195	val_195	2008-04-08
+195	val_195	2008-04-08
+195	val_195	2008-04-09
+195	val_195	2008-04-09
+195	val_195	2008-04-09
+195	val_195	2008-04-09
+196	val_196	2008-04-09
+196	val_196	2008-04-09
+196	val_196	2008-04-08
+196	val_196	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-09
+197	val_197	2008-04-09
+197	val_197	2008-04-09
+197	val_197	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+2	val_2	2008-04-08
+2	val_2	2008-04-08
+2	val_2	2008-04-09
+2	val_2	2008-04-09
+20	val_20	2008-04-09
+20	val_20	2008-04-09
+20	val_20	2008-04-08
+20	val_20	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-09
+200	val_200	2008-04-09
+200	val_200	2008-04-09
+200	val_200	2008-04-09
+201	val_201	2008-04-09
+201	val_201	2008-04-09
+201	val_201	2008-04-08
+201	val_201	2008-04-08
+202	val_202	2008-04-08
+202	val_202	2008-04-08
+202	val_202	2008-04-09
+202	val_202	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-08
+203	val_203	2008-04-08
+203	val_203	2008-04-08
+203	val_203	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-09
+205	val_205	2008-04-09
+205	val_205	2008-04-09
+205	val_205	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-08
+207	val_207	2008-04-08
+207	val_207	2008-04-08
+207	val_207	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+209	val_209	2008-04-09
+209	val_209	2008-04-09
+209	val_209	2008-04-09
+209	val_209	2008-04-09
 209	val_209	2008-04-08
-64	val_64	2008-04-08
-468	val_468	2008-04-08
-76	val_76	2008-04-08
-74	val_74	2008-04-08
-342	val_342	2008-04-08
-69	val_69	2008-04-08
-230	val_230	2008-04-08
-33	val_33	2008-04-08
-368	val_368	2008-04-08
-103	val_103	2008-04-08
-296	val_296	2008-04-08
-113	val_113	2008-04-08
+209	val_209	2008-04-08
+209	val_209	2008-04-08
+209	val_209	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-09
+213	val_213	2008-04-09
+213	val_213	2008-04-09
+213	val_213	2008-04-09
+214	val_214	2008-04-09
+214	val_214	2008-04-09
+214	val_214	2008-04-08
+214	val_214	2008-04-08
 216	val_216	2008-04-08
-367	val_367	2008-04-08
-344	val_344	2008-04-08
-167	val_167	2008-04-08
-274	val_274	2008-04-08
+216	val_216	2008-04-08
+216	val_216	2008-04-08
+216	val_216	2008-04-08
+216	val_216	2008-04-09
+216	val_216	2008-04-09
+216	val_216	2008-04-09
+216	val_216	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-08
+217	val_217	2008-04-08
+217	val_217	2008-04-08
+217	val_217	2008-04-08
+218	val_218	2008-04-08
+218	val_218	2008-04-08
+218	val_218	2008-04-09
+218	val_218	2008-04-09
+219	val_219	2008-04-09
+219	val_219	2008-04-09
+219	val_219	2008-04-09
+219	val_219	2008-04-09
 219	val_219	2008-04-08
-239	val_239	2008-04-08
-485	val_485	2008-04-08
-116	val_116	2008-04-08
+219	val_219	2008-04-08
+219	val_219	2008-04-08
+219	val_219	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-09
+221	val_221	2008-04-09
+221	val_221	2008-04-09
+221	val_221	2008-04-09
+222	val_222	2008-04-09
+222	val_222	2008-04-09
+222	val_222	2008-04-08
+222	val_222	2008-04-08
 223	val_223	2008-04-08
-256	val_256	2008-04-08
-263	val_263	2008-04-08
-70	val_70	2008-04-08
-487	val_487	2008-04-08
-480	val_480	2008-04-08
-401	val_401	2008-04-08
-288	val_288	2008-04-08
-191	val_191	2008-04-08
-5	val_5	2008-04-08
-244	val_244	2008-04-08
-438	val_438	2008-04-08
-128	val_128	2008-04-08
-467	val_467	2008-04-08
-432	val_432	2008-04-08
-202	val_202	2008-04-08
-316	val_316	2008-04-08
+223	val_223	2008-04-08
+223	val_223	2008-04-08
+223	val_223	2008-04-08
+223	val_223	2008-04-09
+223	val_223	2008-04-09
+223	val_223	2008-04-09
+223	val_223	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-08
+224	val_224	2008-04-08
+224	val_224	2008-04-08
+224	val_224	2008-04-08
+226	val_226	2008-04-08
+226	val_226	2008-04-08
+226	val_226	2008-04-09
+226	val_226	2008-04-09
+228	val_228	2008-04-09
+228	val_228	2008-04-09
+228	val_228	2008-04-08
+228	val_228	2008-04-08
 229	val_229	2008-04-08
-469	val_469	2008-04-08
-463	val_463	2008-04-08
-280	val_280	2008-04-08
-2	val_2	2008-04-08
-35	val_35	2008-04-08
-283	val_283	2008-04-08
-331	val_331	2008-04-08
+229	val_229	2008-04-08
+229	val_229	2008-04-08
+229	val_229	2008-04-08
+229	val_229	2008-04-09
+229	val_229	2008-04-09
+229	val_229	2008-04-09
+229	val_229	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-09
+233	val_233	2008-04-09
+233	val_233	2008-04-09
+233	val_233	2008-04-09
+235	val_235	2008-04-09
+235	val_235	2008-04-09
+235	val_235	2008-04-08
 235	val_235	2008-04-08
-80	val_80	2008-04-08
-44	val_44	2008-04-08
-193	val_193	2008-04-08
-321	val_321	2008-04-08
-335	val_335	2008-04-08
-104	val_104	2008-04-08
-466	val_466	2008-04-08
-366	val_366	2008-04-08
-175	val_175	2008-04-08
-403	val_403	2008-04-08
-483	val_483	2008-04-08
-53	val_53	2008-04-08
-105	val_105	2008-04-08
-257	val_257	2008-04-08
-406	val_406	2008-04-08
-409	val_409	2008-04-08
-190	val_190	2008-04-08
-406	val_406	2008-04-08
-401	val_401	2008-04-08
-114	val_114	2008-04-08
-258	val_258	2008-04-08
-90	val_90	2008-04-08
-203	val_203	2008-04-08
-262	val_262	2008-04-08
-348	val_348	2008-04-08
-424	val_424	2008-04-08
-12	val_12	2008-04-08
-396	val_396	2008-04-08
-201	val_201	2008-04-08
-217	val_217	2008-04-08
-164	val_164	2008-04-08
-431	val_431	2008-04-08
-454	val_454	2008-04-08
-478	val_478	2008-04-08
-298	val_298	2008-04-08
-125	val_125	2008-04-08
-431	val_431	2008-04-08
-164	val_164	2008-04-08
-424	val_424	2008-04-08
-187	val_187	2008-04-08
-382	val_382	2008-04-08
-5	val_5	2008-04-08
-70	val_70	2008-04-08
-397	val_397	2008-04-08
-480	val_480	2008-04-08
-291	val_291	2008-04-08
-24	val_24	2008-04-08
-351	val_351	2008-04-08
-255	val_255	2008-04-08
-104	val_104	2008-04-08
-70	val_70	2008-04-08
-163	val_163	2008-04-08
-438	val_438	2008-04-08
-119	val_119	2008-04-08
-414	val_414	2008-04-08
-200	val_200	2008-04-08
-491	val_491	2008-04-08
 237	val_237	2008-04-08
-439	val_439	2008-04-08
-360	val_360	2008-04-08
+237	val_237	2008-04-08
+237	val_237	2008-04-08
+237	val_237	2008-04-08
+237	val_237	2008-04-09
+237	val_237	2008-04-09
+237	val_237	2008-04-09
+237	val_237	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-08
+238	val_238	2008-04-08
+238	val_238	2008-04-08
+238	val_238	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-09
+239	val_239	2008-04-09
+239	val_239	2008-04-09
+239	val_239	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-08
+24	val_24	2008-04-08
+24	val_24	2008-04-08
+24	val_24	2008-04-08
+241	val_241	2008-04-08
+241	val_241	2008-04-08
+241	val_241	2008-04-09
+241	val_241	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-08
+242	val_242	2008-04-08
+242	val_242	2008-04-08
+242	val_242	2008-04-08
+244	val_244	2008-04-08
+244	val_244	2008-04-08
+244	val_244	2008-04-09
+244	val_244	2008-04-09
+247	val_247	2008-04-09
+247	val_247	2008-04-09
+247	val_247	2008-04-08
+247	val_247	2008-04-08
 248	val_248	2008-04-08
-479	val_479	2008-04-08
-305	val_305	2008-04-08
-417	val_417	2008-04-08
-199	val_199	2008-04-08
-444	val_444	2008-04-08
-120	val_120	2008-04-08
-429	val_429	2008-04-08
-169	val_169	2008-04-08
-443	val_443	2008-04-08
-323	val_323	2008-04-08
-325	val_325	2008-04-08
-277	val_277	2008-04-08
-230	val_230	2008-04-08
-478	val_478	2008-04-08
-178	val_178	2008-04-08
-468	val_468	2008-04-08
-310	val_310	2008-04-08
-317	val_317	2008-04-08
-333	val_333	2008-04-08
-493	val_493	2008-04-08
-460	val_460	2008-04-08
-207	val_207	2008-04-08
+248	val_248	2008-04-08
+248	val_248	2008-04-09
+248	val_248	2008-04-09
+249	val_249	2008-04-09
+249	val_249	2008-04-09
 249	val_249	2008-04-08
-265	val_265	2008-04-08
-480	val_480	2008-04-08
-83	val_83	2008-04-08
-136	val_136	2008-04-08
-353	val_353	2008-04-08
-172	val_172	2008-04-08
-214	val_214	2008-04-08
-462	val_462	2008-04-08
-233	val_233	2008-04-08
-406	val_406	2008-04-08
-133	val_133	2008-04-08
-175	val_175	2008-04-08
-189	val_189	2008-04-08
-454	val_454	2008-04-08
-375	val_375	2008-04-08
-401	val_401	2008-04-08
-421	val_421	2008-04-08
-407	val_407	2008-04-08
-384	val_384	2008-04-08
+249	val_249	2008-04-08
+252	val_252	2008-04-08
+252	val_252	2008-04-08
+252	val_252	2008-04-09
+252	val_252	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-08
+255	val_255	2008-04-08
+255	val_255	2008-04-08
+255	val_255	2008-04-08
+256	val_256	2008-04-08
 256	val_256	2008-04-08
+256	val_256	2008-04-08
+256	val_256	2008-04-08
+256	val_256	2008-04-09
+256	val_256	2008-04-09
+256	val_256	2008-04-09
+256	val_256	2008-04-09
+257	val_257	2008-04-09
+257	val_257	2008-04-09
+257	val_257	2008-04-08
+257	val_257	2008-04-08
+258	val_258	2008-04-08
+258	val_258	2008-04-08
+258	val_258	2008-04-09
+258	val_258	2008-04-09
+26	val_26	2008-04-09
+26	val_26	2008-04-09
+26	val_26	2008-04-09
+26	val_26	2008-04-09
 26	val_26	2008-04-08
-134	val_134	2008-04-08
-67	val_67	2008-04-08
-384	val_384	2008-04-08
-379	val_379	2008-04-08
-18	val_18	2008-04-08
-462	val_462	2008-04-08
-492	val_492	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-9	val_9	2008-04-08
-341	val_341	2008-04-08
-498	val_498	2008-04-08
-146	val_146	2008-04-08
-458	val_458	2008-04-08
-362	val_362	2008-04-08
-186	val_186	2008-04-08
-285	val_285	2008-04-08
-348	val_348	2008-04-08
-167	val_167	2008-04-08
-18	val_18	2008-04-08
-273	val_273	2008-04-08
-183	val_183	2008-04-08
-281	val_281	2008-04-08
-344	val_344	2008-04-08
-97	val_97	2008-04-08
-469	val_469	2008-04-08
-315	val_315	2008-04-08
-84	val_84	2008-04-08
-28	val_28	2008-04-08
-37	val_37	2008-04-08
-448	val_448	2008-04-08
-152	val_152	2008-04-08
-348	val_348	2008-04-08
-307	val_307	2008-04-08
-194	val_194	2008-04-08
-414	val_414	2008-04-08
-477	val_477	2008-04-08
-222	val_222	2008-04-08
-126	val_126	2008-04-08
-90	val_90	2008-04-08
-169	val_169	2008-04-08
-403	val_403	2008-04-08
-400	val_400	2008-04-08
-200	val_200	2008-04-08
-97	val_97	2008-04-08
-238	val_238	2008-04-09
-86	val_86	2008-04-09
-311	val_311	2008-04-09
-27	val_27	2008-04-09
-165	val_165	2008-04-09
-409	val_409	2008-04-09
-255	val_255	2008-04-09
-278	val_278	2008-04-09
-98	val_98	2008-04-09
-484	val_484	2008-04-09
+26	val_26	2008-04-08
+26	val_26	2008-04-08
+26	val_26	2008-04-08
+260	val_260	2008-04-08
+260	val_260	2008-04-08
+260	val_260	2008-04-09
+260	val_260	2008-04-09
+262	val_262	2008-04-09
+262	val_262	2008-04-09
+262	val_262	2008-04-08
+262	val_262	2008-04-08
+263	val_263	2008-04-08
+263	val_263	2008-04-08
+263	val_263	2008-04-09
+263	val_263	2008-04-09
 265	val_265	2008-04-09
-193	val_193	2008-04-09
-401	val_401	2008-04-09
-150	val_150	2008-04-09
+265	val_265	2008-04-09
+265	val_265	2008-04-09
+265	val_265	2008-04-09
+265	val_265	2008-04-08
+265	val_265	2008-04-08
+265	val_265	2008-04-08
+265	val_265	2008-04-08
+266	val_266	2008-04-08
+266	val_266	2008-04-08
+266	val_266	2008-04-09
+266	val_266	2008-04-09
+27	val_27	2008-04-09
+27	val_27	2008-04-09
+27	val_27	2008-04-08
+27	val_27	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-09
+272	val_272	2008-04-09
+272	val_272	2008-04-09
+272	val_272	2008-04-09
 273	val_273	2008-04-09
-224	val_224	2008-04-09
-369	val_369	2008-04-09
-66	val_66	2008-04-09
-128	val_128	2008-04-09
-213	val_213	2008-04-09
-146	val_146	2008-04-09
-406	val_406	2008-04-09
-429	val_429	2008-04-09
-374	val_374	2008-04-09
-152	val_152	2008-04-09
-469	val_469	2008-04-09
-145	val_145	2008-04-09
-495	val_495	2008-04-09
-37	val_37	2008-04-09
-327	val_327	2008-04-09
-281	val_281	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+274	val_274	2008-04-08
+274	val_274	2008-04-08
+274	val_274	2008-04-09
+274	val_274	2008-04-09
+275	val_275	2008-04-09
+275	val_275	2008-04-09
+275	val_275	2008-04-08
+275	val_275	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
 277	val_277	2008-04-09
-209	val_209	2008-04-09
-15	val_15	2008-04-09
-82	val_82	2008-04-09
-403	val_403	2008-04-09
-166	val_166	2008-04-09
-417	val_417	2008-04-09
-430	val_430	2008-04-09
-252	val_252	2008-04-09
-292	val_292	2008-04-09
-219	val_219	2008-04-09
-287	val_287	2008-04-09
-153	val_153	2008-04-09
-193	val_193	2008-04-09
-338	val_338	2008-04-09
-446	val_446	2008-04-09
-459	val_459	2008-04-09
-394	val_394	2008-04-09
-237	val_237	2008-04-09
-482	val_482	2008-04-09
-174	val_174	2008-04-09
-413	val_413	2008-04-09
-494	val_494	2008-04-09
-207	val_207	2008-04-09
-199	val_199	2008-04-09
-466	val_466	2008-04-09
-208	val_208	2008-04-09
-174	val_174	2008-04-09
-399	val_399	2008-04-09
-396	val_396	2008-04-09
-247	val_247	2008-04-09
-417	val_417	2008-04-09
-489	val_489	2008-04-09
-162	val_162	2008-04-09
-377	val_377	2008-04-09
-397	val_397	2008-04-09
-309	val_309	2008-04-09
-365	val_365	2008-04-09
-266	val_266	2008-04-09
-439	val_439	2008-04-09
-342	val_342	2008-04-09
-367	val_367	2008-04-09
-325	val_325	2008-04-09
-167	val_167	2008-04-09
-195	val_195	2008-04-09
-475	val_475	2008-04-09
-17	val_17	2008-04-09
-113	val_113	2008-04-09
-155	val_155	2008-04-09
-203	val_203	2008-04-09
-339	val_339	2008-04-09
-0	val_0	2008-04-09
-455	val_455	2008-04-09
-128	val_128	2008-04-09
-311	val_311	2008-04-09
-316	val_316	2008-04-09
-57	val_57	2008-04-09
-302	val_302	2008-04-09
-205	val_205	2008-04-09
-149	val_149	2008-04-09
-438	val_438	2008-04-09
-345	val_345	2008-04-09
-129	val_129	2008-04-09
-170	val_170	2008-04-09
-20	val_20	2008-04-09
-489	val_489	2008-04-09
-157	val_157	2008-04-09
-378	val_378	2008-04-09
-221	val_221	2008-04-09
-92	val_92	2008-04-09
-111	val_111	2008-04-09
-47	val_47	2008-04-09
-72	val_72	2008-04-09
-4	val_4	2008-04-09
-280	val_280	2008-04-09
-35	val_35	2008-04-09
-427	val_427	2008-04-09
 277	val_277	2008-04-09
-208	val_208	2008-04-09
-356	val_356	2008-04-09
-399	val_399	2008-04-09
-169	val_169	2008-04-09
-382	val_382	2008-04-09
-498	val_498	2008-04-09
-125	val_125	2008-04-09
-386	val_386	2008-04-09
-437	val_437	2008-04-09
-469	val_469	2008-04-09
-192	val_192	2008-04-09
-286	val_286	2008-04-09
-187	val_187	2008-04-09
-176	val_176	2008-04-09
-54	val_54	2008-04-09
-459	val_459	2008-04-09
-51	val_51	2008-04-09
-138	val_138	2008-04-09
-103	val_103	2008-04-09
-239	val_239	2008-04-09
-213	val_213	2008-04-09
-216	val_216	2008-04-09
-430	val_430	2008-04-09
 278	val_278	2008-04-09
-176	val_176	2008-04-09
-289	val_289	2008-04-09
-221	val_221	2008-04-09
-65	val_65	2008-04-09
-318	val_318	2008-04-09
-332	val_332	2008-04-09
-311	val_311	2008-04-09
-275	val_275	2008-04-09
-137	val_137	2008-04-09
-241	val_241	2008-04-09
-83	val_83	2008-04-09
-333	val_333	2008-04-09
-180	val_180	2008-04-09
+278	val_278	2008-04-09
+278	val_278	2008-04-09
+278	val_278	2008-04-09
+278	val_278	2008-04-08
+278	val_278	2008-04-08
+278	val_278	2008-04-08
+278	val_278	2008-04-08
+28	val_28	2008-04-08
+28	val_28	2008-04-08
+28	val_28	2008-04-09
+28	val_28	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-08
+280	val_280	2008-04-08
+280	val_280	2008-04-08
+280	val_280	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-09
+281	val_281	2008-04-09
+281	val_281	2008-04-09
+281	val_281	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-08
+282	val_282	2008-04-08
+282	val_282	2008-04-08
+282	val_282	2008-04-08
+283	val_283	2008-04-08
+283	val_283	2008-04-08
+283	val_283	2008-04-09
+283	val_283	2008-04-09
 284	val_284	2008-04-09
-12	val_12	2008-04-09
-230	val_230	2008-04-09
-181	val_181	2008-04-09
-67	val_67	2008-04-09
-260	val_260	2008-04-09
-404	val_404	2008-04-09
-384	val_384	2008-04-09
-489	val_489	2008-04-09
-353	val_353	2008-04-09
-373	val_373	2008-04-09
-272	val_272	2008-04-09
-138	val_138	2008-04-09
-217	val_217	2008-04-09
-84	val_84	2008-04-09
-348	val_348	2008-04-09
-466	val_466	2008-04-09
-58	val_58	2008-04-09
-8	val_8	2008-04-09
-411	val_411	2008-04-09
-230	val_230	2008-04-09
-208	val_208	2008-04-09
-348	val_348	2008-04-09
-24	val_24	2008-04-09
-463	val_463	2008-04-09
-431	val_431	2008-04-09
-179	val_179	2008-04-09
-172	val_172	2008-04-09
-42	val_42	2008-04-09
-129	val_129	2008-04-09
-158	val_158	2008-04-09
-119	val_119	2008-04-09
-496	val_496	2008-04-09
-0	val_0	2008-04-09
-322	val_322	2008-04-09
-197	val_197	2008-04-09
-468	val_468	2008-04-09
-393	val_393	2008-04-09
-454	val_454	2008-04-09
-100	val_100	2008-04-09
+284	val_284	2008-04-09
+284	val_284	2008-04-08
+284	val_284	2008-04-08
+285	val_285	2008-04-08
+285	val_285	2008-04-08
+285	val_285	2008-04-09
+285	val_285	2008-04-09
+286	val_286	2008-04-09
+286	val_286	2008-04-09
+286	val_286	2008-04-08
+286	val_286	2008-04-08
+287	val_287	2008-04-08
+287	val_287	2008-04-08
+287	val_287	2008-04-09
+287	val_287	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-08
+288	val_288	2008-04-08
+288	val_288	2008-04-08
+288	val_288	2008-04-08
+289	val_289	2008-04-08
+289	val_289	2008-04-08
+289	val_289	2008-04-09
+289	val_289	2008-04-09
+291	val_291	2008-04-09
+291	val_291	2008-04-09
+291	val_291	2008-04-08
+291	val_291	2008-04-08
+292	val_292	2008-04-08
+292	val_292	2008-04-08
+292	val_292	2008-04-09
+292	val_292	2008-04-09
+296	val_296	2008-04-09
+296	val_296	2008-04-09
+296	val_296	2008-04-08
+296	val_296	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
 298	val_298	2008-04-09
-199	val_199	2008-04-09
-191	val_191	2008-04-09
-418	val_418	2008-04-09
-96	val_96	2008-04-09
-26	val_26	2008-04-09
-165	val_165	2008-04-09
-327	val_327	2008-04-09
-230	val_230	2008-04-09
-205	val_205	2008-04-09
-120	val_120	2008-04-09
-131	val_131	2008-04-09
-51	val_51	2008-04-09
-404	val_404	2008-04-09
-43	val_43	2008-04-09
-436	val_436	2008-04-09
-156	val_156	2008-04-09
-469	val_469	2008-04-09
-468	val_468	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+30	val_30	2008-04-09
+30	val_30	2008-04-09
+30	val_30	2008-04-08
+30	val_30	2008-04-08
+302	val_302	2008-04-08
+302	val_302	2008-04-08
+302	val_302	2008-04-09
+302	val_302	2008-04-09
+305	val_305	2008-04-09
+305	val_305	2008-04-09
+305	val_305	2008-04-08
+305	val_305	2008-04-08
+306	val_306	2008-04-08
+306	val_306	2008-04-08
+306	val_306	2008-04-09
+306	val_306	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-08
+307	val_307	2008-04-08
+307	val_307	2008-04-08
+307	val_307	2008-04-08
+308	val_308	2008-04-08
+308	val_308	2008-04-08
 308	val_308	2008-04-09
-95	val_95	2008-04-09
-196	val_196	2008-04-09
-288	val_288	2008-04-09
-481	val_481	2008-04-09
-457	val_457	2008-04-09
-98	val_98	2008-04-09
-282	val_282	2008-04-09
-197	val_197	2008-04-09
-187	val_187	2008-04-09
+308	val_308	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-08
+309	val_309	2008-04-08
+309	val_309	2008-04-08
+309	val_309	2008-04-08
+310	val_310	2008-04-08
+310	val_310	2008-04-08
+310	val_310	2008-04-09
+310	val_310	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+315	val_315	2008-04-08
+315	val_315	2008-04-08
+315	val_315	2008-04-09
+315	val_315	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-09
+317	val_317	2008-04-09
+317	val_317	2008-04-09
+317	val_317	2008-04-09
 318	val_318	2008-04-09
 318	val_318	2008-04-09
-409	val_409	2008-04-09
-470	val_470	2008-04-09
-137	val_137	2008-04-09
-369	val_369	2008-04-09
-316	val_316	2008-04-09
-169	val_169	2008-04-09
-413	val_413	2008-04-09
-85	val_85	2008-04-09
-77	val_77	2008-04-09
-0	val_0	2008-04-09
-490	val_490	2008-04-09
-87	val_87	2008-04-09
-364	val_364	2008-04-09
-179	val_179	2008-04-09
-118	val_118	2008-04-09
-134	val_134	2008-04-09
-395	val_395	2008-04-09
-282	val_282	2008-04-09
-138	val_138	2008-04-09
-238	val_238	2008-04-09
-419	val_419	2008-04-09
-15	val_15	2008-04-09
-118	val_118	2008-04-09
-72	val_72	2008-04-09
-90	val_90	2008-04-09
-307	val_307	2008-04-09
-19	val_19	2008-04-09
-435	val_435	2008-04-09
-10	val_10	2008-04-09
-277	val_277	2008-04-09
-273	val_273	2008-04-09
-306	val_306	2008-04-09
-224	val_224	2008-04-09
-309	val_309	2008-04-09
-389	val_389	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-09
+321	val_321	2008-04-09
+321	val_321	2008-04-09
+321	val_321	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-08
+322	val_322	2008-04-08
+322	val_322	2008-04-08
+322	val_322	2008-04-08
+323	val_323	2008-04-08
+323	val_323	2008-04-08
+323	val_323	2008-04-09
+323	val_323	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-08
+325	val_325	2008-04-08
+325	val_325	2008-04-08
+325	val_325	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
 327	val_327	2008-04-09
-242	val_242	2008-04-09
-369	val_369	2008-04-09
-392	val_392	2008-04-09
-272	val_272	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+33	val_33	2008-04-09
+33	val_33	2008-04-09
+33	val_33	2008-04-08
+33	val_33	2008-04-08
+331	val_331	2008-04-08
+331	val_331	2008-04-08
+331	val_331	2008-04-08
+331	val_331	2008-04-08
 331	val_331	2008-04-09
-401	val_401	2008-04-09
-242	val_242	2008-04-09
-452	val_452	2008-04-09
-177	val_177	2008-04-09
-226	val_226	2008-04-09
-5	val_5	2008-04-09
-497	val_497	2008-04-09
-402	val_402	2008-04-09
-396	val_396	2008-04-09
-317	val_317	2008-04-09
-395	val_395	2008-04-09
-58	val_58	2008-04-09
-35	val_35	2008-04-09
+331	val_331	2008-04-09
+331	val_331	2008-04-09
+331	val_331	2008-04-09
+332	val_332	2008-04-09
+332	val_332	2008-04-09
+332	val_332	2008-04-08
+332	val_332	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-09
+333	val_333	2008-04-09
+333	val_333	2008-04-09
+333	val_333	2008-04-09
+335	val_335	2008-04-09
+335	val_335	2008-04-09
+335	val_335	2008-04-08
+335	val_335	2008-04-08
+336	val_336	2008-04-08
+336	val_336	2008-04-08
 336	val_336	2008-04-09
-95	val_95	2008-04-09
-11	val_11	2008-04-09
-168	val_168	2008-04-09
+336	val_336	2008-04-09
+338	val_338	2008-04-09
+338	val_338	2008-04-09
+338	val_338	2008-04-08
+338	val_338	2008-04-08
+339	val_339	2008-04-08
+339	val_339	2008-04-08
+339	val_339	2008-04-09
+339	val_339	2008-04-09
 34	val_34	2008-04-09
-229	val_229	2008-04-09
-233	val_233	2008-04-09
-143	val_143	2008-04-09
-472	val_472	2008-04-09
-322	val_322	2008-04-09
-498	val_498	2008-04-09
-160	val_160	2008-04-09
-195	val_195	2008-04-09
-42	val_42	2008-04-09
-321	val_321	2008-04-09
-430	val_430	2008-04-09
-119	val_119	2008-04-09
-489	val_489	2008-04-09
-458	val_458	2008-04-09
-78	val_78	2008-04-09
-76	val_76	2008-04-09
-41	val_41	2008-04-09
-223	val_223	2008-04-09
-492	val_492	2008-04-09
-149	val_149	2008-04-09
-449	val_449	2008-04-09
-218	val_218	2008-04-09
-228	val_228	2008-04-09
-138	val_138	2008-04-09
-453	val_453	2008-04-09
-30	val_30	2008-04-09
-209	val_209	2008-04-09
-64	val_64	2008-04-09
-468	val_468	2008-04-09
-76	val_76	2008-04-09
-74	val_74	2008-04-09
+34	val_34	2008-04-09
+34	val_34	2008-04-08
+34	val_34	2008-04-08
+341	val_341	2008-04-08
+341	val_341	2008-04-08
+341	val_341	2008-04-09
+341	val_341	2008-04-09
 342	val_342	2008-04-09
-69	val_69	2008-04-09
-230	val_230	2008-04-09
-33	val_33	2008-04-09
-368	val_368	2008-04-09
-103	val_103	2008-04-09
-296	val_296	2008-04-09
-113	val_113	2008-04-09
-216	val_216	2008-04-09
-367	val_367	2008-04-09
+342	val_342	2008-04-09
+342	val_342	2008-04-09
+342	val_342	2008-04-09
+342	val_342	2008-04-08
+342	val_342	2008-04-08
+342	val_342	2008-04-08
+342	val_342	2008-04-08
+344	val_344	2008-04-08
+344	val_344	2008-04-08
+344	val_344	2008-04-08
+344	val_344	2008-04-08
 344	val_344	2008-04-09
-167	val_167	2008-04-09
-274	val_274	2008-04-09
-219	val_219	2008-04-09
-239	val_239	2008-04-09
-485	val_485	2008-04-09
-116	val_116	2008-04-09
-223	val_223	2008-04-09
-256	val_256	2008-04-09
-263	val_263	2008-04-09
-70	val_70	2008-04-09
-487	val_487	2008-04-09
-480	val_480	2008-04-09
-401	val_401	2008-04-09
-288	val_288	2008-04-09
-191	val_191	2008-04-09
-5	val_5	2008-04-09
-244	val_244	2008-04-09
-438	val_438	2008-04-09
-128	val_128	2008-04-09
-467	val_467	2008-04-09
-432	val_432	2008-04-09
-202	val_202	2008-04-09
-316	val_316	2008-04-09
-229	val_229	2008-04-09
-469	val_469	2008-04-09
-463	val_463	2008-04-09
-280	val_280	2008-04-09
-2	val_2	2008-04-09
+344	val_344	2008-04-09
+344	val_344	2008-04-09
+344	val_344	2008-04-09
+345	val_345	2008-04-09
+345	val_345	2008-04-09
+345	val_345	2008-04-08
+345	val_345	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
 35	val_35	2008-04-09
-283	val_283	2008-04-09
-331	val_331	2008-04-09
-235	val_235	2008-04-09
-80	val_80	2008-04-09
-44	val_44	2008-04-09
-193	val_193	2008-04-09
-321	val_321	2008-04-09
-335	val_335	2008-04-09
-104	val_104	2008-04-09
-466	val_466	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+351	val_351	2008-04-08
+351	val_351	2008-04-08
+351	val_351	2008-04-09
+351	val_351	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-08
+353	val_353	2008-04-08
+353	val_353	2008-04-08
+353	val_353	2008-04-08
+356	val_356	2008-04-08
+356	val_356	2008-04-08
+356	val_356	2008-04-09
+356	val_356	2008-04-09
+360	val_360	2008-04-09
+360	val_360	2008-04-09
+360	val_360	2008-04-08
+360	val_360	2008-04-08
+362	val_362	2008-04-08
+362	val_362	2008-04-08
+362	val_362	2008-04-09
+362	val_362	2008-04-09
+364	val_364	2008-04-09
+364	val_364	2008-04-09
+364	val_364	2008-04-08
+364	val_364	2008-04-08
+365	val_365	2008-04-08
+365	val_365	2008-04-08
+365	val_365	2008-04-09
+365	val_365	2008-04-09
 366	val_366	2008-04-09
-175	val_175	2008-04-09
+366	val_366	2008-04-09
+366	val_366	2008-04-08
+366	val_366	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-09
+367	val_367	2008-04-09
+367	val_367	2008-04-09
+367	val_367	2008-04-09
+368	val_368	2008-04-09
+368	val_368	2008-04-09
+368	val_368	2008-04-08
+368	val_368	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-08
+37	val_37	2008-04-08
+37	val_37	2008-04-08
+37	val_37	2008-04-08
+373	val_373	2008-04-08
+373	val_373	2008-04-08
+373	val_373	2008-04-09
+373	val_373	2008-04-09
+374	val_374	2008-04-09
+374	val_374	2008-04-09
+374	val_374	2008-04-08
+374	val_374	2008-04-08
+375	val_375	2008-04-08
+375	val_375	2008-04-08
+375	val_375	2008-04-09
+375	val_375	2008-04-09
+377	val_377	2008-04-09
+377	val_377	2008-04-09
+377	val_377	2008-04-08
+377	val_377	2008-04-08
+378	val_378	2008-04-08
+378	val_378	2008-04-08
+378	val_378	2008-04-09
+378	val_378	2008-04-09
+379	val_379	2008-04-09
+379	val_379	2008-04-09
+379	val_379	2008-04-08
+379	val_379	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-09
+382	val_382	2008-04-09
+382	val_382	2008-04-09
+382	val_382	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+386	val_386	2008-04-08
+386	val_386	2008-04-08
+386	val_386	2008-04-09
+386	val_386	2008-04-09
+389	val_389	2008-04-09
+389	val_389	2008-04-09
+389	val_389	2008-04-08
+389	val_389	2008-04-08
+392	val_392	2008-04-08
+392	val_392	2008-04-08
+392	val_392	2008-04-09
+392	val_392	2008-04-09
+393	val_393	2008-04-09
+393	val_393	2008-04-09
+393	val_393	2008-04-08
+393	val_393	2008-04-08
+394	val_394	2008-04-08
+394	val_394	2008-04-08
+394	val_394	2008-04-09
+394	val_394	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-08
+395	val_395	2008-04-08
+395	val_395	2008-04-08
+395	val_395	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-08
+397	val_397	2008-04-08
+397	val_397	2008-04-08
+397	val_397	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-09
+399	val_399	2008-04-09
+399	val_399	2008-04-09
+399	val_399	2008-04-09
+4	val_4	2008-04-09
+4	val_4	2008-04-09
+4	val_4	2008-04-08
+4	val_4	2008-04-08
+400	val_400	2008-04-08
+400	val_400	2008-04-08
+400	val_400	2008-04-09
+400	val_400	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+402	val_402	2008-04-08
+402	val_402	2008-04-08
+402	val_402	2008-04-09
+402	val_402	2008-04-09
 403	val_403	2008-04-09
-483	val_483	2008-04-09
-53	val_53	2008-04-09
-105	val_105	2008-04-09
-257	val_257	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-09
+404	val_404	2008-04-09
+404	val_404	2008-04-09
+404	val_404	2008-04-09
 406	val_406	2008-04-09
-409	val_409	2008-04-09
-190	val_190	2008-04-09
 406	val_406	2008-04-09
-401	val_401	2008-04-09
-114	val_114	2008-04-09
-258	val_258	2008-04-09
-90	val_90	2008-04-09
-203	val_203	2008-04-09
-262	val_262	2008-04-09
-348	val_348	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+407	val_407	2008-04-08
+407	val_407	2008-04-08
+407	val_407	2008-04-09
+407	val_407	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+41	val_41	2008-04-08
+41	val_41	2008-04-08
+41	val_41	2008-04-09
+41	val_41	2008-04-09
+411	val_411	2008-04-09
+411	val_411	2008-04-09
+411	val_411	2008-04-08
+411	val_411	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-09
+413	val_413	2008-04-09
+413	val_413	2008-04-09
+413	val_413	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-08
+414	val_414	2008-04-08
+414	val_414	2008-04-08
+414	val_414	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+418	val_418	2008-04-09
+418	val_418	2008-04-09
+418	val_418	2008-04-08
+418	val_418	2008-04-08
+419	val_419	2008-04-08
+419	val_419	2008-04-08
+419	val_419	2008-04-09
+419	val_419	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-08
+42	val_42	2008-04-08
+42	val_42	2008-04-08
+42	val_42	2008-04-08
+421	val_421	2008-04-08
+421	val_421	2008-04-08
+421	val_421	2008-04-09
+421	val_421	2008-04-09
 424	val_424	2008-04-09
-12	val_12	2008-04-09
-396	val_396	2008-04-09
-201	val_201	2008-04-09
-217	val_217	2008-04-09
-164	val_164	2008-04-09
+424	val_424	2008-04-09
+424	val_424	2008-04-09
+424	val_424	2008-04-09
+424	val_424	2008-04-08
+424	val_424	2008-04-08
+424	val_424	2008-04-08
+424	val_424	2008-04-08
+427	val_427	2008-04-08
+427	val_427	2008-04-08
+427	val_427	2008-04-09
+427	val_427	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-08
+429	val_429	2008-04-08
+429	val_429	2008-04-08
+429	val_429	2008-04-08
+43	val_43	2008-04-08
+43	val_43	2008-04-08
+43	val_43	2008-04-09
+43	val_43	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
 431	val_431	2008-04-09
-454	val_454	2008-04-09
-478	val_478	2008-04-09
-298	val_298	2008-04-09
-125	val_125	2008-04-09
 431	val_431	2008-04-09
-164	val_164	2008-04-09
-424	val_424	2008-04-09
-187	val_187	2008-04-09
-382	val_382	2008-04-09
-5	val_5	2008-04-09
-70	val_70	2008-04-09
-397	val_397	2008-04-09
-480	val_480	2008-04-09
-291	val_291	2008-04-09
-24	val_24	2008-04-09
-351	val_351	2008-04-09
-255	val_255	2008-04-09
-104	val_104	2008-04-09
-70	val_70	2008-04-09
-163	val_163	2008-04-09
+431	val_431	2008-04-09
+431	val_431	2008-04-09
+431	val_431	2008-04-09
+431	val_431	2008-04-09
+432	val_432	2008-04-09
+432	val_432	2008-04-09
+432	val_432	2008-04-08
+432	val_432	2008-04-08
+435	val_435	2008-04-08
+435	val_435	2008-04-08
+435	val_435	2008-04-09
+435	val_435	2008-04-09
+436	val_436	2008-04-09
+436	val_436	2008-04-09
+436	val_436	2008-04-08
+436	val_436	2008-04-08
+437	val_437	2008-04-08
+437	val_437	2008-04-08
+437	val_437	2008-04-09
+437	val_437	2008-04-09
 438	val_438	2008-04-09
-119	val_119	2008-04-09
-414	val_414	2008-04-09
-200	val_200	2008-04-09
-491	val_491	2008-04-09
-237	val_237	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+439	val_439	2008-04-08
+439	val_439	2008-04-08
+439	val_439	2008-04-08
+439	val_439	2008-04-08
 439	val_439	2008-04-09
-360	val_360	2008-04-09
-248	val_248	2008-04-09
-479	val_479	2008-04-09
-305	val_305	2008-04-09
-417	val_417	2008-04-09
-199	val_199	2008-04-09
-444	val_444	2008-04-09
-120	val_120	2008-04-09
-429	val_429	2008-04-09
-169	val_169	2008-04-09
+439	val_439	2008-04-09
+439	val_439	2008-04-09
+439	val_439	2008-04-09
+44	val_44	2008-04-09
+44	val_44	2008-04-09
+44	val_44	2008-04-08
+44	val_44	2008-04-08
+443	val_443	2008-04-08
+443	val_443	2008-04-08
 443	val_443	2008-04-09
-323	val_323	2008-04-09
-325	val_325	2008-04-09
-277	val_277	2008-04-09
-230	val_230	2008-04-09
-478	val_478	2008-04-09
-178	val_178	2008-04-09
-468	val_468	2008-04-09
-310	val_310	2008-04-09
-317	val_317	2008-04-09
-333	val_333	2008-04-09
-493	val_493	2008-04-09
+443	val_443	2008-04-09
+444	val_444	2008-04-09
+444	val_444	2008-04-09
+444	val_444	2008-04-08
+444	val_444	2008-04-08
+446	val_446	2008-04-08
+446	val_446	2008-04-08
+446	val_446	2008-04-09
+446	val_446	2008-04-09
+448	val_448	2008-04-09
+448	val_448	2008-04-09
+448	val_448	2008-04-08
+448	val_448	2008-04-08
+449	val_449	2008-04-08
+449	val_449	2008-04-08
+449	val_449	2008-04-09
+449	val_449	2008-04-09
+452	val_452	2008-04-09
+452	val_452	2008-04-09
+452	val_452	2008-04-08
+452	val_452	2008-04-08
+453	val_453	2008-04-08
+453	val_453	2008-04-08
+453	val_453	2008-04-09
+453	val_453	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+455	val_455	2008-04-08
+455	val_455	2008-04-08
+455	val_455	2008-04-09
+455	val_455	2008-04-09
+457	val_457	2008-04-09
+457	val_457	2008-04-09
+457	val_457	2008-04-08
+457	val_457	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-09
+458	val_458	2008-04-09
+458	val_458	2008-04-09
+458	val_458	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-08
+459	val_459	2008-04-08
+459	val_459	2008-04-08
+459	val_459	2008-04-08
+460	val_460	2008-04-08
+460	val_460	2008-04-08
+460	val_460	2008-04-09
 460	val_460	2008-04-09
-207	val_207	2008-04-09
-249	val_249	2008-04-09
-265	val_265	2008-04-09
-480	val_480	2008-04-09
-83	val_83	2008-04-09
-136	val_136	2008-04-09
-353	val_353	2008-04-09
-172	val_172	2008-04-09
-214	val_214	2008-04-09
 462	val_462	2008-04-09
-233	val_233	2008-04-09
-406	val_406	2008-04-09
-133	val_133	2008-04-09
-175	val_175	2008-04-09
-189	val_189	2008-04-09
-454	val_454	2008-04-09
-375	val_375	2008-04-09
-401	val_401	2008-04-09
-421	val_421	2008-04-09
-407	val_407	2008-04-09
-384	val_384	2008-04-09
-256	val_256	2008-04-09
-26	val_26	2008-04-09
-134	val_134	2008-04-09
-67	val_67	2008-04-09
-384	val_384	2008-04-09
-379	val_379	2008-04-09
-18	val_18	2008-04-09
 462	val_462	2008-04-09
-492	val_492	2008-04-09
-100	val_100	2008-04-09
-298	val_298	2008-04-09
-9	val_9	2008-04-09
-341	val_341	2008-04-09
-498	val_498	2008-04-09
-146	val_146	2008-04-09
-458	val_458	2008-04-09
-362	val_362	2008-04-09
-186	val_186	2008-04-09
-285	val_285	2008-04-09
-348	val_348	2008-04-09
-167	val_167	2008-04-09
-18	val_18	2008-04-09
-273	val_273	2008-04-09
-183	val_183	2008-04-09
-281	val_281	2008-04-09
-344	val_344	2008-04-09
-97	val_97	2008-04-09
+462	val_462	2008-04-09
+462	val_462	2008-04-09
+462	val_462	2008-04-08
+462	val_462	2008-04-08
+462	val_462	2008-04-08
+462	val_462	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-09
+463	val_463	2008-04-09
+463	val_463	2008-04-09
+463	val_463	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+467	val_467	2008-04-08
+467	val_467	2008-04-08
+467	val_467	2008-04-09
+467	val_467	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
 469	val_469	2008-04-09
-315	val_315	2008-04-09
-84	val_84	2008-04-09
-28	val_28	2008-04-09
-37	val_37	2008-04-09
-448	val_448	2008-04-09
-152	val_152	2008-04-09
-348	val_348	2008-04-09
-307	val_307	2008-04-09
-194	val_194	2008-04-09
-414	val_414	2008-04-09
-477	val_477	2008-04-09
-222	val_222	2008-04-09
-126	val_126	2008-04-09
-90	val_90	2008-04-09
-169	val_169	2008-04-09
-403	val_403	2008-04-09
-400	val_400	2008-04-09
-200	val_200	2008-04-09
-97	val_97	2008-04-09
-238	val_238	2008-04-09
-86	val_86	2008-04-09
-311	val_311	2008-04-09
-27	val_27	2008-04-09
-165	val_165	2008-04-09
-409	val_409	2008-04-09
-255	val_255	2008-04-09
-278	val_278	2008-04-09
-98	val_98	2008-04-09
-484	val_484	2008-04-09
-265	val_265	2008-04-09
-193	val_193	2008-04-09
-401	val_401	2008-04-09
-150	val_150	2008-04-09
-273	val_273	2008-04-09
-224	val_224	2008-04-09
-369	val_369	2008-04-09
-66	val_66	2008-04-09
-128	val_128	2008-04-09
-213	val_213	2008-04-09
-146	val_146	2008-04-09
-406	val_406	2008-04-09
-429	val_429	2008-04-09
-374	val_374	2008-04-09
-152	val_152	2008-04-09
 469	val_469	2008-04-09
-145	val_145	2008-04-09
-495	val_495	2008-04-09
-37	val_37	2008-04-09
-327	val_327	2008-04-09
-281	val_281	2008-04-09
-277	val_277	2008-04-09
-209	val_209	2008-04-09
-15	val_15	2008-04-09
-82	val_82	2008-04-09
-403	val_403	2008-04-09
-166	val_166	2008-04-09
-417	val_417	2008-04-09
-430	val_430	2008-04-09
-252	val_252	2008-04-09
-292	val_292	2008-04-09
-219	val_219	2008-04-09
-287	val_287	2008-04-09
-153	val_153	2008-04-09
-193	val_193	2008-04-09
-338	val_338	2008-04-09
-446	val_446	2008-04-09
-459	val_459	2008-04-09
-394	val_394	2008-04-09
-237	val_237	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+47	val_47	2008-04-09
+47	val_47	2008-04-09
+47	val_47	2008-04-08
+47	val_47	2008-04-08
+470	val_470	2008-04-08
+470	val_470	2008-04-08
+470	val_470	2008-04-09
+470	val_470	2008-04-09
+472	val_472	2008-04-09
+472	val_472	2008-04-09
+472	val_472	2008-04-08
+472	val_472	2008-04-08
+475	val_475	2008-04-08
+475	val_475	2008-04-08
+475	val_475	2008-04-09
+475	val_475	2008-04-09
+477	val_477	2008-04-09
+477	val_477	2008-04-09
+477	val_477	2008-04-08
+477	val_477	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-09
+478	val_478	2008-04-09
+478	val_478	2008-04-09
+478	val_478	2008-04-09
+479	val_479	2008-04-09
+479	val_479	2008-04-09
+479	val_479	2008-04-08
+479	val_479	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+481	val_481	2008-04-09
+481	val_481	2008-04-09
+481	val_481	2008-04-08
+481	val_481	2008-04-08
+482	val_482	2008-04-08
+482	val_482	2008-04-08
 482	val_482	2008-04-09
-174	val_174	2008-04-09
-413	val_413	2008-04-09
-494	val_494	2008-04-09
-207	val_207	2008-04-09
-199	val_199	2008-04-09
-466	val_466	2008-04-09
-208	val_208	2008-04-09
-174	val_174	2008-04-09
-399	val_399	2008-04-09
-396	val_396	2008-04-09
-247	val_247	2008-04-09
-417	val_417	2008-04-09
+482	val_482	2008-04-09
+483	val_483	2008-04-09
+483	val_483	2008-04-09
+483	val_483	2008-04-08
+483	val_483	2008-04-08
+484	val_484	2008-04-08
+484	val_484	2008-04-08
+484	val_484	2008-04-09
+484	val_484	2008-04-09
+485	val_485	2008-04-09
+485	val_485	2008-04-09
+485	val_485	2008-04-08
+485	val_485	2008-04-08
+487	val_487	2008-04-08
+487	val_487	2008-04-08
+487	val_487	2008-04-09
+487	val_487	2008-04-09
 489	val_489	2008-04-09
-162	val_162	2008-04-09
-377	val_377	2008-04-09
-397	val_397	2008-04-09
-309	val_309	2008-04-09
-365	val_365	2008-04-09
-266	val_266	2008-04-09
-439	val_439	2008-04-09
-342	val_342	2008-04-09
-367	val_367	2008-04-09
-325	val_325	2008-04-09
-167	val_167	2008-04-09
-195	val_195	2008-04-09
-475	val_475	2008-04-09
-17	val_17	2008-04-09
-113	val_113	2008-04-09
-155	val_155	2008-04-09
-203	val_203	2008-04-09
-339	val_339	2008-04-09
-0	val_0	2008-04-09
-455	val_455	2008-04-09
-128	val_128	2008-04-09
-311	val_311	2008-04-09
-316	val_316	2008-04-09
-57	val_57	2008-04-09
-302	val_302	2008-04-09
-205	val_205	2008-04-09
-149	val_149	2008-04-09
-438	val_438	2008-04-09
-345	val_345	2008-04-09
-129	val_129	2008-04-09
-170	val_170	2008-04-09
-20	val_20	2008-04-09
 489	val_489	2008-04-09
-157	val_157	2008-04-09
-378	val_378	2008-04-09
-221	val_221	2008-04-09
-92	val_92	2008-04-09
-111	val_111	2008-04-09
-47	val_47	2008-04-09
-72	val_72	2008-04-09
-4	val_4	2008-04-09
-280	val_280	2008-04-09
-35	val_35	2008-04-09
-427	val_427	2008-04-09
-277	val_277	2008-04-09
-208	val_208	2008-04-09
-356	val_356	2008-04-09
-399	val_399	2008-04-09
-169	val_169	2008-04-09
-382	val_382	2008-04-09
-498	val_498	2008-04-09
-125	val_125	2008-04-09
-386	val_386	2008-04-09
-437	val_437	2008-04-09
-469	val_469	2008-04-09
-192	val_192	2008-04-09
-286	val_286	2008-04-09
-187	val_187	2008-04-09
-176	val_176	2008-04-09
-54	val_54	2008-04-09
-459	val_459	2008-04-09
-51	val_51	2008-04-09
-138	val_138	2008-04-09
-103	val_103	2008-04-09
-239	val_239	2008-04-09
-213	val_213	2008-04-09
-216	val_216	2008-04-09
-430	val_430	2008-04-09
-278	val_278	2008-04-09
-176	val_176	2008-04-09
-289	val_289	2008-04-09
-221	val_221	2008-04-09
-65	val_65	2008-04-09
-318	val_318	2008-04-09
-332	val_332	2008-04-09
-311	val_311	2008-04-09
-275	val_275	2008-04-09
-137	val_137	2008-04-09
-241	val_241	2008-04-09
-83	val_83	2008-04-09
-333	val_333	2008-04-09
-180	val_180	2008-04-09
-284	val_284	2008-04-09
-12	val_12	2008-04-09
-230	val_230	2008-04-09
-181	val_181	2008-04-09
-67	val_67	2008-04-09
-260	val_260	2008-04-09
-404	val_404	2008-04-09
-384	val_384	2008-04-09
 489	val_489	2008-04-09
-353	val_353	2008-04-09
-373	val_373	2008-04-09
-272	val_272	2008-04-09
-138	val_138	2008-04-09
-217	val_217	2008-04-09
-84	val_84	2008-04-09
-348	val_348	2008-04-09
-466	val_466	2008-04-09
-58	val_58	2008-04-09
-8	val_8	2008-04-09
-411	val_411	2008-04-09
-230	val_230	2008-04-09
-208	val_208	2008-04-09
-348	val_348	2008-04-09
-24	val_24	2008-04-09
-463	val_463	2008-04-09
-431	val_431	2008-04-09
-179	val_179	2008-04-09
-172	val_172	2008-04-09
-42	val_42	2008-04-09
-129	val_129	2008-04-09
-158	val_158	2008-04-09
-119	val_119	2008-04-09
-496	val_496	2008-04-09
-0	val_0	2008-04-09
-322	val_322	2008-04-09
-197	val_197	2008-04-09
-468	val_468	2008-04-09
-393	val_393	2008-04-09
-454	val_454	2008-04-09
-100	val_100	2008-04-09
-298	val_298	2008-04-09
-199	val_199	2008-04-09
-191	val_191	2008-04-09
-418	val_418	2008-04-09
-96	val_96	2008-04-09
-26	val_26	2008-04-09
-165	val_165	2008-04-09
-327	val_327	2008-04-09
-230	val_230	2008-04-09
-205	val_205	2008-04-09
-120	val_120	2008-04-09
-131	val_131	2008-04-09
-51	val_51	2008-04-09
-404	val_404	2008-04-09
-43	val_43	2008-04-09
-436	val_436	2008-04-09
-156	val_156	2008-04-09
-469	val_469	2008-04-09
-468	val_468	2008-04-09
-308	val_308	2008-04-09
-95	val_95	2008-04-09
-196	val_196	2008-04-09
-288	val_288	2008-04-09
-481	val_481	2008-04-09
-457	val_457	2008-04-09
-98	val_98	2008-04-09
-282	val_282	2008-04-09
-197	val_197	2008-04-09
-187	val_187	2008-04-09
-318	val_318	2008-04-09
-318	val_318	2008-04-09
-409	val_409	2008-04-09
-470	val_470	2008-04-09
-137	val_137	2008-04-09
-369	val_369	2008-04-09
-316	val_316	2008-04-09
-169	val_169	2008-04-09
-413	val_413	2008-04-09
-85	val_85	2008-04-09
-77	val_77	2008-04-09
-0	val_0	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+490	val_490	2008-04-08
+490	val_490	2008-04-08
 490	val_490	2008-04-09
-87	val_87	2008-04-09
-364	val_364	2008-04-09
-179	val_179	2008-04-09
-118	val_118	2008-04-09
-134	val_134	2008-04-09
-395	val_395	2008-04-09
-282	val_282	2008-04-09
-138	val_138	2008-04-09
-238	val_238	2008-04-09
-419	val_419	2008-04-09
-15	val_15	2008-04-09
-118	val_118	2008-04-09
-72	val_72	2008-04-09
-90	val_90	2008-04-09
-307	val_307	2008-04-09
-19	val_19	2008-04-09
-435	val_435	2008-04-09
-10	val_10	2008-04-09
-277	val_277	2008-04-09
-273	val_273	2008-04-09
-306	val_306	2008-04-09
-224	val_224	2008-04-09
-309	val_309	2008-04-09
-389	val_389	2008-04-09
-327	val_327	2008-04-09
-242	val_242	2008-04-09
-369	val_369	2008-04-09
-392	val_392	2008-04-09
-272	val_272	2008-04-09
-331	val_331	2008-04-09
-401	val_401	2008-04-09
-242	val_242	2008-04-09
-452	val_452	2008-04-09
-177	val_177	2008-04-09
-226	val_226	2008-04-09
-5	val_5	2008-04-09
+490	val_490	2008-04-09
+491	val_491	2008-04-09
+491	val_491	2008-04-09
+491	val_491	2008-04-08
+491	val_491	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-09
+492	val_492	2008-04-09
+492	val_492	2008-04-09
+492	val_492	2008-04-09
+493	val_493	2008-04-09
+493	val_493	2008-04-09
+493	val_493	2008-04-08
+493	val_493	2008-04-08
+494	val_494	2008-04-08
+494	val_494	2008-04-08
+494	val_494	2008-04-09
+494	val_494	2008-04-09
+495	val_495	2008-04-09
+495	val_495	2008-04-09
+495	val_495	2008-04-08
+495	val_495	2008-04-08
+496	val_496	2008-04-08
+496	val_496	2008-04-08
+496	val_496	2008-04-09
+496	val_496	2008-04-09
 497	val_497	2008-04-09
-402	val_402	2008-04-09
-396	val_396	2008-04-09
-317	val_317	2008-04-09
-395	val_395	2008-04-09
-58	val_58	2008-04-09
-35	val_35	2008-04-09
-336	val_336	2008-04-09
-95	val_95	2008-04-09
-11	val_11	2008-04-09
-168	val_168	2008-04-09
-34	val_34	2008-04-09
-229	val_229	2008-04-09
-233	val_233	2008-04-09
-143	val_143	2008-04-09
-472	val_472	2008-04-09
-322	val_322	2008-04-09
+497	val_497	2008-04-09
+497	val_497	2008-04-08
+497	val_497	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
 498	val_498	2008-04-09
-160	val_160	2008-04-09
-195	val_195	2008-04-09
-42	val_42	2008-04-09
-321	val_321	2008-04-09
-430	val_430	2008-04-09
-119	val_119	2008-04-09
-489	val_489	2008-04-09
-458	val_458	2008-04-09
-78	val_78	2008-04-09
-76	val_76	2008-04-09
-41	val_41	2008-04-09
-223	val_223	2008-04-09
-492	val_492	2008-04-09
-149	val_149	2008-04-09
-449	val_449	2008-04-09
-218	val_218	2008-04-09
-228	val_228	2008-04-09
-138	val_138	2008-04-09
-453	val_453	2008-04-09
-30	val_30	2008-04-09
-209	val_209	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-09
+51	val_51	2008-04-09
+51	val_51	2008-04-09
+51	val_51	2008-04-09
+53	val_53	2008-04-09
+53	val_53	2008-04-09
+53	val_53	2008-04-08
+53	val_53	2008-04-08
+54	val_54	2008-04-08
+54	val_54	2008-04-08
+54	val_54	2008-04-09
+54	val_54	2008-04-09
+57	val_57	2008-04-09
+57	val_57	2008-04-09
+57	val_57	2008-04-08
+57	val_57	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-09
+58	val_58	2008-04-09
+58	val_58	2008-04-09
+58	val_58	2008-04-09
 64	val_64	2008-04-09
-468	val_468	2008-04-09
-76	val_76	2008-04-09
-74	val_74	2008-04-09
-342	val_342	2008-04-09
+64	val_64	2008-04-09
+64	val_64	2008-04-08
+64	val_64	2008-04-08
+65	val_65	2008-04-08
+65	val_65	2008-04-08
+65	val_65	2008-04-09
+65	val_65	2008-04-09
+66	val_66	2008-04-09
+66	val_66	2008-04-09
+66	val_66	2008-04-08
+66	val_66	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-09
+67	val_67	2008-04-09
+67	val_67	2008-04-09
+67	val_67	2008-04-09
 69	val_69	2008-04-09
-230	val_230	2008-04-09
-33	val_33	2008-04-09
-368	val_368	2008-04-09
-103	val_103	2008-04-09
-296	val_296	2008-04-09
-113	val_113	2008-04-09
-216	val_216	2008-04-09
-367	val_367	2008-04-09
-344	val_344	2008-04-09
-167	val_167	2008-04-09
-274	val_274	2008-04-09
-219	val_219	2008-04-09
-239	val_239	2008-04-09
-485	val_485	2008-04-09
-116	val_116	2008-04-09
-223	val_223	2008-04-09
-256	val_256	2008-04-09
-263	val_263	2008-04-09
+69	val_69	2008-04-09
+69	val_69	2008-04-08
+69	val_69	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
 70	val_70	2008-04-09
-487	val_487	2008-04-09
-480	val_480	2008-04-09
-401	val_401	2008-04-09
-288	val_288	2008-04-09
-191	val_191	2008-04-09
-5	val_5	2008-04-09
-244	val_244	2008-04-09
-438	val_438	2008-04-09
-128	val_128	2008-04-09
-467	val_467	2008-04-09
-432	val_432	2008-04-09
-202	val_202	2008-04-09
-316	val_316	2008-04-09
-229	val_229	2008-04-09
-469	val_469	2008-04-09
-463	val_463	2008-04-09
-280	val_280	2008-04-09
-2	val_2	2008-04-09
-35	val_35	2008-04-09
-283	val_283	2008-04-09
-331	val_331	2008-04-09
-235	val_235	2008-04-09
-80	val_80	2008-04-09
-44	val_44	2008-04-09
-193	val_193	2008-04-09
-321	val_321	2008-04-09
-335	val_335	2008-04-09
-104	val_104	2008-04-09
-466	val_466	2008-04-09
-366	val_366	2008-04-09
-175	val_175	2008-04-09
-403	val_403	2008-04-09
-483	val_483	2008-04-09
-53	val_53	2008-04-09
-105	val_105	2008-04-09
-257	val_257	2008-04-09
-406	val_406	2008-04-09
-409	val_409	2008-04-09
-190	val_190	2008-04-09
-406	val_406	2008-04-09
-401	val_401	2008-04-09
-114	val_114	2008-04-09
-258	val_258	2008-04-09
-90	val_90	2008-04-09
-203	val_203	2008-04-09
-262	val_262	2008-04-09
-348	val_348	2008-04-09
-424	val_424	2008-04-09
-12	val_12	2008-04-09
-396	val_396	2008-04-09
-201	val_201	2008-04-09
-217	val_217	2008-04-09
-164	val_164	2008-04-09
-431	val_431	2008-04-09
-454	val_454	2008-04-09
-478	val_478	2008-04-09
-298	val_298	2008-04-09
-125	val_125	2008-04-09
-431	val_431	2008-04-09
-164	val_164	2008-04-09
-424	val_424	2008-04-09
-187	val_187	2008-04-09
-382	val_382	2008-04-09
-5	val_5	2008-04-09
 70	val_70	2008-04-09
-397	val_397	2008-04-09
-480	val_480	2008-04-09
-291	val_291	2008-04-09
-24	val_24	2008-04-09
-351	val_351	2008-04-09
-255	val_255	2008-04-09
-104	val_104	2008-04-09
 70	val_70	2008-04-09
-163	val_163	2008-04-09
-438	val_438	2008-04-09
-119	val_119	2008-04-09
-414	val_414	2008-04-09
-200	val_200	2008-04-09
-491	val_491	2008-04-09
-237	val_237	2008-04-09
-439	val_439	2008-04-09
-360	val_360	2008-04-09
-248	val_248	2008-04-09
-479	val_479	2008-04-09
-305	val_305	2008-04-09
-417	val_417	2008-04-09
-199	val_199	2008-04-09
-444	val_444	2008-04-09
-120	val_120	2008-04-09
-429	val_429	2008-04-09
-169	val_169	2008-04-09
-443	val_443	2008-04-09
-323	val_323	2008-04-09
-325	val_325	2008-04-09
-277	val_277	2008-04-09
-230	val_230	2008-04-09
-478	val_478	2008-04-09
-178	val_178	2008-04-09
-468	val_468	2008-04-09
-310	val_310	2008-04-09
-317	val_317	2008-04-09
-333	val_333	2008-04-09
-493	val_493	2008-04-09
-460	val_460	2008-04-09
-207	val_207	2008-04-09
-249	val_249	2008-04-09
-265	val_265	2008-04-09
-480	val_480	2008-04-09
+70	val_70	2008-04-09
+70	val_70	2008-04-09
+70	val_70	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-08
+72	val_72	2008-04-08
+72	val_72	2008-04-08
+72	val_72	2008-04-08
+74	val_74	2008-04-08
+74	val_74	2008-04-08
+74	val_74	2008-04-09
+74	val_74	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-08
+76	val_76	2008-04-08
+76	val_76	2008-04-08
+76	val_76	2008-04-08
+77	val_77	2008-04-08
+77	val_77	2008-04-08
+77	val_77	2008-04-09
+77	val_77	2008-04-09
+78	val_78	2008-04-09
+78	val_78	2008-04-09
+78	val_78	2008-04-08
+78	val_78	2008-04-08
+8	val_8	2008-04-08
+8	val_8	2008-04-08
+8	val_8	2008-04-09
+8	val_8	2008-04-09
+80	val_80	2008-04-09
+80	val_80	2008-04-09
+80	val_80	2008-04-08
+80	val_80	2008-04-08
+82	val_82	2008-04-08
+82	val_82	2008-04-08
+82	val_82	2008-04-09
+82	val_82	2008-04-09
 83	val_83	2008-04-09
-136	val_136	2008-04-09
-353	val_353	2008-04-09
-172	val_172	2008-04-09
-214	val_214	2008-04-09
-462	val_462	2008-04-09
-233	val_233	2008-04-09
-406	val_406	2008-04-09
-133	val_133	2008-04-09
-175	val_175	2008-04-09
-189	val_189	2008-04-09
-454	val_454	2008-04-09
-375	val_375	2008-04-09
-401	val_401	2008-04-09
-421	val_421	2008-04-09
-407	val_407	2008-04-09
-384	val_384	2008-04-09
-256	val_256	2008-04-09
-26	val_26	2008-04-09
-134	val_134	2008-04-09
-67	val_67	2008-04-09
-384	val_384	2008-04-09
-379	val_379	2008-04-09
-18	val_18	2008-04-09
-462	val_462	2008-04-09
-492	val_492	2008-04-09
-100	val_100	2008-04-09
-298	val_298	2008-04-09
-9	val_9	2008-04-09
-341	val_341	2008-04-09
-498	val_498	2008-04-09
-146	val_146	2008-04-09
-458	val_458	2008-04-09
-362	val_362	2008-04-09
-186	val_186	2008-04-09
-285	val_285	2008-04-09
-348	val_348	2008-04-09
-167	val_167	2008-04-09
-18	val_18	2008-04-09
-273	val_273	2008-04-09
-183	val_183	2008-04-09
-281	val_281	2008-04-09
-344	val_344	2008-04-09
-97	val_97	2008-04-09
-469	val_469	2008-04-09
-315	val_315	2008-04-09
+83	val_83	2008-04-09
+83	val_83	2008-04-09
+83	val_83	2008-04-09
+83	val_83	2008-04-08
+83	val_83	2008-04-08
+83	val_83	2008-04-08
+83	val_83	2008-04-08
+84	val_84	2008-04-08
+84	val_84	2008-04-08
+84	val_84	2008-04-08
+84	val_84	2008-04-08
 84	val_84	2008-04-09
-28	val_28	2008-04-09
-37	val_37	2008-04-09
-448	val_448	2008-04-09
-152	val_152	2008-04-09
-348	val_348	2008-04-09
-307	val_307	2008-04-09
-194	val_194	2008-04-09
-414	val_414	2008-04-09
-477	val_477	2008-04-09
-222	val_222	2008-04-09
-126	val_126	2008-04-09
+84	val_84	2008-04-09
+84	val_84	2008-04-09
+84	val_84	2008-04-09
+85	val_85	2008-04-09
+85	val_85	2008-04-09
+85	val_85	2008-04-08
+85	val_85	2008-04-08
+86	val_86	2008-04-08
+86	val_86	2008-04-08
+86	val_86	2008-04-09
+86	val_86	2008-04-09
+87	val_87	2008-04-09
+87	val_87	2008-04-09
+87	val_87	2008-04-08
+87	val_87	2008-04-08
+9	val_9	2008-04-08
+9	val_9	2008-04-08
+9	val_9	2008-04-09
+9	val_9	2008-04-09
 90	val_90	2008-04-09
-169	val_169	2008-04-09
-403	val_403	2008-04-09
-400	val_400	2008-04-09
-200	val_200	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+92	val_92	2008-04-08
+92	val_92	2008-04-08
+92	val_92	2008-04-09
+92	val_92	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-08
+95	val_95	2008-04-08
+95	val_95	2008-04-08
+95	val_95	2008-04-08
+96	val_96	2008-04-08
+96	val_96	2008-04-08
+96	val_96	2008-04-09
+96	val_96	2008-04-09
+97	val_97	2008-04-09
 97	val_97	2008-04-09
+97	val_97	2008-04-09
+97	val_97	2008-04-09
+97	val_97	2008-04-08
+97	val_97	2008-04-08
+97	val_97	2008-04-08
+97	val_97	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-09
+98	val_98	2008-04-09
+98	val_98	2008-04-09
+98	val_98	2008-04-09
 PREHOOK: query: drop table merge_src_part2
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@merge_src_part2
@@ -4733,10 +4733,10 @@ STAGE PLANS:
                       type: string
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 [s:merge_src_part]
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 [s:merge_src_part]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 [s:merge_src_part]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 [s:merge_src_part]
       Path -> Partition:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08 
           Partition
             base file name: ds=2008-04-08
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -4749,7 +4749,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-08
               name default.merge_src_part
               numFiles 2
               numPartitions 2
@@ -4760,7 +4760,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 11624
-              transient_lastDdlTime 1320966919
+              transient_lastDdlTime 1327549123
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -4771,7 +4771,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part
                 name default.merge_src_part
                 numFiles 4
                 numPartitions 2
@@ -4782,11 +4782,11 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 23248
-                transient_lastDdlTime 1320966919
+                transient_lastDdlTime 1327549123
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part
             name: default.merge_src_part
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09 
           Partition
             base file name: ds=2008-04-09
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -4799,7 +4799,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part/ds=2008-04-09
               name default.merge_src_part
               numFiles 2
               numPartitions 2
@@ -4810,7 +4810,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 11624
-              transient_lastDdlTime 1320966919
+              transient_lastDdlTime 1327549123
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -4821,7 +4821,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part
                 name default.merge_src_part
                 numFiles 4
                 numPartitions 2
@@ -4832,7 +4832,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 23248
-                transient_lastDdlTime 1320966919
+                transient_lastDdlTime 1327549123
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part
             name: default.merge_src_part
@@ -4850,9 +4850,9 @@ STAGE PLANS:
             File Output Operator
               compressed: false
               GlobalTableId: 1
-              directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10002
+              directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10002
               NumFilesPerFileSink: 1
-              Stats Publishing Key Prefix: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10000/
+              Stats Publishing Key Prefix: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10000/
               table:
                   input format: org.apache.hadoop.mapred.TextInputFormat
                   output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -4862,13 +4862,13 @@ STAGE PLANS:
                     columns.types string:string
                     file.inputformat org.apache.hadoop.mapred.TextInputFormat
                     file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                    location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                    location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                     name default.merge_src_part2
                     partition_columns ds
                     serialization.ddl struct merge_src_part2 { string key, string value}
                     serialization.format 1
                     serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                    transient_lastDdlTime 1320966940
+                    transient_lastDdlTime 1327549158
                   serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                   name: default.merge_src_part2
               TotalFiles: 1
@@ -4882,8 +4882,8 @@ STAGE PLANS:
     Move Operator
       files:
           hdfs directory: true
-          source: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10002
-          destination: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10000
+          source: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10002
+          destination: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10000
 
   Stage: Stage-0
     Move Operator
@@ -4891,7 +4891,7 @@ STAGE PLANS:
           partition:
             ds 
           replace: true
-          source: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10000
+          source: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10000
           table:
               input format: org.apache.hadoop.mapred.TextInputFormat
               output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -4901,29 +4901,29 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                 name default.merge_src_part2
                 partition_columns ds
                 serialization.ddl struct merge_src_part2 { string key, string value}
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                transient_lastDdlTime 1320966940
+                transient_lastDdlTime 1327549158
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part2
-          tmp directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10001
+          tmp directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10001
 
   Stage: Stage-2
     Stats-Aggr Operator
-      Stats Aggregation Key Prefix: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10000/
+      Stats Aggregation Key Prefix: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10000/
 
   Stage: Stage-3
     Map Reduce
       Alias -> Map Operator Tree:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10002 
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10002 
             File Output Operator
               compressed: false
               GlobalTableId: 0
-              directory: pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10000
+              directory: pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10000
               NumFilesPerFileSink: 1
               table:
                   input format: org.apache.hadoop.mapred.TextInputFormat
@@ -4934,13 +4934,13 @@ STAGE PLANS:
                     columns.types string:string
                     file.inputformat org.apache.hadoop.mapred.TextInputFormat
                     file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                    location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                    location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                     name default.merge_src_part2
                     partition_columns ds
                     serialization.ddl struct merge_src_part2 { string key, string value}
                     serialization.format 1
                     serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                    transient_lastDdlTime 1320966940
+                    transient_lastDdlTime 1327549158
                   serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                   name: default.merge_src_part2
               TotalFiles: 1
@@ -4948,9 +4948,9 @@ STAGE PLANS:
               MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10002 [pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10002]
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10002 [pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10002]
       Path -> Partition:
-        pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/scratchdir/hive_2011-11-10_15-15-40_167_5563199213782674962/-ext-10002 
+        pfile:/home/cloudera/Code/hive/build/ql/scratchdir/hive_2012-01-25_19-39-18_821_446681397559818565/-ext-10002 
           Partition
             base file name: -ext-10002
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -4961,13 +4961,13 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
               name default.merge_src_part2
               partition_columns ds
               serialization.ddl struct merge_src_part2 { string key, string value}
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-              transient_lastDdlTime 1320966940
+              transient_lastDdlTime 1327549158
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -4978,13 +4978,13 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/rsurowka/JAVA_HIVE/apache-hive/build/ql/test/data/warehouse/merge_src_part2
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/merge_src_part2
                 name default.merge_src_part2
                 partition_columns ds
                 serialization.ddl struct merge_src_part2 { string key, string value}
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
-                transient_lastDdlTime 1320966940
+                transient_lastDdlTime 1327549158
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.merge_src_part2
             name: default.merge_src_part2
@@ -5035,16 +5035,16 @@ POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).key SIMPLE [(merge_s
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).value SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:value, type:string, comment:null), ]
 ds=2008-04-08
 ds=2008-04-09
-PREHOOK: query: select * from merge_src_part2 where ds is not null
+PREHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-08
 PREHOOK: Input: default@merge_src_part2@ds=2008-04-09
-PREHOOK: Output: file:/tmp/rsurowka/hive_2011-11-10_15-15-46_946_3999072081611150839/-mr-10000
-POSTHOOK: query: select * from merge_src_part2 where ds is not null
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-27_511_860961089215311211/-mr-10000
+POSTHOOK: query: select * from merge_src_part2 where ds is not null ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-08
 POSTHOOK: Input: default@merge_src_part2@ds=2008-04-09
-POSTHOOK: Output: file:/tmp/rsurowka/hive_2011-11-10_15-15-46_946_3999072081611150839/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-27_511_860961089215311211/-mr-10000
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-08).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: merge_src_part PARTITION(ds=2008-04-09).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -5057,2003 +5057,2003 @@ POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).key SIMPLE [(merge_s
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).value SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).key SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: merge_src_part2 PARTITION(ds=2008-04-09).value SIMPLE [(merge_src_part)merge_src_part.FieldSchema(name:value, type:string, comment:null), ]
-238	val_238	2008-04-08
-86	val_86	2008-04-08
-311	val_311	2008-04-08
-27	val_27	2008-04-08
-165	val_165	2008-04-08
-409	val_409	2008-04-08
-255	val_255	2008-04-08
-278	val_278	2008-04-08
-98	val_98	2008-04-08
-484	val_484	2008-04-08
-265	val_265	2008-04-08
-193	val_193	2008-04-08
-401	val_401	2008-04-08
-150	val_150	2008-04-08
-273	val_273	2008-04-08
-224	val_224	2008-04-08
-369	val_369	2008-04-08
-66	val_66	2008-04-08
-128	val_128	2008-04-08
-213	val_213	2008-04-08
-146	val_146	2008-04-08
-406	val_406	2008-04-08
-429	val_429	2008-04-08
-374	val_374	2008-04-08
-152	val_152	2008-04-08
-469	val_469	2008-04-08
-145	val_145	2008-04-08
-495	val_495	2008-04-08
-37	val_37	2008-04-08
-327	val_327	2008-04-08
-281	val_281	2008-04-08
-277	val_277	2008-04-08
-209	val_209	2008-04-08
-15	val_15	2008-04-08
-82	val_82	2008-04-08
-403	val_403	2008-04-08
-166	val_166	2008-04-08
-417	val_417	2008-04-08
-430	val_430	2008-04-08
-252	val_252	2008-04-08
-292	val_292	2008-04-08
-219	val_219	2008-04-08
-287	val_287	2008-04-08
-153	val_153	2008-04-08
-193	val_193	2008-04-08
-338	val_338	2008-04-08
-446	val_446	2008-04-08
-459	val_459	2008-04-08
-394	val_394	2008-04-08
-237	val_237	2008-04-08
-482	val_482	2008-04-08
-174	val_174	2008-04-08
-413	val_413	2008-04-08
-494	val_494	2008-04-08
-207	val_207	2008-04-08
-199	val_199	2008-04-08
-466	val_466	2008-04-08
-208	val_208	2008-04-08
-174	val_174	2008-04-08
-399	val_399	2008-04-08
-396	val_396	2008-04-08
-247	val_247	2008-04-08
-417	val_417	2008-04-08
-489	val_489	2008-04-08
-162	val_162	2008-04-08
-377	val_377	2008-04-08
-397	val_397	2008-04-08
-309	val_309	2008-04-08
-365	val_365	2008-04-08
-266	val_266	2008-04-08
-439	val_439	2008-04-08
-342	val_342	2008-04-08
-367	val_367	2008-04-08
-325	val_325	2008-04-08
-167	val_167	2008-04-08
-195	val_195	2008-04-08
-475	val_475	2008-04-08
-17	val_17	2008-04-08
-113	val_113	2008-04-08
-155	val_155	2008-04-08
-203	val_203	2008-04-08
-339	val_339	2008-04-08
 0	val_0	2008-04-08
-455	val_455	2008-04-08
-128	val_128	2008-04-08
-311	val_311	2008-04-08
-316	val_316	2008-04-08
-57	val_57	2008-04-08
-302	val_302	2008-04-08
-205	val_205	2008-04-08
-149	val_149	2008-04-08
-438	val_438	2008-04-08
-345	val_345	2008-04-08
-129	val_129	2008-04-08
-170	val_170	2008-04-08
-20	val_20	2008-04-08
-489	val_489	2008-04-08
-157	val_157	2008-04-08
-378	val_378	2008-04-08
-221	val_221	2008-04-08
-92	val_92	2008-04-08
-111	val_111	2008-04-08
-47	val_47	2008-04-08
-72	val_72	2008-04-08
-4	val_4	2008-04-08
-280	val_280	2008-04-08
-35	val_35	2008-04-08
-427	val_427	2008-04-08
-277	val_277	2008-04-08
-208	val_208	2008-04-08
-356	val_356	2008-04-08
-399	val_399	2008-04-08
-169	val_169	2008-04-08
-382	val_382	2008-04-08
-498	val_498	2008-04-08
-125	val_125	2008-04-08
-386	val_386	2008-04-08
-437	val_437	2008-04-08
-469	val_469	2008-04-08
-192	val_192	2008-04-08
-286	val_286	2008-04-08
-187	val_187	2008-04-08
-176	val_176	2008-04-08
-54	val_54	2008-04-08
-459	val_459	2008-04-08
-51	val_51	2008-04-08
-138	val_138	2008-04-08
-103	val_103	2008-04-08
-239	val_239	2008-04-08
-213	val_213	2008-04-08
-216	val_216	2008-04-08
-430	val_430	2008-04-08
-278	val_278	2008-04-08
-176	val_176	2008-04-08
-289	val_289	2008-04-08
-221	val_221	2008-04-08
-65	val_65	2008-04-08
-318	val_318	2008-04-08
-332	val_332	2008-04-08
-311	val_311	2008-04-08
-275	val_275	2008-04-08
-137	val_137	2008-04-08
-241	val_241	2008-04-08
-83	val_83	2008-04-08
-333	val_333	2008-04-08
-180	val_180	2008-04-08
-284	val_284	2008-04-08
-12	val_12	2008-04-08
-230	val_230	2008-04-08
-181	val_181	2008-04-08
-67	val_67	2008-04-08
-260	val_260	2008-04-08
-404	val_404	2008-04-08
-384	val_384	2008-04-08
-489	val_489	2008-04-08
-353	val_353	2008-04-08
-373	val_373	2008-04-08
-272	val_272	2008-04-08
-138	val_138	2008-04-08
-217	val_217	2008-04-08
-84	val_84	2008-04-08
-348	val_348	2008-04-08
-466	val_466	2008-04-08
-58	val_58	2008-04-08
-8	val_8	2008-04-08
-411	val_411	2008-04-08
-230	val_230	2008-04-08
-208	val_208	2008-04-08
-348	val_348	2008-04-08
-24	val_24	2008-04-08
-463	val_463	2008-04-08
-431	val_431	2008-04-08
-179	val_179	2008-04-08
-172	val_172	2008-04-08
-42	val_42	2008-04-08
-129	val_129	2008-04-08
-158	val_158	2008-04-08
-119	val_119	2008-04-08
-496	val_496	2008-04-08
 0	val_0	2008-04-08
-322	val_322	2008-04-08
-197	val_197	2008-04-08
-468	val_468	2008-04-08
-393	val_393	2008-04-08
-454	val_454	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-199	val_199	2008-04-08
-191	val_191	2008-04-08
-418	val_418	2008-04-08
-96	val_96	2008-04-08
-26	val_26	2008-04-08
-165	val_165	2008-04-08
-327	val_327	2008-04-08
-230	val_230	2008-04-08
-205	val_205	2008-04-08
-120	val_120	2008-04-08
-131	val_131	2008-04-08
-51	val_51	2008-04-08
-404	val_404	2008-04-08
-43	val_43	2008-04-08
-436	val_436	2008-04-08
-156	val_156	2008-04-08
-469	val_469	2008-04-08
-468	val_468	2008-04-08
-308	val_308	2008-04-08
-95	val_95	2008-04-08
-196	val_196	2008-04-08
-288	val_288	2008-04-08
-481	val_481	2008-04-08
-457	val_457	2008-04-08
-98	val_98	2008-04-08
-282	val_282	2008-04-08
-197	val_197	2008-04-08
-187	val_187	2008-04-08
-318	val_318	2008-04-08
-318	val_318	2008-04-08
-409	val_409	2008-04-08
-470	val_470	2008-04-08
-137	val_137	2008-04-08
-369	val_369	2008-04-08
-316	val_316	2008-04-08
-169	val_169	2008-04-08
-413	val_413	2008-04-08
-85	val_85	2008-04-08
-77	val_77	2008-04-08
 0	val_0	2008-04-08
-490	val_490	2008-04-08
-87	val_87	2008-04-08
-364	val_364	2008-04-08
-179	val_179	2008-04-08
-118	val_118	2008-04-08
-134	val_134	2008-04-08
-395	val_395	2008-04-08
-282	val_282	2008-04-08
-138	val_138	2008-04-08
-238	val_238	2008-04-08
-419	val_419	2008-04-08
-15	val_15	2008-04-08
-118	val_118	2008-04-08
-72	val_72	2008-04-08
-90	val_90	2008-04-08
-307	val_307	2008-04-08
-19	val_19	2008-04-08
-435	val_435	2008-04-08
+0	val_0	2008-04-08
+0	val_0	2008-04-08
+0	val_0	2008-04-08
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+0	val_0	2008-04-09
+10	val_10	2008-04-09
+10	val_10	2008-04-09
 10	val_10	2008-04-08
-277	val_277	2008-04-08
-273	val_273	2008-04-08
-306	val_306	2008-04-08
-224	val_224	2008-04-08
-309	val_309	2008-04-08
-389	val_389	2008-04-08
-327	val_327	2008-04-08
-242	val_242	2008-04-08
-369	val_369	2008-04-08
-392	val_392	2008-04-08
-272	val_272	2008-04-08
-331	val_331	2008-04-08
-401	val_401	2008-04-08
-242	val_242	2008-04-08
-452	val_452	2008-04-08
-177	val_177	2008-04-08
-226	val_226	2008-04-08
-5	val_5	2008-04-08
-497	val_497	2008-04-08
-402	val_402	2008-04-08
-396	val_396	2008-04-08
-317	val_317	2008-04-08
-395	val_395	2008-04-08
-58	val_58	2008-04-08
-35	val_35	2008-04-08
-336	val_336	2008-04-08
-95	val_95	2008-04-08
-11	val_11	2008-04-08
-168	val_168	2008-04-08
-34	val_34	2008-04-08
-229	val_229	2008-04-08
-233	val_233	2008-04-08
-143	val_143	2008-04-08
-472	val_472	2008-04-08
-322	val_322	2008-04-08
-498	val_498	2008-04-08
-160	val_160	2008-04-08
-195	val_195	2008-04-08
-42	val_42	2008-04-08
-321	val_321	2008-04-08
-430	val_430	2008-04-08
-119	val_119	2008-04-08
-489	val_489	2008-04-08
-458	val_458	2008-04-08
-78	val_78	2008-04-08
-76	val_76	2008-04-08
-41	val_41	2008-04-08
-223	val_223	2008-04-08
-492	val_492	2008-04-08
-149	val_149	2008-04-08
-449	val_449	2008-04-08
-218	val_218	2008-04-08
-228	val_228	2008-04-08
-138	val_138	2008-04-08
-453	val_453	2008-04-08
-30	val_30	2008-04-08
-209	val_209	2008-04-08
-64	val_64	2008-04-08
-468	val_468	2008-04-08
-76	val_76	2008-04-08
-74	val_74	2008-04-08
-342	val_342	2008-04-08
-69	val_69	2008-04-08
-230	val_230	2008-04-08
-33	val_33	2008-04-08
-368	val_368	2008-04-08
+10	val_10	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-08
+100	val_100	2008-04-09
+100	val_100	2008-04-09
+100	val_100	2008-04-09
+100	val_100	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-09
+103	val_103	2008-04-08
+103	val_103	2008-04-08
+103	val_103	2008-04-08
 103	val_103	2008-04-08
-296	val_296	2008-04-08
-113	val_113	2008-04-08
-216	val_216	2008-04-08
-367	val_367	2008-04-08
-344	val_344	2008-04-08
-167	val_167	2008-04-08
-274	val_274	2008-04-08
-219	val_219	2008-04-08
-239	val_239	2008-04-08
-485	val_485	2008-04-08
-116	val_116	2008-04-08
-223	val_223	2008-04-08
-256	val_256	2008-04-08
-263	val_263	2008-04-08
-70	val_70	2008-04-08
-487	val_487	2008-04-08
-480	val_480	2008-04-08
-401	val_401	2008-04-08
-288	val_288	2008-04-08
-191	val_191	2008-04-08
-5	val_5	2008-04-08
-244	val_244	2008-04-08
-438	val_438	2008-04-08
-128	val_128	2008-04-08
-467	val_467	2008-04-08
-432	val_432	2008-04-08
-202	val_202	2008-04-08
-316	val_316	2008-04-08
-229	val_229	2008-04-08
-469	val_469	2008-04-08
-463	val_463	2008-04-08
-280	val_280	2008-04-08
-2	val_2	2008-04-08
-35	val_35	2008-04-08
-283	val_283	2008-04-08
-331	val_331	2008-04-08
-235	val_235	2008-04-08
-80	val_80	2008-04-08
-44	val_44	2008-04-08
-193	val_193	2008-04-08
-321	val_321	2008-04-08
-335	val_335	2008-04-08
 104	val_104	2008-04-08
-466	val_466	2008-04-08
-366	val_366	2008-04-08
-175	val_175	2008-04-08
-403	val_403	2008-04-08
-483	val_483	2008-04-08
-53	val_53	2008-04-08
+104	val_104	2008-04-08
+104	val_104	2008-04-08
+104	val_104	2008-04-08
+104	val_104	2008-04-09
+104	val_104	2008-04-09
+104	val_104	2008-04-09
+104	val_104	2008-04-09
+105	val_105	2008-04-09
+105	val_105	2008-04-09
 105	val_105	2008-04-08
-257	val_257	2008-04-08
-406	val_406	2008-04-08
-409	val_409	2008-04-08
-190	val_190	2008-04-08
-406	val_406	2008-04-08
-401	val_401	2008-04-08
+105	val_105	2008-04-08
+11	val_11	2008-04-08
+11	val_11	2008-04-08
+11	val_11	2008-04-09
+11	val_11	2008-04-09
+111	val_111	2008-04-09
+111	val_111	2008-04-09
+111	val_111	2008-04-08
+111	val_111	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-08
+113	val_113	2008-04-09
+113	val_113	2008-04-09
+113	val_113	2008-04-09
+113	val_113	2008-04-09
+114	val_114	2008-04-09
+114	val_114	2008-04-09
 114	val_114	2008-04-08
-258	val_258	2008-04-08
-90	val_90	2008-04-08
-203	val_203	2008-04-08
-262	val_262	2008-04-08
-348	val_348	2008-04-08
-424	val_424	2008-04-08
-12	val_12	2008-04-08
-396	val_396	2008-04-08
-201	val_201	2008-04-08
-217	val_217	2008-04-08
-164	val_164	2008-04-08
-431	val_431	2008-04-08
-454	val_454	2008-04-08
-478	val_478	2008-04-08
-298	val_298	2008-04-08
-125	val_125	2008-04-08
-431	val_431	2008-04-08
-164	val_164	2008-04-08
-424	val_424	2008-04-08
-187	val_187	2008-04-08
-382	val_382	2008-04-08
-5	val_5	2008-04-08
-70	val_70	2008-04-08
-397	val_397	2008-04-08
-480	val_480	2008-04-08
-291	val_291	2008-04-08
-24	val_24	2008-04-08
-351	val_351	2008-04-08
-255	val_255	2008-04-08
-104	val_104	2008-04-08
-70	val_70	2008-04-08
-163	val_163	2008-04-08
-438	val_438	2008-04-08
+114	val_114	2008-04-08
+116	val_116	2008-04-08
+116	val_116	2008-04-08
+116	val_116	2008-04-09
+116	val_116	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-09
+118	val_118	2008-04-08
+118	val_118	2008-04-08
+118	val_118	2008-04-08
+118	val_118	2008-04-08
 119	val_119	2008-04-08
-414	val_414	2008-04-08
-200	val_200	2008-04-08
-491	val_491	2008-04-08
-237	val_237	2008-04-08
-439	val_439	2008-04-08
-360	val_360	2008-04-08
-248	val_248	2008-04-08
-479	val_479	2008-04-08
-305	val_305	2008-04-08
-417	val_417	2008-04-08
-199	val_199	2008-04-08
-444	val_444	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-08
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+119	val_119	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-09
+12	val_12	2008-04-08
+12	val_12	2008-04-08
+12	val_12	2008-04-08
+12	val_12	2008-04-08
 120	val_120	2008-04-08
-429	val_429	2008-04-08
-169	val_169	2008-04-08
-443	val_443	2008-04-08
-323	val_323	2008-04-08
-325	val_325	2008-04-08
-277	val_277	2008-04-08
-230	val_230	2008-04-08
-478	val_478	2008-04-08
-178	val_178	2008-04-08
-468	val_468	2008-04-08
-310	val_310	2008-04-08
-317	val_317	2008-04-08
-333	val_333	2008-04-08
-493	val_493	2008-04-08
-460	val_460	2008-04-08
-207	val_207	2008-04-08
-249	val_249	2008-04-08
-265	val_265	2008-04-08
-480	val_480	2008-04-08
-83	val_83	2008-04-08
-136	val_136	2008-04-08
-353	val_353	2008-04-08
-172	val_172	2008-04-08
-214	val_214	2008-04-08
-462	val_462	2008-04-08
-233	val_233	2008-04-08
-406	val_406	2008-04-08
+120	val_120	2008-04-08
+120	val_120	2008-04-08
+120	val_120	2008-04-08
+120	val_120	2008-04-09
+120	val_120	2008-04-09
+120	val_120	2008-04-09
+120	val_120	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-09
+125	val_125	2008-04-08
+125	val_125	2008-04-08
+125	val_125	2008-04-08
+125	val_125	2008-04-08
+126	val_126	2008-04-08
+126	val_126	2008-04-08
+126	val_126	2008-04-09
+126	val_126	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-09
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+128	val_128	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-08
+129	val_129	2008-04-09
+129	val_129	2008-04-09
+129	val_129	2008-04-09
+129	val_129	2008-04-09
+131	val_131	2008-04-09
+131	val_131	2008-04-09
+131	val_131	2008-04-08
+131	val_131	2008-04-08
 133	val_133	2008-04-08
-175	val_175	2008-04-08
-189	val_189	2008-04-08
-454	val_454	2008-04-08
-375	val_375	2008-04-08
-401	val_401	2008-04-08
-421	val_421	2008-04-08
-407	val_407	2008-04-08
-384	val_384	2008-04-08
-256	val_256	2008-04-08
-26	val_26	2008-04-08
+133	val_133	2008-04-08
+133	val_133	2008-04-09
+133	val_133	2008-04-09
+134	val_134	2008-04-09
+134	val_134	2008-04-09
+134	val_134	2008-04-09
+134	val_134	2008-04-09
 134	val_134	2008-04-08
-67	val_67	2008-04-08
-384	val_384	2008-04-08
-379	val_379	2008-04-08
-18	val_18	2008-04-08
-462	val_462	2008-04-08
-492	val_492	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-9	val_9	2008-04-08
-341	val_341	2008-04-08
-498	val_498	2008-04-08
+134	val_134	2008-04-08
+134	val_134	2008-04-08
+134	val_134	2008-04-08
+136	val_136	2008-04-08
+136	val_136	2008-04-08
+136	val_136	2008-04-09
+136	val_136	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-09
+137	val_137	2008-04-08
+137	val_137	2008-04-08
+137	val_137	2008-04-08
+137	val_137	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-08
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+138	val_138	2008-04-09
+143	val_143	2008-04-09
+143	val_143	2008-04-09
+143	val_143	2008-04-08
+143	val_143	2008-04-08
+145	val_145	2008-04-08
+145	val_145	2008-04-08
+145	val_145	2008-04-09
+145	val_145	2008-04-09
+146	val_146	2008-04-09
+146	val_146	2008-04-09
+146	val_146	2008-04-09
+146	val_146	2008-04-09
 146	val_146	2008-04-08
-458	val_458	2008-04-08
-362	val_362	2008-04-08
-186	val_186	2008-04-08
-285	val_285	2008-04-08
-348	val_348	2008-04-08
-167	val_167	2008-04-08
-18	val_18	2008-04-08
-273	val_273	2008-04-08
-183	val_183	2008-04-08
-281	val_281	2008-04-08
-344	val_344	2008-04-08
-97	val_97	2008-04-08
-469	val_469	2008-04-08
-315	val_315	2008-04-08
-84	val_84	2008-04-08
-28	val_28	2008-04-08
-37	val_37	2008-04-08
-448	val_448	2008-04-08
-152	val_152	2008-04-08
-348	val_348	2008-04-08
-307	val_307	2008-04-08
-194	val_194	2008-04-08
-414	val_414	2008-04-08
-477	val_477	2008-04-08
-222	val_222	2008-04-08
-126	val_126	2008-04-08
-90	val_90	2008-04-08
-169	val_169	2008-04-08
-403	val_403	2008-04-08
-400	val_400	2008-04-08
-200	val_200	2008-04-08
-97	val_97	2008-04-08
-238	val_238	2008-04-08
-86	val_86	2008-04-08
-311	val_311	2008-04-08
-27	val_27	2008-04-08
-165	val_165	2008-04-08
-409	val_409	2008-04-08
-255	val_255	2008-04-08
-278	val_278	2008-04-08
-98	val_98	2008-04-08
-484	val_484	2008-04-08
-265	val_265	2008-04-08
-193	val_193	2008-04-08
-401	val_401	2008-04-08
-150	val_150	2008-04-08
-273	val_273	2008-04-08
-224	val_224	2008-04-08
-369	val_369	2008-04-08
-66	val_66	2008-04-08
-128	val_128	2008-04-08
-213	val_213	2008-04-08
 146	val_146	2008-04-08
-406	val_406	2008-04-08
-429	val_429	2008-04-08
-374	val_374	2008-04-08
-152	val_152	2008-04-08
-469	val_469	2008-04-08
-145	val_145	2008-04-08
-495	val_495	2008-04-08
-37	val_37	2008-04-08
-327	val_327	2008-04-08
-281	val_281	2008-04-08
-277	val_277	2008-04-08
-209	val_209	2008-04-08
+146	val_146	2008-04-08
+146	val_146	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-08
+149	val_149	2008-04-09
+149	val_149	2008-04-09
+149	val_149	2008-04-09
+149	val_149	2008-04-09
+15	val_15	2008-04-09
+15	val_15	2008-04-09
+15	val_15	2008-04-09
+15	val_15	2008-04-09
 15	val_15	2008-04-08
-82	val_82	2008-04-08
-403	val_403	2008-04-08
-166	val_166	2008-04-08
-417	val_417	2008-04-08
-430	val_430	2008-04-08
-252	val_252	2008-04-08
-292	val_292	2008-04-08
-219	val_219	2008-04-08
-287	val_287	2008-04-08
+15	val_15	2008-04-08
+15	val_15	2008-04-08
+15	val_15	2008-04-08
+150	val_150	2008-04-08
+150	val_150	2008-04-08
+150	val_150	2008-04-09
+150	val_150	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-09
+152	val_152	2008-04-08
+152	val_152	2008-04-08
+152	val_152	2008-04-08
+152	val_152	2008-04-08
 153	val_153	2008-04-08
-193	val_193	2008-04-08
-338	val_338	2008-04-08
-446	val_446	2008-04-08
-459	val_459	2008-04-08
-394	val_394	2008-04-08
-237	val_237	2008-04-08
-482	val_482	2008-04-08
-174	val_174	2008-04-08
-413	val_413	2008-04-08
-494	val_494	2008-04-08
-207	val_207	2008-04-08
-199	val_199	2008-04-08
-466	val_466	2008-04-08
-208	val_208	2008-04-08
-174	val_174	2008-04-08
-399	val_399	2008-04-08
-396	val_396	2008-04-08
-247	val_247	2008-04-08
-417	val_417	2008-04-08
-489	val_489	2008-04-08
+153	val_153	2008-04-08
+153	val_153	2008-04-09
+153	val_153	2008-04-09
+155	val_155	2008-04-09
+155	val_155	2008-04-09
+155	val_155	2008-04-08
+155	val_155	2008-04-08
+156	val_156	2008-04-08
+156	val_156	2008-04-08
+156	val_156	2008-04-09
+156	val_156	2008-04-09
+157	val_157	2008-04-09
+157	val_157	2008-04-09
+157	val_157	2008-04-08
+157	val_157	2008-04-08
+158	val_158	2008-04-08
+158	val_158	2008-04-08
+158	val_158	2008-04-09
+158	val_158	2008-04-09
+160	val_160	2008-04-09
+160	val_160	2008-04-09
+160	val_160	2008-04-08
+160	val_160	2008-04-08
 162	val_162	2008-04-08
-377	val_377	2008-04-08
-397	val_397	2008-04-08
-309	val_309	2008-04-08
-365	val_365	2008-04-08
-266	val_266	2008-04-08
-439	val_439	2008-04-08
-342	val_342	2008-04-08
-367	val_367	2008-04-08
-325	val_325	2008-04-08
+162	val_162	2008-04-08
+162	val_162	2008-04-09
+162	val_162	2008-04-09
+163	val_163	2008-04-09
+163	val_163	2008-04-09
+163	val_163	2008-04-08
+163	val_163	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-08
+164	val_164	2008-04-09
+164	val_164	2008-04-09
+164	val_164	2008-04-09
+164	val_164	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-09
+165	val_165	2008-04-08
+165	val_165	2008-04-08
+165	val_165	2008-04-08
+165	val_165	2008-04-08
+166	val_166	2008-04-08
+166	val_166	2008-04-08
+166	val_166	2008-04-09
+166	val_166	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
+167	val_167	2008-04-09
 167	val_167	2008-04-08
-195	val_195	2008-04-08
-475	val_475	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+167	val_167	2008-04-08
+168	val_168	2008-04-08
+168	val_168	2008-04-08
+168	val_168	2008-04-09
+168	val_168	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-09
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
+169	val_169	2008-04-08
 17	val_17	2008-04-08
-113	val_113	2008-04-08
-155	val_155	2008-04-08
-203	val_203	2008-04-08
-339	val_339	2008-04-08
-0	val_0	2008-04-08
-455	val_455	2008-04-08
-128	val_128	2008-04-08
-311	val_311	2008-04-08
-316	val_316	2008-04-08
-57	val_57	2008-04-08
-302	val_302	2008-04-08
-205	val_205	2008-04-08
-149	val_149	2008-04-08
-438	val_438	2008-04-08
-345	val_345	2008-04-08
-129	val_129	2008-04-08
+17	val_17	2008-04-08
+17	val_17	2008-04-09
+17	val_17	2008-04-09
+170	val_170	2008-04-09
+170	val_170	2008-04-09
 170	val_170	2008-04-08
-20	val_20	2008-04-08
-489	val_489	2008-04-08
-157	val_157	2008-04-08
-378	val_378	2008-04-08
-221	val_221	2008-04-08
-92	val_92	2008-04-08
-111	val_111	2008-04-08
-47	val_47	2008-04-08
-72	val_72	2008-04-08
-4	val_4	2008-04-08
-280	val_280	2008-04-08
-35	val_35	2008-04-08
-427	val_427	2008-04-08
-277	val_277	2008-04-08
-208	val_208	2008-04-08
-356	val_356	2008-04-08
-399	val_399	2008-04-08
-169	val_169	2008-04-08
-382	val_382	2008-04-08
-498	val_498	2008-04-08
-125	val_125	2008-04-08
-386	val_386	2008-04-08
-437	val_437	2008-04-08
-469	val_469	2008-04-08
-192	val_192	2008-04-08
-286	val_286	2008-04-08
-187	val_187	2008-04-08
+170	val_170	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-08
+172	val_172	2008-04-09
+172	val_172	2008-04-09
+172	val_172	2008-04-09
+172	val_172	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-09
+174	val_174	2008-04-08
+174	val_174	2008-04-08
+174	val_174	2008-04-08
+174	val_174	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-08
+175	val_175	2008-04-09
+175	val_175	2008-04-09
+175	val_175	2008-04-09
+175	val_175	2008-04-09
+176	val_176	2008-04-09
+176	val_176	2008-04-09
+176	val_176	2008-04-09
+176	val_176	2008-04-09
 176	val_176	2008-04-08
-54	val_54	2008-04-08
-459	val_459	2008-04-08
-51	val_51	2008-04-08
-138	val_138	2008-04-08
-103	val_103	2008-04-08
-239	val_239	2008-04-08
-213	val_213	2008-04-08
-216	val_216	2008-04-08
-430	val_430	2008-04-08
-278	val_278	2008-04-08
 176	val_176	2008-04-08
-289	val_289	2008-04-08
-221	val_221	2008-04-08
-65	val_65	2008-04-08
-318	val_318	2008-04-08
-332	val_332	2008-04-08
-311	val_311	2008-04-08
-275	val_275	2008-04-08
-137	val_137	2008-04-08
-241	val_241	2008-04-08
-83	val_83	2008-04-08
-333	val_333	2008-04-08
+176	val_176	2008-04-08
+176	val_176	2008-04-08
+177	val_177	2008-04-08
+177	val_177	2008-04-08
+177	val_177	2008-04-09
+177	val_177	2008-04-09
+178	val_178	2008-04-09
+178	val_178	2008-04-09
+178	val_178	2008-04-08
+178	val_178	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-08
+179	val_179	2008-04-09
+179	val_179	2008-04-09
+179	val_179	2008-04-09
+179	val_179	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-09
+18	val_18	2008-04-08
+18	val_18	2008-04-08
+18	val_18	2008-04-08
+18	val_18	2008-04-08
 180	val_180	2008-04-08
-284	val_284	2008-04-08
-12	val_12	2008-04-08
-230	val_230	2008-04-08
+180	val_180	2008-04-08
+180	val_180	2008-04-09
+180	val_180	2008-04-09
+181	val_181	2008-04-09
+181	val_181	2008-04-09
 181	val_181	2008-04-08
-67	val_67	2008-04-08
-260	val_260	2008-04-08
-404	val_404	2008-04-08
-384	val_384	2008-04-08
-489	val_489	2008-04-08
-353	val_353	2008-04-08
-373	val_373	2008-04-08
-272	val_272	2008-04-08
-138	val_138	2008-04-08
-217	val_217	2008-04-08
-84	val_84	2008-04-08
-348	val_348	2008-04-08
-466	val_466	2008-04-08
-58	val_58	2008-04-08
-8	val_8	2008-04-08
-411	val_411	2008-04-08
-230	val_230	2008-04-08
-208	val_208	2008-04-08
-348	val_348	2008-04-08
-24	val_24	2008-04-08
-463	val_463	2008-04-08
-431	val_431	2008-04-08
-179	val_179	2008-04-08
-172	val_172	2008-04-08
-42	val_42	2008-04-08
-129	val_129	2008-04-08
-158	val_158	2008-04-08
-119	val_119	2008-04-08
-496	val_496	2008-04-08
-0	val_0	2008-04-08
-322	val_322	2008-04-08
-197	val_197	2008-04-08
-468	val_468	2008-04-08
-393	val_393	2008-04-08
-454	val_454	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-199	val_199	2008-04-08
-191	val_191	2008-04-08
-418	val_418	2008-04-08
-96	val_96	2008-04-08
-26	val_26	2008-04-08
-165	val_165	2008-04-08
-327	val_327	2008-04-08
-230	val_230	2008-04-08
-205	val_205	2008-04-08
-120	val_120	2008-04-08
-131	val_131	2008-04-08
-51	val_51	2008-04-08
-404	val_404	2008-04-08
-43	val_43	2008-04-08
-436	val_436	2008-04-08
-156	val_156	2008-04-08
-469	val_469	2008-04-08
-468	val_468	2008-04-08
-308	val_308	2008-04-08
-95	val_95	2008-04-08
-196	val_196	2008-04-08
-288	val_288	2008-04-08
-481	val_481	2008-04-08
-457	val_457	2008-04-08
-98	val_98	2008-04-08
-282	val_282	2008-04-08
-197	val_197	2008-04-08
+181	val_181	2008-04-08
+183	val_183	2008-04-08
+183	val_183	2008-04-08
+183	val_183	2008-04-09
+183	val_183	2008-04-09
+186	val_186	2008-04-09
+186	val_186	2008-04-09
+186	val_186	2008-04-08
+186	val_186	2008-04-08
 187	val_187	2008-04-08
-318	val_318	2008-04-08
-318	val_318	2008-04-08
-409	val_409	2008-04-08
-470	val_470	2008-04-08
-137	val_137	2008-04-08
-369	val_369	2008-04-08
-316	val_316	2008-04-08
-169	val_169	2008-04-08
-413	val_413	2008-04-08
-85	val_85	2008-04-08
-77	val_77	2008-04-08
-0	val_0	2008-04-08
-490	val_490	2008-04-08
-87	val_87	2008-04-08
-364	val_364	2008-04-08
-179	val_179	2008-04-08
-118	val_118	2008-04-08
-134	val_134	2008-04-08
-395	val_395	2008-04-08
-282	val_282	2008-04-08
-138	val_138	2008-04-08
-238	val_238	2008-04-08
-419	val_419	2008-04-08
-15	val_15	2008-04-08
-118	val_118	2008-04-08
-72	val_72	2008-04-08
-90	val_90	2008-04-08
-307	val_307	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-08
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+187	val_187	2008-04-09
+189	val_189	2008-04-09
+189	val_189	2008-04-09
+189	val_189	2008-04-08
+189	val_189	2008-04-08
 19	val_19	2008-04-08
-435	val_435	2008-04-08
-10	val_10	2008-04-08
-277	val_277	2008-04-08
-273	val_273	2008-04-08
-306	val_306	2008-04-08
-224	val_224	2008-04-08
-309	val_309	2008-04-08
-389	val_389	2008-04-08
-327	val_327	2008-04-08
-242	val_242	2008-04-08
-369	val_369	2008-04-08
-392	val_392	2008-04-08
-272	val_272	2008-04-08
-331	val_331	2008-04-08
-401	val_401	2008-04-08
-242	val_242	2008-04-08
-452	val_452	2008-04-08
-177	val_177	2008-04-08
-226	val_226	2008-04-08
-5	val_5	2008-04-08
-497	val_497	2008-04-08
-402	val_402	2008-04-08
-396	val_396	2008-04-08
-317	val_317	2008-04-08
-395	val_395	2008-04-08
-58	val_58	2008-04-08
-35	val_35	2008-04-08
-336	val_336	2008-04-08
-95	val_95	2008-04-08
-11	val_11	2008-04-08
-168	val_168	2008-04-08
-34	val_34	2008-04-08
-229	val_229	2008-04-08
-233	val_233	2008-04-08
-143	val_143	2008-04-08
-472	val_472	2008-04-08
-322	val_322	2008-04-08
-498	val_498	2008-04-08
-160	val_160	2008-04-08
+19	val_19	2008-04-08
+19	val_19	2008-04-09
+19	val_19	2008-04-09
+190	val_190	2008-04-09
+190	val_190	2008-04-09
+190	val_190	2008-04-08
+190	val_190	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-08
+191	val_191	2008-04-09
+191	val_191	2008-04-09
+191	val_191	2008-04-09
+191	val_191	2008-04-09
+192	val_192	2008-04-09
+192	val_192	2008-04-09
+192	val_192	2008-04-08
+192	val_192	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-08
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+193	val_193	2008-04-09
+194	val_194	2008-04-09
+194	val_194	2008-04-09
+194	val_194	2008-04-08
+194	val_194	2008-04-08
 195	val_195	2008-04-08
-42	val_42	2008-04-08
-321	val_321	2008-04-08
-430	val_430	2008-04-08
-119	val_119	2008-04-08
-489	val_489	2008-04-08
-458	val_458	2008-04-08
-78	val_78	2008-04-08
-76	val_76	2008-04-08
-41	val_41	2008-04-08
-223	val_223	2008-04-08
-492	val_492	2008-04-08
-149	val_149	2008-04-08
-449	val_449	2008-04-08
-218	val_218	2008-04-08
-228	val_228	2008-04-08
-138	val_138	2008-04-08
-453	val_453	2008-04-08
-30	val_30	2008-04-08
+195	val_195	2008-04-08
+195	val_195	2008-04-08
+195	val_195	2008-04-08
+195	val_195	2008-04-09
+195	val_195	2008-04-09
+195	val_195	2008-04-09
+195	val_195	2008-04-09
+196	val_196	2008-04-09
+196	val_196	2008-04-09
+196	val_196	2008-04-08
+196	val_196	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-08
+197	val_197	2008-04-09
+197	val_197	2008-04-09
+197	val_197	2008-04-09
+197	val_197	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-09
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+199	val_199	2008-04-08
+2	val_2	2008-04-08
+2	val_2	2008-04-08
+2	val_2	2008-04-09
+2	val_2	2008-04-09
+20	val_20	2008-04-09
+20	val_20	2008-04-09
+20	val_20	2008-04-08
+20	val_20	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-08
+200	val_200	2008-04-09
+200	val_200	2008-04-09
+200	val_200	2008-04-09
+200	val_200	2008-04-09
+201	val_201	2008-04-09
+201	val_201	2008-04-09
+201	val_201	2008-04-08
+201	val_201	2008-04-08
+202	val_202	2008-04-08
+202	val_202	2008-04-08
+202	val_202	2008-04-09
+202	val_202	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-09
+203	val_203	2008-04-08
+203	val_203	2008-04-08
+203	val_203	2008-04-08
+203	val_203	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-08
+205	val_205	2008-04-09
+205	val_205	2008-04-09
+205	val_205	2008-04-09
+205	val_205	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-09
+207	val_207	2008-04-08
+207	val_207	2008-04-08
+207	val_207	2008-04-08
+207	val_207	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-08
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+208	val_208	2008-04-09
+209	val_209	2008-04-09
+209	val_209	2008-04-09
+209	val_209	2008-04-09
+209	val_209	2008-04-09
 209	val_209	2008-04-08
-64	val_64	2008-04-08
-468	val_468	2008-04-08
-76	val_76	2008-04-08
-74	val_74	2008-04-08
-342	val_342	2008-04-08
-69	val_69	2008-04-08
-230	val_230	2008-04-08
-33	val_33	2008-04-08
-368	val_368	2008-04-08
-103	val_103	2008-04-08
-296	val_296	2008-04-08
-113	val_113	2008-04-08
+209	val_209	2008-04-08
+209	val_209	2008-04-08
+209	val_209	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-08
+213	val_213	2008-04-09
+213	val_213	2008-04-09
+213	val_213	2008-04-09
+213	val_213	2008-04-09
+214	val_214	2008-04-09
+214	val_214	2008-04-09
+214	val_214	2008-04-08
+214	val_214	2008-04-08
 216	val_216	2008-04-08
-367	val_367	2008-04-08
-344	val_344	2008-04-08
-167	val_167	2008-04-08
-274	val_274	2008-04-08
+216	val_216	2008-04-08
+216	val_216	2008-04-08
+216	val_216	2008-04-08
+216	val_216	2008-04-09
+216	val_216	2008-04-09
+216	val_216	2008-04-09
+216	val_216	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-09
+217	val_217	2008-04-08
+217	val_217	2008-04-08
+217	val_217	2008-04-08
+217	val_217	2008-04-08
+218	val_218	2008-04-08
+218	val_218	2008-04-08
+218	val_218	2008-04-09
+218	val_218	2008-04-09
+219	val_219	2008-04-09
+219	val_219	2008-04-09
+219	val_219	2008-04-09
+219	val_219	2008-04-09
 219	val_219	2008-04-08
-239	val_239	2008-04-08
-485	val_485	2008-04-08
-116	val_116	2008-04-08
+219	val_219	2008-04-08
+219	val_219	2008-04-08
+219	val_219	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-08
+221	val_221	2008-04-09
+221	val_221	2008-04-09
+221	val_221	2008-04-09
+221	val_221	2008-04-09
+222	val_222	2008-04-09
+222	val_222	2008-04-09
+222	val_222	2008-04-08
+222	val_222	2008-04-08
 223	val_223	2008-04-08
-256	val_256	2008-04-08
-263	val_263	2008-04-08
-70	val_70	2008-04-08
-487	val_487	2008-04-08
-480	val_480	2008-04-08
-401	val_401	2008-04-08
-288	val_288	2008-04-08
-191	val_191	2008-04-08
-5	val_5	2008-04-08
-244	val_244	2008-04-08
-438	val_438	2008-04-08
-128	val_128	2008-04-08
-467	val_467	2008-04-08
-432	val_432	2008-04-08
-202	val_202	2008-04-08
-316	val_316	2008-04-08
+223	val_223	2008-04-08
+223	val_223	2008-04-08
+223	val_223	2008-04-08
+223	val_223	2008-04-09
+223	val_223	2008-04-09
+223	val_223	2008-04-09
+223	val_223	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-09
+224	val_224	2008-04-08
+224	val_224	2008-04-08
+224	val_224	2008-04-08
+224	val_224	2008-04-08
+226	val_226	2008-04-08
+226	val_226	2008-04-08
+226	val_226	2008-04-09
+226	val_226	2008-04-09
+228	val_228	2008-04-09
+228	val_228	2008-04-09
+228	val_228	2008-04-08
+228	val_228	2008-04-08
 229	val_229	2008-04-08
-469	val_469	2008-04-08
-463	val_463	2008-04-08
-280	val_280	2008-04-08
-2	val_2	2008-04-08
-35	val_35	2008-04-08
-283	val_283	2008-04-08
-331	val_331	2008-04-08
+229	val_229	2008-04-08
+229	val_229	2008-04-08
+229	val_229	2008-04-08
+229	val_229	2008-04-09
+229	val_229	2008-04-09
+229	val_229	2008-04-09
+229	val_229	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-09
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+230	val_230	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-08
+233	val_233	2008-04-09
+233	val_233	2008-04-09
+233	val_233	2008-04-09
+233	val_233	2008-04-09
+235	val_235	2008-04-09
+235	val_235	2008-04-09
+235	val_235	2008-04-08
 235	val_235	2008-04-08
-80	val_80	2008-04-08
-44	val_44	2008-04-08
-193	val_193	2008-04-08
-321	val_321	2008-04-08
-335	val_335	2008-04-08
-104	val_104	2008-04-08
-466	val_466	2008-04-08
-366	val_366	2008-04-08
-175	val_175	2008-04-08
-403	val_403	2008-04-08
-483	val_483	2008-04-08
-53	val_53	2008-04-08
-105	val_105	2008-04-08
-257	val_257	2008-04-08
-406	val_406	2008-04-08
-409	val_409	2008-04-08
-190	val_190	2008-04-08
-406	val_406	2008-04-08
-401	val_401	2008-04-08
-114	val_114	2008-04-08
-258	val_258	2008-04-08
-90	val_90	2008-04-08
-203	val_203	2008-04-08
-262	val_262	2008-04-08
-348	val_348	2008-04-08
-424	val_424	2008-04-08
-12	val_12	2008-04-08
-396	val_396	2008-04-08
-201	val_201	2008-04-08
-217	val_217	2008-04-08
-164	val_164	2008-04-08
-431	val_431	2008-04-08
-454	val_454	2008-04-08
-478	val_478	2008-04-08
-298	val_298	2008-04-08
-125	val_125	2008-04-08
-431	val_431	2008-04-08
-164	val_164	2008-04-08
-424	val_424	2008-04-08
-187	val_187	2008-04-08
-382	val_382	2008-04-08
-5	val_5	2008-04-08
-70	val_70	2008-04-08
-397	val_397	2008-04-08
-480	val_480	2008-04-08
-291	val_291	2008-04-08
-24	val_24	2008-04-08
-351	val_351	2008-04-08
-255	val_255	2008-04-08
-104	val_104	2008-04-08
-70	val_70	2008-04-08
-163	val_163	2008-04-08
-438	val_438	2008-04-08
-119	val_119	2008-04-08
-414	val_414	2008-04-08
-200	val_200	2008-04-08
-491	val_491	2008-04-08
 237	val_237	2008-04-08
-439	val_439	2008-04-08
-360	val_360	2008-04-08
+237	val_237	2008-04-08
+237	val_237	2008-04-08
+237	val_237	2008-04-08
+237	val_237	2008-04-09
+237	val_237	2008-04-09
+237	val_237	2008-04-09
+237	val_237	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-09
+238	val_238	2008-04-08
+238	val_238	2008-04-08
+238	val_238	2008-04-08
+238	val_238	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-08
+239	val_239	2008-04-09
+239	val_239	2008-04-09
+239	val_239	2008-04-09
+239	val_239	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-09
+24	val_24	2008-04-08
+24	val_24	2008-04-08
+24	val_24	2008-04-08
+24	val_24	2008-04-08
+241	val_241	2008-04-08
+241	val_241	2008-04-08
+241	val_241	2008-04-09
+241	val_241	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-09
+242	val_242	2008-04-08
+242	val_242	2008-04-08
+242	val_242	2008-04-08
+242	val_242	2008-04-08
+244	val_244	2008-04-08
+244	val_244	2008-04-08
+244	val_244	2008-04-09
+244	val_244	2008-04-09
+247	val_247	2008-04-09
+247	val_247	2008-04-09
+247	val_247	2008-04-08
+247	val_247	2008-04-08
 248	val_248	2008-04-08
-479	val_479	2008-04-08
-305	val_305	2008-04-08
-417	val_417	2008-04-08
-199	val_199	2008-04-08
-444	val_444	2008-04-08
-120	val_120	2008-04-08
-429	val_429	2008-04-08
-169	val_169	2008-04-08
-443	val_443	2008-04-08
-323	val_323	2008-04-08
-325	val_325	2008-04-08
-277	val_277	2008-04-08
-230	val_230	2008-04-08
-478	val_478	2008-04-08
-178	val_178	2008-04-08
-468	val_468	2008-04-08
-310	val_310	2008-04-08
-317	val_317	2008-04-08
-333	val_333	2008-04-08
-493	val_493	2008-04-08
-460	val_460	2008-04-08
-207	val_207	2008-04-08
+248	val_248	2008-04-08
+248	val_248	2008-04-09
+248	val_248	2008-04-09
+249	val_249	2008-04-09
+249	val_249	2008-04-09
 249	val_249	2008-04-08
-265	val_265	2008-04-08
-480	val_480	2008-04-08
-83	val_83	2008-04-08
-136	val_136	2008-04-08
-353	val_353	2008-04-08
-172	val_172	2008-04-08
-214	val_214	2008-04-08
-462	val_462	2008-04-08
-233	val_233	2008-04-08
-406	val_406	2008-04-08
-133	val_133	2008-04-08
-175	val_175	2008-04-08
-189	val_189	2008-04-08
-454	val_454	2008-04-08
-375	val_375	2008-04-08
-401	val_401	2008-04-08
-421	val_421	2008-04-08
-407	val_407	2008-04-08
-384	val_384	2008-04-08
+249	val_249	2008-04-08
+252	val_252	2008-04-08
+252	val_252	2008-04-08
+252	val_252	2008-04-09
+252	val_252	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-09
+255	val_255	2008-04-08
+255	val_255	2008-04-08
+255	val_255	2008-04-08
+255	val_255	2008-04-08
 256	val_256	2008-04-08
+256	val_256	2008-04-08
+256	val_256	2008-04-08
+256	val_256	2008-04-08
+256	val_256	2008-04-09
+256	val_256	2008-04-09
+256	val_256	2008-04-09
+256	val_256	2008-04-09
+257	val_257	2008-04-09
+257	val_257	2008-04-09
+257	val_257	2008-04-08
+257	val_257	2008-04-08
+258	val_258	2008-04-08
+258	val_258	2008-04-08
+258	val_258	2008-04-09
+258	val_258	2008-04-09
+26	val_26	2008-04-09
+26	val_26	2008-04-09
+26	val_26	2008-04-09
+26	val_26	2008-04-09
 26	val_26	2008-04-08
-134	val_134	2008-04-08
-67	val_67	2008-04-08
-384	val_384	2008-04-08
-379	val_379	2008-04-08
-18	val_18	2008-04-08
-462	val_462	2008-04-08
-492	val_492	2008-04-08
-100	val_100	2008-04-08
-298	val_298	2008-04-08
-9	val_9	2008-04-08
-341	val_341	2008-04-08
-498	val_498	2008-04-08
-146	val_146	2008-04-08
-458	val_458	2008-04-08
-362	val_362	2008-04-08
-186	val_186	2008-04-08
-285	val_285	2008-04-08
-348	val_348	2008-04-08
-167	val_167	2008-04-08
-18	val_18	2008-04-08
-273	val_273	2008-04-08
-183	val_183	2008-04-08
-281	val_281	2008-04-08
-344	val_344	2008-04-08
-97	val_97	2008-04-08
-469	val_469	2008-04-08
-315	val_315	2008-04-08
-84	val_84	2008-04-08
-28	val_28	2008-04-08
-37	val_37	2008-04-08
-448	val_448	2008-04-08
-152	val_152	2008-04-08
-348	val_348	2008-04-08
-307	val_307	2008-04-08
-194	val_194	2008-04-08
-414	val_414	2008-04-08
-477	val_477	2008-04-08
-222	val_222	2008-04-08
-126	val_126	2008-04-08
-90	val_90	2008-04-08
-169	val_169	2008-04-08
-403	val_403	2008-04-08
-400	val_400	2008-04-08
-200	val_200	2008-04-08
-97	val_97	2008-04-08
-238	val_238	2008-04-09
-86	val_86	2008-04-09
-311	val_311	2008-04-09
-27	val_27	2008-04-09
-165	val_165	2008-04-09
-409	val_409	2008-04-09
-255	val_255	2008-04-09
-278	val_278	2008-04-09
-98	val_98	2008-04-09
-484	val_484	2008-04-09
+26	val_26	2008-04-08
+26	val_26	2008-04-08
+26	val_26	2008-04-08
+260	val_260	2008-04-08
+260	val_260	2008-04-08
+260	val_260	2008-04-09
+260	val_260	2008-04-09
+262	val_262	2008-04-09
+262	val_262	2008-04-09
+262	val_262	2008-04-08
+262	val_262	2008-04-08
+263	val_263	2008-04-08
+263	val_263	2008-04-08
+263	val_263	2008-04-09
+263	val_263	2008-04-09
 265	val_265	2008-04-09
-193	val_193	2008-04-09
-401	val_401	2008-04-09
-150	val_150	2008-04-09
+265	val_265	2008-04-09
+265	val_265	2008-04-09
+265	val_265	2008-04-09
+265	val_265	2008-04-08
+265	val_265	2008-04-08
+265	val_265	2008-04-08
+265	val_265	2008-04-08
+266	val_266	2008-04-08
+266	val_266	2008-04-08
+266	val_266	2008-04-09
+266	val_266	2008-04-09
+27	val_27	2008-04-09
+27	val_27	2008-04-09
+27	val_27	2008-04-08
+27	val_27	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-08
+272	val_272	2008-04-09
+272	val_272	2008-04-09
+272	val_272	2008-04-09
+272	val_272	2008-04-09
 273	val_273	2008-04-09
-224	val_224	2008-04-09
-369	val_369	2008-04-09
-66	val_66	2008-04-09
-128	val_128	2008-04-09
-213	val_213	2008-04-09
-146	val_146	2008-04-09
-406	val_406	2008-04-09
-429	val_429	2008-04-09
-374	val_374	2008-04-09
-152	val_152	2008-04-09
-469	val_469	2008-04-09
-145	val_145	2008-04-09
-495	val_495	2008-04-09
-37	val_37	2008-04-09
-327	val_327	2008-04-09
-281	val_281	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-09
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+273	val_273	2008-04-08
+274	val_274	2008-04-08
+274	val_274	2008-04-08
+274	val_274	2008-04-09
+274	val_274	2008-04-09
+275	val_275	2008-04-09
+275	val_275	2008-04-09
+275	val_275	2008-04-08
+275	val_275	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-08
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
+277	val_277	2008-04-09
 277	val_277	2008-04-09
-209	val_209	2008-04-09
-15	val_15	2008-04-09
-82	val_82	2008-04-09
-403	val_403	2008-04-09
-166	val_166	2008-04-09
-417	val_417	2008-04-09
-430	val_430	2008-04-09
-252	val_252	2008-04-09
-292	val_292	2008-04-09
-219	val_219	2008-04-09
-287	val_287	2008-04-09
-153	val_153	2008-04-09
-193	val_193	2008-04-09
-338	val_338	2008-04-09
-446	val_446	2008-04-09
-459	val_459	2008-04-09
-394	val_394	2008-04-09
-237	val_237	2008-04-09
-482	val_482	2008-04-09
-174	val_174	2008-04-09
-413	val_413	2008-04-09
-494	val_494	2008-04-09
-207	val_207	2008-04-09
-199	val_199	2008-04-09
-466	val_466	2008-04-09
-208	val_208	2008-04-09
-174	val_174	2008-04-09
-399	val_399	2008-04-09
-396	val_396	2008-04-09
-247	val_247	2008-04-09
-417	val_417	2008-04-09
-489	val_489	2008-04-09
-162	val_162	2008-04-09
-377	val_377	2008-04-09
-397	val_397	2008-04-09
-309	val_309	2008-04-09
-365	val_365	2008-04-09
-266	val_266	2008-04-09
-439	val_439	2008-04-09
-342	val_342	2008-04-09
-367	val_367	2008-04-09
-325	val_325	2008-04-09
-167	val_167	2008-04-09
-195	val_195	2008-04-09
-475	val_475	2008-04-09
-17	val_17	2008-04-09
-113	val_113	2008-04-09
-155	val_155	2008-04-09
-203	val_203	2008-04-09
-339	val_339	2008-04-09
-0	val_0	2008-04-09
-455	val_455	2008-04-09
-128	val_128	2008-04-09
-311	val_311	2008-04-09
-316	val_316	2008-04-09
-57	val_57	2008-04-09
-302	val_302	2008-04-09
-205	val_205	2008-04-09
-149	val_149	2008-04-09
-438	val_438	2008-04-09
-345	val_345	2008-04-09
-129	val_129	2008-04-09
-170	val_170	2008-04-09
-20	val_20	2008-04-09
-489	val_489	2008-04-09
-157	val_157	2008-04-09
-378	val_378	2008-04-09
-221	val_221	2008-04-09
-92	val_92	2008-04-09
-111	val_111	2008-04-09
-47	val_47	2008-04-09
-72	val_72	2008-04-09
-4	val_4	2008-04-09
-280	val_280	2008-04-09
-35	val_35	2008-04-09
-427	val_427	2008-04-09
 277	val_277	2008-04-09
-208	val_208	2008-04-09
-356	val_356	2008-04-09
-399	val_399	2008-04-09
-169	val_169	2008-04-09
-382	val_382	2008-04-09
-498	val_498	2008-04-09
-125	val_125	2008-04-09
-386	val_386	2008-04-09
-437	val_437	2008-04-09
-469	val_469	2008-04-09
-192	val_192	2008-04-09
-286	val_286	2008-04-09
-187	val_187	2008-04-09
-176	val_176	2008-04-09
-54	val_54	2008-04-09
-459	val_459	2008-04-09
-51	val_51	2008-04-09
-138	val_138	2008-04-09
-103	val_103	2008-04-09
-239	val_239	2008-04-09
-213	val_213	2008-04-09
-216	val_216	2008-04-09
-430	val_430	2008-04-09
 278	val_278	2008-04-09
-176	val_176	2008-04-09
-289	val_289	2008-04-09
-221	val_221	2008-04-09
-65	val_65	2008-04-09
-318	val_318	2008-04-09
-332	val_332	2008-04-09
-311	val_311	2008-04-09
-275	val_275	2008-04-09
-137	val_137	2008-04-09
-241	val_241	2008-04-09
-83	val_83	2008-04-09
-333	val_333	2008-04-09
-180	val_180	2008-04-09
+278	val_278	2008-04-09
+278	val_278	2008-04-09
+278	val_278	2008-04-09
+278	val_278	2008-04-08
+278	val_278	2008-04-08
+278	val_278	2008-04-08
+278	val_278	2008-04-08
+28	val_28	2008-04-08
+28	val_28	2008-04-08
+28	val_28	2008-04-09
+28	val_28	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-09
+280	val_280	2008-04-08
+280	val_280	2008-04-08
+280	val_280	2008-04-08
+280	val_280	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-08
+281	val_281	2008-04-09
+281	val_281	2008-04-09
+281	val_281	2008-04-09
+281	val_281	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-09
+282	val_282	2008-04-08
+282	val_282	2008-04-08
+282	val_282	2008-04-08
+282	val_282	2008-04-08
+283	val_283	2008-04-08
+283	val_283	2008-04-08
+283	val_283	2008-04-09
+283	val_283	2008-04-09
 284	val_284	2008-04-09
-12	val_12	2008-04-09
-230	val_230	2008-04-09
-181	val_181	2008-04-09
-67	val_67	2008-04-09
-260	val_260	2008-04-09
-404	val_404	2008-04-09
-384	val_384	2008-04-09
-489	val_489	2008-04-09
-353	val_353	2008-04-09
-373	val_373	2008-04-09
-272	val_272	2008-04-09
-138	val_138	2008-04-09
-217	val_217	2008-04-09
-84	val_84	2008-04-09
-348	val_348	2008-04-09
-466	val_466	2008-04-09
-58	val_58	2008-04-09
-8	val_8	2008-04-09
-411	val_411	2008-04-09
-230	val_230	2008-04-09
-208	val_208	2008-04-09
-348	val_348	2008-04-09
-24	val_24	2008-04-09
-463	val_463	2008-04-09
-431	val_431	2008-04-09
-179	val_179	2008-04-09
-172	val_172	2008-04-09
-42	val_42	2008-04-09
-129	val_129	2008-04-09
-158	val_158	2008-04-09
-119	val_119	2008-04-09
-496	val_496	2008-04-09
-0	val_0	2008-04-09
-322	val_322	2008-04-09
-197	val_197	2008-04-09
-468	val_468	2008-04-09
-393	val_393	2008-04-09
-454	val_454	2008-04-09
-100	val_100	2008-04-09
+284	val_284	2008-04-09
+284	val_284	2008-04-08
+284	val_284	2008-04-08
+285	val_285	2008-04-08
+285	val_285	2008-04-08
+285	val_285	2008-04-09
+285	val_285	2008-04-09
+286	val_286	2008-04-09
+286	val_286	2008-04-09
+286	val_286	2008-04-08
+286	val_286	2008-04-08
+287	val_287	2008-04-08
+287	val_287	2008-04-08
+287	val_287	2008-04-09
+287	val_287	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-09
+288	val_288	2008-04-08
+288	val_288	2008-04-08
+288	val_288	2008-04-08
+288	val_288	2008-04-08
+289	val_289	2008-04-08
+289	val_289	2008-04-08
+289	val_289	2008-04-09
+289	val_289	2008-04-09
+291	val_291	2008-04-09
+291	val_291	2008-04-09
+291	val_291	2008-04-08
+291	val_291	2008-04-08
+292	val_292	2008-04-08
+292	val_292	2008-04-08
+292	val_292	2008-04-09
+292	val_292	2008-04-09
+296	val_296	2008-04-09
+296	val_296	2008-04-09
+296	val_296	2008-04-08
+296	val_296	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
+298	val_298	2008-04-08
 298	val_298	2008-04-09
-199	val_199	2008-04-09
-191	val_191	2008-04-09
-418	val_418	2008-04-09
-96	val_96	2008-04-09
-26	val_26	2008-04-09
-165	val_165	2008-04-09
-327	val_327	2008-04-09
-230	val_230	2008-04-09
-205	val_205	2008-04-09
-120	val_120	2008-04-09
-131	val_131	2008-04-09
-51	val_51	2008-04-09
-404	val_404	2008-04-09
-43	val_43	2008-04-09
-436	val_436	2008-04-09
-156	val_156	2008-04-09
-469	val_469	2008-04-09
-468	val_468	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+298	val_298	2008-04-09
+30	val_30	2008-04-09
+30	val_30	2008-04-09
+30	val_30	2008-04-08
+30	val_30	2008-04-08
+302	val_302	2008-04-08
+302	val_302	2008-04-08
+302	val_302	2008-04-09
+302	val_302	2008-04-09
+305	val_305	2008-04-09
+305	val_305	2008-04-09
+305	val_305	2008-04-08
+305	val_305	2008-04-08
+306	val_306	2008-04-08
+306	val_306	2008-04-08
+306	val_306	2008-04-09
+306	val_306	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-09
+307	val_307	2008-04-08
+307	val_307	2008-04-08
+307	val_307	2008-04-08
+307	val_307	2008-04-08
+308	val_308	2008-04-08
+308	val_308	2008-04-08
 308	val_308	2008-04-09
-95	val_95	2008-04-09
-196	val_196	2008-04-09
-288	val_288	2008-04-09
-481	val_481	2008-04-09
-457	val_457	2008-04-09
-98	val_98	2008-04-09
-282	val_282	2008-04-09
-197	val_197	2008-04-09
-187	val_187	2008-04-09
+308	val_308	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-09
+309	val_309	2008-04-08
+309	val_309	2008-04-08
+309	val_309	2008-04-08
+309	val_309	2008-04-08
+310	val_310	2008-04-08
+310	val_310	2008-04-08
+310	val_310	2008-04-09
+310	val_310	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-09
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+311	val_311	2008-04-08
+315	val_315	2008-04-08
+315	val_315	2008-04-08
+315	val_315	2008-04-09
+315	val_315	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-09
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+316	val_316	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-08
+317	val_317	2008-04-09
+317	val_317	2008-04-09
+317	val_317	2008-04-09
+317	val_317	2008-04-09
 318	val_318	2008-04-09
 318	val_318	2008-04-09
-409	val_409	2008-04-09
-470	val_470	2008-04-09
-137	val_137	2008-04-09
-369	val_369	2008-04-09
-316	val_316	2008-04-09
-169	val_169	2008-04-09
-413	val_413	2008-04-09
-85	val_85	2008-04-09
-77	val_77	2008-04-09
-0	val_0	2008-04-09
-490	val_490	2008-04-09
-87	val_87	2008-04-09
-364	val_364	2008-04-09
-179	val_179	2008-04-09
-118	val_118	2008-04-09
-134	val_134	2008-04-09
-395	val_395	2008-04-09
-282	val_282	2008-04-09
-138	val_138	2008-04-09
-238	val_238	2008-04-09
-419	val_419	2008-04-09
-15	val_15	2008-04-09
-118	val_118	2008-04-09
-72	val_72	2008-04-09
-90	val_90	2008-04-09
-307	val_307	2008-04-09
-19	val_19	2008-04-09
-435	val_435	2008-04-09
-10	val_10	2008-04-09
-277	val_277	2008-04-09
-273	val_273	2008-04-09
-306	val_306	2008-04-09
-224	val_224	2008-04-09
-309	val_309	2008-04-09
-389	val_389	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-09
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+318	val_318	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-08
+321	val_321	2008-04-09
+321	val_321	2008-04-09
+321	val_321	2008-04-09
+321	val_321	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-09
+322	val_322	2008-04-08
+322	val_322	2008-04-08
+322	val_322	2008-04-08
+322	val_322	2008-04-08
+323	val_323	2008-04-08
+323	val_323	2008-04-08
+323	val_323	2008-04-09
+323	val_323	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-09
+325	val_325	2008-04-08
+325	val_325	2008-04-08
+325	val_325	2008-04-08
+325	val_325	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
+327	val_327	2008-04-08
 327	val_327	2008-04-09
-242	val_242	2008-04-09
-369	val_369	2008-04-09
-392	val_392	2008-04-09
-272	val_272	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+327	val_327	2008-04-09
+33	val_33	2008-04-09
+33	val_33	2008-04-09
+33	val_33	2008-04-08
+33	val_33	2008-04-08
+331	val_331	2008-04-08
+331	val_331	2008-04-08
+331	val_331	2008-04-08
+331	val_331	2008-04-08
 331	val_331	2008-04-09
-401	val_401	2008-04-09
-242	val_242	2008-04-09
-452	val_452	2008-04-09
-177	val_177	2008-04-09
-226	val_226	2008-04-09
-5	val_5	2008-04-09
-497	val_497	2008-04-09
-402	val_402	2008-04-09
-396	val_396	2008-04-09
-317	val_317	2008-04-09
-395	val_395	2008-04-09
-58	val_58	2008-04-09
-35	val_35	2008-04-09
+331	val_331	2008-04-09
+331	val_331	2008-04-09
+331	val_331	2008-04-09
+332	val_332	2008-04-09
+332	val_332	2008-04-09
+332	val_332	2008-04-08
+332	val_332	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-08
+333	val_333	2008-04-09
+333	val_333	2008-04-09
+333	val_333	2008-04-09
+333	val_333	2008-04-09
+335	val_335	2008-04-09
+335	val_335	2008-04-09
+335	val_335	2008-04-08
+335	val_335	2008-04-08
+336	val_336	2008-04-08
+336	val_336	2008-04-08
 336	val_336	2008-04-09
-95	val_95	2008-04-09
-11	val_11	2008-04-09
-168	val_168	2008-04-09
+336	val_336	2008-04-09
+338	val_338	2008-04-09
+338	val_338	2008-04-09
+338	val_338	2008-04-08
+338	val_338	2008-04-08
+339	val_339	2008-04-08
+339	val_339	2008-04-08
+339	val_339	2008-04-09
+339	val_339	2008-04-09
 34	val_34	2008-04-09
-229	val_229	2008-04-09
-233	val_233	2008-04-09
-143	val_143	2008-04-09
-472	val_472	2008-04-09
-322	val_322	2008-04-09
-498	val_498	2008-04-09
-160	val_160	2008-04-09
-195	val_195	2008-04-09
-42	val_42	2008-04-09
-321	val_321	2008-04-09
-430	val_430	2008-04-09
-119	val_119	2008-04-09
-489	val_489	2008-04-09
-458	val_458	2008-04-09
-78	val_78	2008-04-09
-76	val_76	2008-04-09
-41	val_41	2008-04-09
-223	val_223	2008-04-09
-492	val_492	2008-04-09
-149	val_149	2008-04-09
-449	val_449	2008-04-09
-218	val_218	2008-04-09
-228	val_228	2008-04-09
-138	val_138	2008-04-09
-453	val_453	2008-04-09
-30	val_30	2008-04-09
-209	val_209	2008-04-09
-64	val_64	2008-04-09
-468	val_468	2008-04-09
-76	val_76	2008-04-09
-74	val_74	2008-04-09
+34	val_34	2008-04-09
+34	val_34	2008-04-08
+34	val_34	2008-04-08
+341	val_341	2008-04-08
+341	val_341	2008-04-08
+341	val_341	2008-04-09
+341	val_341	2008-04-09
 342	val_342	2008-04-09
-69	val_69	2008-04-09
-230	val_230	2008-04-09
-33	val_33	2008-04-09
-368	val_368	2008-04-09
-103	val_103	2008-04-09
-296	val_296	2008-04-09
-113	val_113	2008-04-09
-216	val_216	2008-04-09
-367	val_367	2008-04-09
+342	val_342	2008-04-09
+342	val_342	2008-04-09
+342	val_342	2008-04-09
+342	val_342	2008-04-08
+342	val_342	2008-04-08
+342	val_342	2008-04-08
+342	val_342	2008-04-08
+344	val_344	2008-04-08
+344	val_344	2008-04-08
+344	val_344	2008-04-08
+344	val_344	2008-04-08
 344	val_344	2008-04-09
-167	val_167	2008-04-09
-274	val_274	2008-04-09
-219	val_219	2008-04-09
-239	val_239	2008-04-09
-485	val_485	2008-04-09
-116	val_116	2008-04-09
-223	val_223	2008-04-09
-256	val_256	2008-04-09
-263	val_263	2008-04-09
-70	val_70	2008-04-09
-487	val_487	2008-04-09
-480	val_480	2008-04-09
-401	val_401	2008-04-09
-288	val_288	2008-04-09
-191	val_191	2008-04-09
-5	val_5	2008-04-09
-244	val_244	2008-04-09
-438	val_438	2008-04-09
-128	val_128	2008-04-09
-467	val_467	2008-04-09
-432	val_432	2008-04-09
-202	val_202	2008-04-09
-316	val_316	2008-04-09
-229	val_229	2008-04-09
-469	val_469	2008-04-09
-463	val_463	2008-04-09
-280	val_280	2008-04-09
-2	val_2	2008-04-09
+344	val_344	2008-04-09
+344	val_344	2008-04-09
+344	val_344	2008-04-09
+345	val_345	2008-04-09
+345	val_345	2008-04-09
+345	val_345	2008-04-08
+345	val_345	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-08
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
+348	val_348	2008-04-09
 35	val_35	2008-04-09
-283	val_283	2008-04-09
-331	val_331	2008-04-09
-235	val_235	2008-04-09
-80	val_80	2008-04-09
-44	val_44	2008-04-09
-193	val_193	2008-04-09
-321	val_321	2008-04-09
-335	val_335	2008-04-09
-104	val_104	2008-04-09
-466	val_466	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-09
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+35	val_35	2008-04-08
+351	val_351	2008-04-08
+351	val_351	2008-04-08
+351	val_351	2008-04-09
+351	val_351	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-09
+353	val_353	2008-04-08
+353	val_353	2008-04-08
+353	val_353	2008-04-08
+353	val_353	2008-04-08
+356	val_356	2008-04-08
+356	val_356	2008-04-08
+356	val_356	2008-04-09
+356	val_356	2008-04-09
+360	val_360	2008-04-09
+360	val_360	2008-04-09
+360	val_360	2008-04-08
+360	val_360	2008-04-08
+362	val_362	2008-04-08
+362	val_362	2008-04-08
+362	val_362	2008-04-09
+362	val_362	2008-04-09
+364	val_364	2008-04-09
+364	val_364	2008-04-09
+364	val_364	2008-04-08
+364	val_364	2008-04-08
+365	val_365	2008-04-08
+365	val_365	2008-04-08
+365	val_365	2008-04-09
+365	val_365	2008-04-09
 366	val_366	2008-04-09
-175	val_175	2008-04-09
+366	val_366	2008-04-09
+366	val_366	2008-04-08
+366	val_366	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-08
+367	val_367	2008-04-09
+367	val_367	2008-04-09
+367	val_367	2008-04-09
+367	val_367	2008-04-09
+368	val_368	2008-04-09
+368	val_368	2008-04-09
+368	val_368	2008-04-08
+368	val_368	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-08
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+369	val_369	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-09
+37	val_37	2008-04-08
+37	val_37	2008-04-08
+37	val_37	2008-04-08
+37	val_37	2008-04-08
+373	val_373	2008-04-08
+373	val_373	2008-04-08
+373	val_373	2008-04-09
+373	val_373	2008-04-09
+374	val_374	2008-04-09
+374	val_374	2008-04-09
+374	val_374	2008-04-08
+374	val_374	2008-04-08
+375	val_375	2008-04-08
+375	val_375	2008-04-08
+375	val_375	2008-04-09
+375	val_375	2008-04-09
+377	val_377	2008-04-09
+377	val_377	2008-04-09
+377	val_377	2008-04-08
+377	val_377	2008-04-08
+378	val_378	2008-04-08
+378	val_378	2008-04-08
+378	val_378	2008-04-09
+378	val_378	2008-04-09
+379	val_379	2008-04-09
+379	val_379	2008-04-09
+379	val_379	2008-04-08
+379	val_379	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-08
+382	val_382	2008-04-09
+382	val_382	2008-04-09
+382	val_382	2008-04-09
+382	val_382	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-09
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+384	val_384	2008-04-08
+386	val_386	2008-04-08
+386	val_386	2008-04-08
+386	val_386	2008-04-09
+386	val_386	2008-04-09
+389	val_389	2008-04-09
+389	val_389	2008-04-09
+389	val_389	2008-04-08
+389	val_389	2008-04-08
+392	val_392	2008-04-08
+392	val_392	2008-04-08
+392	val_392	2008-04-09
+392	val_392	2008-04-09
+393	val_393	2008-04-09
+393	val_393	2008-04-09
+393	val_393	2008-04-08
+393	val_393	2008-04-08
+394	val_394	2008-04-08
+394	val_394	2008-04-08
+394	val_394	2008-04-09
+394	val_394	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-09
+395	val_395	2008-04-08
+395	val_395	2008-04-08
+395	val_395	2008-04-08
+395	val_395	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-08
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+396	val_396	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-09
+397	val_397	2008-04-08
+397	val_397	2008-04-08
+397	val_397	2008-04-08
+397	val_397	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-08
+399	val_399	2008-04-09
+399	val_399	2008-04-09
+399	val_399	2008-04-09
+399	val_399	2008-04-09
+4	val_4	2008-04-09
+4	val_4	2008-04-09
+4	val_4	2008-04-08
+4	val_4	2008-04-08
+400	val_400	2008-04-08
+400	val_400	2008-04-08
+400	val_400	2008-04-09
+400	val_400	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-09
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+401	val_401	2008-04-08
+402	val_402	2008-04-08
+402	val_402	2008-04-08
+402	val_402	2008-04-09
+402	val_402	2008-04-09
 403	val_403	2008-04-09
-483	val_483	2008-04-09
-53	val_53	2008-04-09
-105	val_105	2008-04-09
-257	val_257	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-09
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+403	val_403	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-08
+404	val_404	2008-04-09
+404	val_404	2008-04-09
+404	val_404	2008-04-09
+404	val_404	2008-04-09
 406	val_406	2008-04-09
-409	val_409	2008-04-09
-190	val_190	2008-04-09
 406	val_406	2008-04-09
-401	val_401	2008-04-09
-114	val_114	2008-04-09
-258	val_258	2008-04-09
-90	val_90	2008-04-09
-203	val_203	2008-04-09
-262	val_262	2008-04-09
-348	val_348	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-09
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+406	val_406	2008-04-08
+407	val_407	2008-04-08
+407	val_407	2008-04-08
+407	val_407	2008-04-09
+407	val_407	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-09
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+409	val_409	2008-04-08
+41	val_41	2008-04-08
+41	val_41	2008-04-08
+41	val_41	2008-04-09
+41	val_41	2008-04-09
+411	val_411	2008-04-09
+411	val_411	2008-04-09
+411	val_411	2008-04-08
+411	val_411	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-08
+413	val_413	2008-04-09
+413	val_413	2008-04-09
+413	val_413	2008-04-09
+413	val_413	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-09
+414	val_414	2008-04-08
+414	val_414	2008-04-08
+414	val_414	2008-04-08
+414	val_414	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-08
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+417	val_417	2008-04-09
+418	val_418	2008-04-09
+418	val_418	2008-04-09
+418	val_418	2008-04-08
+418	val_418	2008-04-08
+419	val_419	2008-04-08
+419	val_419	2008-04-08
+419	val_419	2008-04-09
+419	val_419	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-09
+42	val_42	2008-04-08
+42	val_42	2008-04-08
+42	val_42	2008-04-08
+42	val_42	2008-04-08
+421	val_421	2008-04-08
+421	val_421	2008-04-08
+421	val_421	2008-04-09
+421	val_421	2008-04-09
 424	val_424	2008-04-09
-12	val_12	2008-04-09
-396	val_396	2008-04-09
-201	val_201	2008-04-09
-217	val_217	2008-04-09
-164	val_164	2008-04-09
+424	val_424	2008-04-09
+424	val_424	2008-04-09
+424	val_424	2008-04-09
+424	val_424	2008-04-08
+424	val_424	2008-04-08
+424	val_424	2008-04-08
+424	val_424	2008-04-08
+427	val_427	2008-04-08
+427	val_427	2008-04-08
+427	val_427	2008-04-09
+427	val_427	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-09
+429	val_429	2008-04-08
+429	val_429	2008-04-08
+429	val_429	2008-04-08
+429	val_429	2008-04-08
+43	val_43	2008-04-08
+43	val_43	2008-04-08
+43	val_43	2008-04-09
+43	val_43	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-09
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+430	val_430	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
+431	val_431	2008-04-08
 431	val_431	2008-04-09
-454	val_454	2008-04-09
-478	val_478	2008-04-09
-298	val_298	2008-04-09
-125	val_125	2008-04-09
 431	val_431	2008-04-09
-164	val_164	2008-04-09
-424	val_424	2008-04-09
-187	val_187	2008-04-09
-382	val_382	2008-04-09
-5	val_5	2008-04-09
-70	val_70	2008-04-09
-397	val_397	2008-04-09
-480	val_480	2008-04-09
-291	val_291	2008-04-09
-24	val_24	2008-04-09
-351	val_351	2008-04-09
-255	val_255	2008-04-09
-104	val_104	2008-04-09
-70	val_70	2008-04-09
-163	val_163	2008-04-09
+431	val_431	2008-04-09
+431	val_431	2008-04-09
+431	val_431	2008-04-09
+431	val_431	2008-04-09
+432	val_432	2008-04-09
+432	val_432	2008-04-09
+432	val_432	2008-04-08
+432	val_432	2008-04-08
+435	val_435	2008-04-08
+435	val_435	2008-04-08
+435	val_435	2008-04-09
+435	val_435	2008-04-09
+436	val_436	2008-04-09
+436	val_436	2008-04-09
+436	val_436	2008-04-08
+436	val_436	2008-04-08
+437	val_437	2008-04-08
+437	val_437	2008-04-08
+437	val_437	2008-04-09
+437	val_437	2008-04-09
 438	val_438	2008-04-09
-119	val_119	2008-04-09
-414	val_414	2008-04-09
-200	val_200	2008-04-09
-491	val_491	2008-04-09
-237	val_237	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-09
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+438	val_438	2008-04-08
+439	val_439	2008-04-08
+439	val_439	2008-04-08
+439	val_439	2008-04-08
+439	val_439	2008-04-08
 439	val_439	2008-04-09
-360	val_360	2008-04-09
-248	val_248	2008-04-09
-479	val_479	2008-04-09
-305	val_305	2008-04-09
-417	val_417	2008-04-09
-199	val_199	2008-04-09
-444	val_444	2008-04-09
-120	val_120	2008-04-09
-429	val_429	2008-04-09
-169	val_169	2008-04-09
+439	val_439	2008-04-09
+439	val_439	2008-04-09
+439	val_439	2008-04-09
+44	val_44	2008-04-09
+44	val_44	2008-04-09
+44	val_44	2008-04-08
+44	val_44	2008-04-08
+443	val_443	2008-04-08
+443	val_443	2008-04-08
 443	val_443	2008-04-09
-323	val_323	2008-04-09
-325	val_325	2008-04-09
-277	val_277	2008-04-09
-230	val_230	2008-04-09
-478	val_478	2008-04-09
-178	val_178	2008-04-09
-468	val_468	2008-04-09
-310	val_310	2008-04-09
-317	val_317	2008-04-09
-333	val_333	2008-04-09
-493	val_493	2008-04-09
+443	val_443	2008-04-09
+444	val_444	2008-04-09
+444	val_444	2008-04-09
+444	val_444	2008-04-08
+444	val_444	2008-04-08
+446	val_446	2008-04-08
+446	val_446	2008-04-08
+446	val_446	2008-04-09
+446	val_446	2008-04-09
+448	val_448	2008-04-09
+448	val_448	2008-04-09
+448	val_448	2008-04-08
+448	val_448	2008-04-08
+449	val_449	2008-04-08
+449	val_449	2008-04-08
+449	val_449	2008-04-09
+449	val_449	2008-04-09
+452	val_452	2008-04-09
+452	val_452	2008-04-09
+452	val_452	2008-04-08
+452	val_452	2008-04-08
+453	val_453	2008-04-08
+453	val_453	2008-04-08
+453	val_453	2008-04-09
+453	val_453	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-09
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+454	val_454	2008-04-08
+455	val_455	2008-04-08
+455	val_455	2008-04-08
+455	val_455	2008-04-09
+455	val_455	2008-04-09
+457	val_457	2008-04-09
+457	val_457	2008-04-09
+457	val_457	2008-04-08
+457	val_457	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-08
+458	val_458	2008-04-09
+458	val_458	2008-04-09
+458	val_458	2008-04-09
+458	val_458	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-09
+459	val_459	2008-04-08
+459	val_459	2008-04-08
+459	val_459	2008-04-08
+459	val_459	2008-04-08
+460	val_460	2008-04-08
+460	val_460	2008-04-08
+460	val_460	2008-04-09
 460	val_460	2008-04-09
-207	val_207	2008-04-09
-249	val_249	2008-04-09
-265	val_265	2008-04-09
-480	val_480	2008-04-09
-83	val_83	2008-04-09
-136	val_136	2008-04-09
-353	val_353	2008-04-09
-172	val_172	2008-04-09
-214	val_214	2008-04-09
 462	val_462	2008-04-09
-233	val_233	2008-04-09
-406	val_406	2008-04-09
-133	val_133	2008-04-09
-175	val_175	2008-04-09
-189	val_189	2008-04-09
-454	val_454	2008-04-09
-375	val_375	2008-04-09
-401	val_401	2008-04-09
-421	val_421	2008-04-09
-407	val_407	2008-04-09
-384	val_384	2008-04-09
-256	val_256	2008-04-09
-26	val_26	2008-04-09
-134	val_134	2008-04-09
-67	val_67	2008-04-09
-384	val_384	2008-04-09
-379	val_379	2008-04-09
-18	val_18	2008-04-09
 462	val_462	2008-04-09
-492	val_492	2008-04-09
-100	val_100	2008-04-09
-298	val_298	2008-04-09
-9	val_9	2008-04-09
-341	val_341	2008-04-09
-498	val_498	2008-04-09
-146	val_146	2008-04-09
-458	val_458	2008-04-09
-362	val_362	2008-04-09
-186	val_186	2008-04-09
-285	val_285	2008-04-09
-348	val_348	2008-04-09
-167	val_167	2008-04-09
-18	val_18	2008-04-09
-273	val_273	2008-04-09
-183	val_183	2008-04-09
-281	val_281	2008-04-09
-344	val_344	2008-04-09
-97	val_97	2008-04-09
+462	val_462	2008-04-09
+462	val_462	2008-04-09
+462	val_462	2008-04-08
+462	val_462	2008-04-08
+462	val_462	2008-04-08
+462	val_462	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-08
+463	val_463	2008-04-09
+463	val_463	2008-04-09
+463	val_463	2008-04-09
+463	val_463	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-09
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+466	val_466	2008-04-08
+467	val_467	2008-04-08
+467	val_467	2008-04-08
+467	val_467	2008-04-09
+467	val_467	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-09
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+468	val_468	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
+469	val_469	2008-04-08
 469	val_469	2008-04-09
-315	val_315	2008-04-09
-84	val_84	2008-04-09
-28	val_28	2008-04-09
-37	val_37	2008-04-09
-448	val_448	2008-04-09
-152	val_152	2008-04-09
-348	val_348	2008-04-09
-307	val_307	2008-04-09
-194	val_194	2008-04-09
-414	val_414	2008-04-09
-477	val_477	2008-04-09
-222	val_222	2008-04-09
-126	val_126	2008-04-09
-90	val_90	2008-04-09
-169	val_169	2008-04-09
-403	val_403	2008-04-09
-400	val_400	2008-04-09
-200	val_200	2008-04-09
-97	val_97	2008-04-09
-238	val_238	2008-04-09
-86	val_86	2008-04-09
-311	val_311	2008-04-09
-27	val_27	2008-04-09
-165	val_165	2008-04-09
-409	val_409	2008-04-09
-255	val_255	2008-04-09
-278	val_278	2008-04-09
-98	val_98	2008-04-09
-484	val_484	2008-04-09
-265	val_265	2008-04-09
-193	val_193	2008-04-09
-401	val_401	2008-04-09
-150	val_150	2008-04-09
-273	val_273	2008-04-09
-224	val_224	2008-04-09
-369	val_369	2008-04-09
-66	val_66	2008-04-09
-128	val_128	2008-04-09
-213	val_213	2008-04-09
-146	val_146	2008-04-09
-406	val_406	2008-04-09
-429	val_429	2008-04-09
-374	val_374	2008-04-09
-152	val_152	2008-04-09
 469	val_469	2008-04-09
-145	val_145	2008-04-09
-495	val_495	2008-04-09
-37	val_37	2008-04-09
-327	val_327	2008-04-09
-281	val_281	2008-04-09
-277	val_277	2008-04-09
-209	val_209	2008-04-09
-15	val_15	2008-04-09
-82	val_82	2008-04-09
-403	val_403	2008-04-09
-166	val_166	2008-04-09
-417	val_417	2008-04-09
-430	val_430	2008-04-09
-252	val_252	2008-04-09
-292	val_292	2008-04-09
-219	val_219	2008-04-09
-287	val_287	2008-04-09
-153	val_153	2008-04-09
-193	val_193	2008-04-09
-338	val_338	2008-04-09
-446	val_446	2008-04-09
-459	val_459	2008-04-09
-394	val_394	2008-04-09
-237	val_237	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+469	val_469	2008-04-09
+47	val_47	2008-04-09
+47	val_47	2008-04-09
+47	val_47	2008-04-08
+47	val_47	2008-04-08
+470	val_470	2008-04-08
+470	val_470	2008-04-08
+470	val_470	2008-04-09
+470	val_470	2008-04-09
+472	val_472	2008-04-09
+472	val_472	2008-04-09
+472	val_472	2008-04-08
+472	val_472	2008-04-08
+475	val_475	2008-04-08
+475	val_475	2008-04-08
+475	val_475	2008-04-09
+475	val_475	2008-04-09
+477	val_477	2008-04-09
+477	val_477	2008-04-09
+477	val_477	2008-04-08
+477	val_477	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-08
+478	val_478	2008-04-09
+478	val_478	2008-04-09
+478	val_478	2008-04-09
+478	val_478	2008-04-09
+479	val_479	2008-04-09
+479	val_479	2008-04-09
+479	val_479	2008-04-08
+479	val_479	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-08
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+480	val_480	2008-04-09
+481	val_481	2008-04-09
+481	val_481	2008-04-09
+481	val_481	2008-04-08
+481	val_481	2008-04-08
+482	val_482	2008-04-08
+482	val_482	2008-04-08
 482	val_482	2008-04-09
-174	val_174	2008-04-09
-413	val_413	2008-04-09
-494	val_494	2008-04-09
-207	val_207	2008-04-09
-199	val_199	2008-04-09
-466	val_466	2008-04-09
-208	val_208	2008-04-09
-174	val_174	2008-04-09
-399	val_399	2008-04-09
-396	val_396	2008-04-09
-247	val_247	2008-04-09
-417	val_417	2008-04-09
+482	val_482	2008-04-09
+483	val_483	2008-04-09
+483	val_483	2008-04-09
+483	val_483	2008-04-08
+483	val_483	2008-04-08
+484	val_484	2008-04-08
+484	val_484	2008-04-08
+484	val_484	2008-04-09
+484	val_484	2008-04-09
+485	val_485	2008-04-09
+485	val_485	2008-04-09
+485	val_485	2008-04-08
+485	val_485	2008-04-08
+487	val_487	2008-04-08
+487	val_487	2008-04-08
+487	val_487	2008-04-09
+487	val_487	2008-04-09
 489	val_489	2008-04-09
-162	val_162	2008-04-09
-377	val_377	2008-04-09
-397	val_397	2008-04-09
-309	val_309	2008-04-09
-365	val_365	2008-04-09
-266	val_266	2008-04-09
-439	val_439	2008-04-09
-342	val_342	2008-04-09
-367	val_367	2008-04-09
-325	val_325	2008-04-09
-167	val_167	2008-04-09
-195	val_195	2008-04-09
-475	val_475	2008-04-09
-17	val_17	2008-04-09
-113	val_113	2008-04-09
-155	val_155	2008-04-09
-203	val_203	2008-04-09
-339	val_339	2008-04-09
-0	val_0	2008-04-09
-455	val_455	2008-04-09
-128	val_128	2008-04-09
-311	val_311	2008-04-09
-316	val_316	2008-04-09
-57	val_57	2008-04-09
-302	val_302	2008-04-09
-205	val_205	2008-04-09
-149	val_149	2008-04-09
-438	val_438	2008-04-09
-345	val_345	2008-04-09
-129	val_129	2008-04-09
-170	val_170	2008-04-09
-20	val_20	2008-04-09
 489	val_489	2008-04-09
-157	val_157	2008-04-09
-378	val_378	2008-04-09
-221	val_221	2008-04-09
-92	val_92	2008-04-09
-111	val_111	2008-04-09
-47	val_47	2008-04-09
-72	val_72	2008-04-09
-4	val_4	2008-04-09
-280	val_280	2008-04-09
-35	val_35	2008-04-09
-427	val_427	2008-04-09
-277	val_277	2008-04-09
-208	val_208	2008-04-09
-356	val_356	2008-04-09
-399	val_399	2008-04-09
-169	val_169	2008-04-09
-382	val_382	2008-04-09
-498	val_498	2008-04-09
-125	val_125	2008-04-09
-386	val_386	2008-04-09
-437	val_437	2008-04-09
-469	val_469	2008-04-09
-192	val_192	2008-04-09
-286	val_286	2008-04-09
-187	val_187	2008-04-09
-176	val_176	2008-04-09
-54	val_54	2008-04-09
-459	val_459	2008-04-09
-51	val_51	2008-04-09
-138	val_138	2008-04-09
-103	val_103	2008-04-09
-239	val_239	2008-04-09
-213	val_213	2008-04-09
-216	val_216	2008-04-09
-430	val_430	2008-04-09
-278	val_278	2008-04-09
-176	val_176	2008-04-09
-289	val_289	2008-04-09
-221	val_221	2008-04-09
-65	val_65	2008-04-09
-318	val_318	2008-04-09
-332	val_332	2008-04-09
-311	val_311	2008-04-09
-275	val_275	2008-04-09
-137	val_137	2008-04-09
-241	val_241	2008-04-09
-83	val_83	2008-04-09
-333	val_333	2008-04-09
-180	val_180	2008-04-09
-284	val_284	2008-04-09
-12	val_12	2008-04-09
-230	val_230	2008-04-09
-181	val_181	2008-04-09
-67	val_67	2008-04-09
-260	val_260	2008-04-09
-404	val_404	2008-04-09
-384	val_384	2008-04-09
 489	val_489	2008-04-09
-353	val_353	2008-04-09
-373	val_373	2008-04-09
-272	val_272	2008-04-09
-138	val_138	2008-04-09
-217	val_217	2008-04-09
-84	val_84	2008-04-09
-348	val_348	2008-04-09
-466	val_466	2008-04-09
-58	val_58	2008-04-09
-8	val_8	2008-04-09
-411	val_411	2008-04-09
-230	val_230	2008-04-09
-208	val_208	2008-04-09
-348	val_348	2008-04-09
-24	val_24	2008-04-09
-463	val_463	2008-04-09
-431	val_431	2008-04-09
-179	val_179	2008-04-09
-172	val_172	2008-04-09
-42	val_42	2008-04-09
-129	val_129	2008-04-09
-158	val_158	2008-04-09
-119	val_119	2008-04-09
-496	val_496	2008-04-09
-0	val_0	2008-04-09
-322	val_322	2008-04-09
-197	val_197	2008-04-09
-468	val_468	2008-04-09
-393	val_393	2008-04-09
-454	val_454	2008-04-09
-100	val_100	2008-04-09
-298	val_298	2008-04-09
-199	val_199	2008-04-09
-191	val_191	2008-04-09
-418	val_418	2008-04-09
-96	val_96	2008-04-09
-26	val_26	2008-04-09
-165	val_165	2008-04-09
-327	val_327	2008-04-09
-230	val_230	2008-04-09
-205	val_205	2008-04-09
-120	val_120	2008-04-09
-131	val_131	2008-04-09
-51	val_51	2008-04-09
-404	val_404	2008-04-09
-43	val_43	2008-04-09
-436	val_436	2008-04-09
-156	val_156	2008-04-09
-469	val_469	2008-04-09
-468	val_468	2008-04-09
-308	val_308	2008-04-09
-95	val_95	2008-04-09
-196	val_196	2008-04-09
-288	val_288	2008-04-09
-481	val_481	2008-04-09
-457	val_457	2008-04-09
-98	val_98	2008-04-09
-282	val_282	2008-04-09
-197	val_197	2008-04-09
-187	val_187	2008-04-09
-318	val_318	2008-04-09
-318	val_318	2008-04-09
-409	val_409	2008-04-09
-470	val_470	2008-04-09
-137	val_137	2008-04-09
-369	val_369	2008-04-09
-316	val_316	2008-04-09
-169	val_169	2008-04-09
-413	val_413	2008-04-09
-85	val_85	2008-04-09
-77	val_77	2008-04-09
-0	val_0	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-09
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+489	val_489	2008-04-08
+490	val_490	2008-04-08
+490	val_490	2008-04-08
 490	val_490	2008-04-09
-87	val_87	2008-04-09
-364	val_364	2008-04-09
-179	val_179	2008-04-09
-118	val_118	2008-04-09
-134	val_134	2008-04-09
-395	val_395	2008-04-09
-282	val_282	2008-04-09
-138	val_138	2008-04-09
-238	val_238	2008-04-09
-419	val_419	2008-04-09
-15	val_15	2008-04-09
-118	val_118	2008-04-09
-72	val_72	2008-04-09
-90	val_90	2008-04-09
-307	val_307	2008-04-09
-19	val_19	2008-04-09
-435	val_435	2008-04-09
-10	val_10	2008-04-09
-277	val_277	2008-04-09
-273	val_273	2008-04-09
-306	val_306	2008-04-09
-224	val_224	2008-04-09
-309	val_309	2008-04-09
-389	val_389	2008-04-09
-327	val_327	2008-04-09
-242	val_242	2008-04-09
-369	val_369	2008-04-09
-392	val_392	2008-04-09
-272	val_272	2008-04-09
-331	val_331	2008-04-09
-401	val_401	2008-04-09
-242	val_242	2008-04-09
-452	val_452	2008-04-09
-177	val_177	2008-04-09
-226	val_226	2008-04-09
-5	val_5	2008-04-09
+490	val_490	2008-04-09
+491	val_491	2008-04-09
+491	val_491	2008-04-09
+491	val_491	2008-04-08
+491	val_491	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-08
+492	val_492	2008-04-09
+492	val_492	2008-04-09
+492	val_492	2008-04-09
+492	val_492	2008-04-09
+493	val_493	2008-04-09
+493	val_493	2008-04-09
+493	val_493	2008-04-08
+493	val_493	2008-04-08
+494	val_494	2008-04-08
+494	val_494	2008-04-08
+494	val_494	2008-04-09
+494	val_494	2008-04-09
+495	val_495	2008-04-09
+495	val_495	2008-04-09
+495	val_495	2008-04-08
+495	val_495	2008-04-08
+496	val_496	2008-04-08
+496	val_496	2008-04-08
+496	val_496	2008-04-09
+496	val_496	2008-04-09
 497	val_497	2008-04-09
-402	val_402	2008-04-09
-396	val_396	2008-04-09
-317	val_317	2008-04-09
-395	val_395	2008-04-09
-58	val_58	2008-04-09
-35	val_35	2008-04-09
-336	val_336	2008-04-09
-95	val_95	2008-04-09
-11	val_11	2008-04-09
-168	val_168	2008-04-09
-34	val_34	2008-04-09
-229	val_229	2008-04-09
-233	val_233	2008-04-09
-143	val_143	2008-04-09
-472	val_472	2008-04-09
-322	val_322	2008-04-09
+497	val_497	2008-04-09
+497	val_497	2008-04-08
+497	val_497	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
+498	val_498	2008-04-08
 498	val_498	2008-04-09
-160	val_160	2008-04-09
-195	val_195	2008-04-09
-42	val_42	2008-04-09
-321	val_321	2008-04-09
-430	val_430	2008-04-09
-119	val_119	2008-04-09
-489	val_489	2008-04-09
-458	val_458	2008-04-09
-78	val_78	2008-04-09
-76	val_76	2008-04-09
-41	val_41	2008-04-09
-223	val_223	2008-04-09
-492	val_492	2008-04-09
-149	val_149	2008-04-09
-449	val_449	2008-04-09
-218	val_218	2008-04-09
-228	val_228	2008-04-09
-138	val_138	2008-04-09
-453	val_453	2008-04-09
-30	val_30	2008-04-09
-209	val_209	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+498	val_498	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-09
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+5	val_5	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-08
+51	val_51	2008-04-09
+51	val_51	2008-04-09
+51	val_51	2008-04-09
+51	val_51	2008-04-09
+53	val_53	2008-04-09
+53	val_53	2008-04-09
+53	val_53	2008-04-08
+53	val_53	2008-04-08
+54	val_54	2008-04-08
+54	val_54	2008-04-08
+54	val_54	2008-04-09
+54	val_54	2008-04-09
+57	val_57	2008-04-09
+57	val_57	2008-04-09
+57	val_57	2008-04-08
+57	val_57	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-08
+58	val_58	2008-04-09
+58	val_58	2008-04-09
+58	val_58	2008-04-09
+58	val_58	2008-04-09
 64	val_64	2008-04-09
-468	val_468	2008-04-09
-76	val_76	2008-04-09
-74	val_74	2008-04-09
-342	val_342	2008-04-09
+64	val_64	2008-04-09
+64	val_64	2008-04-08
+64	val_64	2008-04-08
+65	val_65	2008-04-08
+65	val_65	2008-04-08
+65	val_65	2008-04-09
+65	val_65	2008-04-09
+66	val_66	2008-04-09
+66	val_66	2008-04-09
+66	val_66	2008-04-08
+66	val_66	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-08
+67	val_67	2008-04-09
+67	val_67	2008-04-09
+67	val_67	2008-04-09
+67	val_67	2008-04-09
 69	val_69	2008-04-09
-230	val_230	2008-04-09
-33	val_33	2008-04-09
-368	val_368	2008-04-09
-103	val_103	2008-04-09
-296	val_296	2008-04-09
-113	val_113	2008-04-09
-216	val_216	2008-04-09
-367	val_367	2008-04-09
-344	val_344	2008-04-09
-167	val_167	2008-04-09
-274	val_274	2008-04-09
-219	val_219	2008-04-09
-239	val_239	2008-04-09
-485	val_485	2008-04-09
-116	val_116	2008-04-09
-223	val_223	2008-04-09
-256	val_256	2008-04-09
-263	val_263	2008-04-09
+69	val_69	2008-04-09
+69	val_69	2008-04-08
+69	val_69	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
+70	val_70	2008-04-08
 70	val_70	2008-04-09
-487	val_487	2008-04-09
-480	val_480	2008-04-09
-401	val_401	2008-04-09
-288	val_288	2008-04-09
-191	val_191	2008-04-09
-5	val_5	2008-04-09
-244	val_244	2008-04-09
-438	val_438	2008-04-09
-128	val_128	2008-04-09
-467	val_467	2008-04-09
-432	val_432	2008-04-09
-202	val_202	2008-04-09
-316	val_316	2008-04-09
-229	val_229	2008-04-09
-469	val_469	2008-04-09
-463	val_463	2008-04-09
-280	val_280	2008-04-09
-2	val_2	2008-04-09
-35	val_35	2008-04-09
-283	val_283	2008-04-09
-331	val_331	2008-04-09
-235	val_235	2008-04-09
-80	val_80	2008-04-09
-44	val_44	2008-04-09
-193	val_193	2008-04-09
-321	val_321	2008-04-09
-335	val_335	2008-04-09
-104	val_104	2008-04-09
-466	val_466	2008-04-09
-366	val_366	2008-04-09
-175	val_175	2008-04-09
-403	val_403	2008-04-09
-483	val_483	2008-04-09
-53	val_53	2008-04-09
-105	val_105	2008-04-09
-257	val_257	2008-04-09
-406	val_406	2008-04-09
-409	val_409	2008-04-09
-190	val_190	2008-04-09
-406	val_406	2008-04-09
-401	val_401	2008-04-09
-114	val_114	2008-04-09
-258	val_258	2008-04-09
-90	val_90	2008-04-09
-203	val_203	2008-04-09
-262	val_262	2008-04-09
-348	val_348	2008-04-09
-424	val_424	2008-04-09
-12	val_12	2008-04-09
-396	val_396	2008-04-09
-201	val_201	2008-04-09
-217	val_217	2008-04-09
-164	val_164	2008-04-09
-431	val_431	2008-04-09
-454	val_454	2008-04-09
-478	val_478	2008-04-09
-298	val_298	2008-04-09
-125	val_125	2008-04-09
-431	val_431	2008-04-09
-164	val_164	2008-04-09
-424	val_424	2008-04-09
-187	val_187	2008-04-09
-382	val_382	2008-04-09
-5	val_5	2008-04-09
 70	val_70	2008-04-09
-397	val_397	2008-04-09
-480	val_480	2008-04-09
-291	val_291	2008-04-09
-24	val_24	2008-04-09
-351	val_351	2008-04-09
-255	val_255	2008-04-09
-104	val_104	2008-04-09
 70	val_70	2008-04-09
-163	val_163	2008-04-09
-438	val_438	2008-04-09
-119	val_119	2008-04-09
-414	val_414	2008-04-09
-200	val_200	2008-04-09
-491	val_491	2008-04-09
-237	val_237	2008-04-09
-439	val_439	2008-04-09
-360	val_360	2008-04-09
-248	val_248	2008-04-09
-479	val_479	2008-04-09
-305	val_305	2008-04-09
-417	val_417	2008-04-09
-199	val_199	2008-04-09
-444	val_444	2008-04-09
-120	val_120	2008-04-09
-429	val_429	2008-04-09
-169	val_169	2008-04-09
-443	val_443	2008-04-09
-323	val_323	2008-04-09
-325	val_325	2008-04-09
-277	val_277	2008-04-09
-230	val_230	2008-04-09
-478	val_478	2008-04-09
-178	val_178	2008-04-09
-468	val_468	2008-04-09
-310	val_310	2008-04-09
-317	val_317	2008-04-09
-333	val_333	2008-04-09
-493	val_493	2008-04-09
-460	val_460	2008-04-09
-207	val_207	2008-04-09
-249	val_249	2008-04-09
-265	val_265	2008-04-09
-480	val_480	2008-04-09
+70	val_70	2008-04-09
+70	val_70	2008-04-09
+70	val_70	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-09
+72	val_72	2008-04-08
+72	val_72	2008-04-08
+72	val_72	2008-04-08
+72	val_72	2008-04-08
+74	val_74	2008-04-08
+74	val_74	2008-04-08
+74	val_74	2008-04-09
+74	val_74	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-09
+76	val_76	2008-04-08
+76	val_76	2008-04-08
+76	val_76	2008-04-08
+76	val_76	2008-04-08
+77	val_77	2008-04-08
+77	val_77	2008-04-08
+77	val_77	2008-04-09
+77	val_77	2008-04-09
+78	val_78	2008-04-09
+78	val_78	2008-04-09
+78	val_78	2008-04-08
+78	val_78	2008-04-08
+8	val_8	2008-04-08
+8	val_8	2008-04-08
+8	val_8	2008-04-09
+8	val_8	2008-04-09
+80	val_80	2008-04-09
+80	val_80	2008-04-09
+80	val_80	2008-04-08
+80	val_80	2008-04-08
+82	val_82	2008-04-08
+82	val_82	2008-04-08
+82	val_82	2008-04-09
+82	val_82	2008-04-09
 83	val_83	2008-04-09
-136	val_136	2008-04-09
-353	val_353	2008-04-09
-172	val_172	2008-04-09
-214	val_214	2008-04-09
-462	val_462	2008-04-09
-233	val_233	2008-04-09
-406	val_406	2008-04-09
-133	val_133	2008-04-09
-175	val_175	2008-04-09
-189	val_189	2008-04-09
-454	val_454	2008-04-09
-375	val_375	2008-04-09
-401	val_401	2008-04-09
-421	val_421	2008-04-09
-407	val_407	2008-04-09
-384	val_384	2008-04-09
-256	val_256	2008-04-09
-26	val_26	2008-04-09
-134	val_134	2008-04-09
-67	val_67	2008-04-09
-384	val_384	2008-04-09
-379	val_379	2008-04-09
-18	val_18	2008-04-09
-462	val_462	2008-04-09
-492	val_492	2008-04-09
-100	val_100	2008-04-09
-298	val_298	2008-04-09
-9	val_9	2008-04-09
-341	val_341	2008-04-09
-498	val_498	2008-04-09
-146	val_146	2008-04-09
-458	val_458	2008-04-09
-362	val_362	2008-04-09
-186	val_186	2008-04-09
-285	val_285	2008-04-09
-348	val_348	2008-04-09
-167	val_167	2008-04-09
-18	val_18	2008-04-09
-273	val_273	2008-04-09
-183	val_183	2008-04-09
-281	val_281	2008-04-09
-344	val_344	2008-04-09
-97	val_97	2008-04-09
-469	val_469	2008-04-09
-315	val_315	2008-04-09
+83	val_83	2008-04-09
+83	val_83	2008-04-09
+83	val_83	2008-04-09
+83	val_83	2008-04-08
+83	val_83	2008-04-08
+83	val_83	2008-04-08
+83	val_83	2008-04-08
+84	val_84	2008-04-08
+84	val_84	2008-04-08
+84	val_84	2008-04-08
+84	val_84	2008-04-08
 84	val_84	2008-04-09
-28	val_28	2008-04-09
-37	val_37	2008-04-09
-448	val_448	2008-04-09
-152	val_152	2008-04-09
-348	val_348	2008-04-09
-307	val_307	2008-04-09
-194	val_194	2008-04-09
-414	val_414	2008-04-09
-477	val_477	2008-04-09
-222	val_222	2008-04-09
-126	val_126	2008-04-09
+84	val_84	2008-04-09
+84	val_84	2008-04-09
+84	val_84	2008-04-09
+85	val_85	2008-04-09
+85	val_85	2008-04-09
+85	val_85	2008-04-08
+85	val_85	2008-04-08
+86	val_86	2008-04-08
+86	val_86	2008-04-08
+86	val_86	2008-04-09
+86	val_86	2008-04-09
+87	val_87	2008-04-09
+87	val_87	2008-04-09
+87	val_87	2008-04-08
+87	val_87	2008-04-08
+9	val_9	2008-04-08
+9	val_9	2008-04-08
+9	val_9	2008-04-09
+9	val_9	2008-04-09
 90	val_90	2008-04-09
-169	val_169	2008-04-09
-403	val_403	2008-04-09
-400	val_400	2008-04-09
-200	val_200	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-09
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+90	val_90	2008-04-08
+92	val_92	2008-04-08
+92	val_92	2008-04-08
+92	val_92	2008-04-09
+92	val_92	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-09
+95	val_95	2008-04-08
+95	val_95	2008-04-08
+95	val_95	2008-04-08
+95	val_95	2008-04-08
+96	val_96	2008-04-08
+96	val_96	2008-04-08
+96	val_96	2008-04-09
+96	val_96	2008-04-09
+97	val_97	2008-04-09
+97	val_97	2008-04-09
 97	val_97	2008-04-09
+97	val_97	2008-04-09
+97	val_97	2008-04-08
+97	val_97	2008-04-08
+97	val_97	2008-04-08
+97	val_97	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-08
+98	val_98	2008-04-09
+98	val_98	2008-04-09
+98	val_98	2008-04-09
+98	val_98	2008-04-09
diff --git a/src/ql/src/test/results/clientpositive/rcfile_columnar.q.out b/src/ql/src/test/results/clientpositive/rcfile_columnar.q.out
index 069ccf3..2e0d98a 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_columnar.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_columnar.q.out
@@ -33,23 +33,23 @@ POSTHOOK: Lineage: columntable.key SIMPLE [(src)src.FieldSchema(name:key, type:s
 POSTHOOK: Lineage: columntable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 key	string	
 value	string	
-PREHOOK: query: SELECT columnTable.* FROM columnTable
+PREHOOK: query: SELECT columnTable.* FROM columnTable ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@columntable
-PREHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_13-18-43_999_5523344018823638089/-mr-10000
-POSTHOOK: query: SELECT columnTable.* FROM columnTable
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-39_460_3965505281089225487/-mr-10000
+POSTHOOK: query: SELECT columnTable.* FROM columnTable ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@columntable
-POSTHOOK: Output: file:/tmp/sohanjain/hive_2011-08-04_13-18-43_999_5523344018823638089/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-39_460_3965505281089225487/-mr-10000
 POSTHOOK: Lineage: columntable.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: columntable.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-238	val_238
-86	val_86
-311	val_311
-27	val_27
 165	val_165
-409	val_409
+238	val_238
 255	val_255
+27	val_27
 278	val_278
-98	val_98
+311	val_311
+409	val_409
 484	val_484
+86	val_86
+98	val_98
diff --git a/src/ql/src/test/results/clientpositive/rcfile_lazydecompress.q.out b/src/ql/src/test/results/clientpositive/rcfile_lazydecompress.q.out
index 91e1472..036be82 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_lazydecompress.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_lazydecompress.q.out
@@ -15,42 +15,42 @@ POSTHOOK: Input: default@src
 POSTHOOK: Output: default@rcfiletablelazydecompress
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238
+PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@rcfiletablelazydecompress
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-26_308_5035766417306203353/10000
-POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-51_134_7877528854806121061/-mr-10000
+POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@rcfiletablelazydecompress
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-26_308_5035766417306203353/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-51_134_7877528854806121061/-mr-10000
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-311	val_311
-409	val_409
 255	val_255
 278	val_278
+311	val_311
+409	val_409
 484	val_484
-PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400
+PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400 ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@rcfiletablelazydecompress
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-28_826_2664555248442666518/10000
-POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-55_733_2699978538520174216/-mr-10000
+POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400 ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@rcfiletablelazydecompress
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-28_826_2664555248442666518/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-39-55_733_2699978538520174216/-mr-10000
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-311	val_311
 255	val_255
 278	val_278
-PREHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key
+311	val_311
+PREHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key ORDER BY key ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@rcfiletablelazydecompress
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-31_347_4980542755724589562/10000
-POSTHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-00_330_6765063637082207691/-mr-10000
+POSTHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key ORDER BY key ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@rcfiletablelazydecompress
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-31_347_4980542755724589562/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-00_330_6765063637082207691/-mr-10000
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 255	1
@@ -72,46 +72,46 @@ POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(na
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238
+PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@rcfiletablelazydecompress
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-36_558_7043959496739147343/10000
-POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-15_287_6305137901553771236/-mr-10000
+POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@rcfiletablelazydecompress
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-36_558_7043959496739147343/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-15_287_6305137901553771236/-mr-10000
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-311	val_311
-409	val_409
 255	val_255
 278	val_278
+311	val_311
+409	val_409
 484	val_484
-PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400
+PREHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400 ORDER BY key ASC, value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@rcfiletablelazydecompress
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-39_022_510504722430321903/10000
-POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-20_180_6510344068733874225/-mr-10000
+POSTHOOK: query: SELECT key, value FROM rcfileTableLazyDecompress where key > 238 and key < 400 ORDER BY key ASC, value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@rcfiletablelazydecompress
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-39_022_510504722430321903/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-20_180_6510344068733874225/-mr-10000
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-311	val_311
 255	val_255
 278	val_278
-PREHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key
+311	val_311
+PREHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key ORDER BY key ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@rcfiletablelazydecompress
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-41_564_865533805813240026/10000
-POSTHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-24_754_4474285541614219128/-mr-10000
+POSTHOOK: query: SELECT key, count(1) FROM rcfileTableLazyDecompress where key > 238 group by key ORDER BY key ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@rcfiletablelazydecompress
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-41_564_865533805813240026/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-24_754_4474285541614219128/-mr-10000
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.key SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfiletablelazydecompress.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
diff --git a/src/ql/src/test/results/clientpositive/rcfile_union.q.out b/src/ql/src/test/results/clientpositive/rcfile_union.q.out
index e887588..1b8d5aa 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_union.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_union.q.out
@@ -24,36 +24,36 @@ POSTHOOK: Lineage: rcfile_uniontable.c SIMPLE [(src)src.FieldSchema(name:value,
 PREHOOK: query: SELECT * FROM (
 SELECT b AS cola FROM rcfile_unionTable
 UNION ALL
-SELECT c AS cola FROM rcfile_unionTable) s
+SELECT c AS cola FROM rcfile_unionTable) s ORDER BY cola ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@rcfile_uniontable
-PREHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-53_001_5783976192735479261/10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-40_356_1576089844633496083/-mr-10000
 POSTHOOK: query: SELECT * FROM (
 SELECT b AS cola FROM rcfile_unionTable
 UNION ALL
-SELECT c AS cola FROM rcfile_unionTable) s
+SELECT c AS cola FROM rcfile_unionTable) s ORDER BY cola ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@rcfile_uniontable
-POSTHOOK: Output: file:/tmp/jssarma/hive_2010-07-21_11-48-53_001_5783976192735479261/10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-40_356_1576089844633496083/-mr-10000
 POSTHOOK: Lineage: rcfile_uniontable.b SIMPLE [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: rcfile_uniontable.c SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-val_238
+165
 238
-val_86
-86
-val_311
-311
-val_27
+255
 27
-val_165
-165
-val_409
+278
+311
 409
+484
+86
+98
+val_165
+val_238
 val_255
-255
+val_27
 val_278
-278
-val_98
-98
+val_311
+val_409
 val_484
-484
+val_86
+val_98
diff --git a/src/ql/src/test/results/clientpositive/sample10.q.out b/src/ql/src/test/results/clientpositive/sample10.q.out
index 52d7fda..9ced699 100644
--- a/src/ql/src/test/results/clientpositive/sample10.q.out
+++ b/src/ql/src/test/results/clientpositive/sample10.q.out
@@ -33,10 +33,10 @@ POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(s
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 PREHOOK: query: explain extended
-select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds
+select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC
 PREHOOK: type: QUERY
 POSTHOOK: query: explain extended
-select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds
+select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
@@ -47,10 +47,11 @@ POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(s
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 ABSTRACT SYNTAX TREE:
-  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcpartbucket) (TOK_TABLEBUCKETSAMPLE 1 4 (TOK_TABLE_OR_COL key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ds)) (TOK_SELEXPR (TOK_FUNCTION count 1))) (TOK_WHERE (TOK_FUNCTION TOK_ISNOTNULL (TOK_TABLE_OR_COL ds))) (TOK_GROUPBY (TOK_TABLE_OR_COL ds))))
+  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME srcpartbucket) (TOK_TABLEBUCKETSAMPLE 1 4 (TOK_TABLE_OR_COL key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ds)) (TOK_SELEXPR (TOK_FUNCTION count 1))) (TOK_WHERE (TOK_FUNCTION TOK_ISNOTNULL (TOK_TABLE_OR_COL ds))) (TOK_GROUPBY (TOK_TABLE_OR_COL ds)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL ds)))))
 
 STAGE DEPENDENCIES:
   Stage-1 is a root stage
+  Stage-2 depends on stages: Stage-1
   Stage-0 is a root stage
 
 STAGE PLANS:
@@ -94,12 +95,12 @@ STAGE PLANS:
                           type: bigint
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=11/000000_0 [srcpartbucket]
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=12/000000_0 [srcpartbucket]
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=11/000000_0 [srcpartbucket]
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=12/000000_0 [srcpartbucket]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=11/000000_0 [srcpartbucket]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=12/000000_0 [srcpartbucket]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=11/000000_0 [srcpartbucket]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=12/000000_0 [srcpartbucket]
       Path -> Partition:
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=11/000000_0 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=11/000000_0 
           Partition
             base file name: 000000_0
             input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -114,7 +115,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-              location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=11
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=11
               name default.srcpartbucket
               numFiles 4
               numPartitions 4
@@ -125,7 +126,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               totalSize 687
-              transient_lastDdlTime 1316196024
+              transient_lastDdlTime 1327549254
             serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
           
               input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -137,7 +138,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-                location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket
                 name default.srcpartbucket
                 numFiles 16
                 numPartitions 4
@@ -148,11 +149,11 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                 totalSize 2748
-                transient_lastDdlTime 1316196025
+                transient_lastDdlTime 1327549254
               serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               name: default.srcpartbucket
             name: default.srcpartbucket
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=12/000000_0 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=12/000000_0 
           Partition
             base file name: 000000_0
             input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -167,7 +168,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-              location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=12
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-08/hr=12
               name default.srcpartbucket
               numFiles 4
               numPartitions 4
@@ -178,7 +179,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               totalSize 687
-              transient_lastDdlTime 1316196025
+              transient_lastDdlTime 1327549254
             serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
           
               input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -190,7 +191,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-                location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket
                 name default.srcpartbucket
                 numFiles 16
                 numPartitions 4
@@ -201,11 +202,11 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                 totalSize 2748
-                transient_lastDdlTime 1316196025
+                transient_lastDdlTime 1327549254
               serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               name: default.srcpartbucket
             name: default.srcpartbucket
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=11/000000_0 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=11/000000_0 
           Partition
             base file name: 000000_0
             input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -220,7 +221,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-              location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=11
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=11
               name default.srcpartbucket
               numFiles 4
               numPartitions 4
@@ -231,7 +232,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               totalSize 687
-              transient_lastDdlTime 1316196025
+              transient_lastDdlTime 1327549254
             serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
           
               input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -243,7 +244,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-                location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket
                 name default.srcpartbucket
                 numFiles 16
                 numPartitions 4
@@ -254,11 +255,11 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                 totalSize 2748
-                transient_lastDdlTime 1316196025
+                transient_lastDdlTime 1327549254
               serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               name: default.srcpartbucket
             name: default.srcpartbucket
-        pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=12/000000_0 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=12/000000_0 
           Partition
             base file name: 000000_0
             input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -273,7 +274,7 @@ STAGE PLANS:
               columns.types string:string
               file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-              location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=12
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket/ds=2008-04-09/hr=12
               name default.srcpartbucket
               numFiles 4
               numPartitions 4
@@ -284,7 +285,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               totalSize 687
-              transient_lastDdlTime 1316196025
+              transient_lastDdlTime 1327549254
             serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
           
               input format: org.apache.hadoop.hive.ql.io.RCFileInputFormat
@@ -296,7 +297,7 @@ STAGE PLANS:
                 columns.types string:string
                 file.inputformat org.apache.hadoop.hive.ql.io.RCFileInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.RCFileOutputFormat
-                location pfile:/data/users/sdong/www/open-source-hive-fix/build/ql/test/data/warehouse/srcpartbucket
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/srcpartbucket
                 name default.srcpartbucket
                 numFiles 16
                 numPartitions 4
@@ -307,7 +308,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
                 totalSize 2748
-                transient_lastDdlTime 1316196025
+                transient_lastDdlTime 1327549254
               serde: org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe
               name: default.srcpartbucket
             name: default.srcpartbucket
@@ -331,40 +332,93 @@ STAGE PLANS:
             File Output Operator
               compressed: false
               GlobalTableId: 0
-              directory: file:/tmp/sdong/hive_2011-09-16_11-00-25_849_8706667665193550586/-ext-10001
+              directory: file:/tmp/cloudera/hive_2012-01-25_19-40-55_302_971079088080313784/-mr-10002
               NumFilesPerFileSink: 1
-              Stats Publishing Key Prefix: file:/tmp/sdong/hive_2011-09-16_11-00-25_849_8706667665193550586/-ext-10001/
               table:
-                  input format: org.apache.hadoop.mapred.TextInputFormat
-                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                   properties:
                     columns _col0,_col1
-                    columns.types string:bigint
+                    columns.types string,bigint
                     escape.delim \
-                    serialization.format 1
               TotalFiles: 1
               GatherStats: false
               MultiFileSpray: false
 
+  Stage: Stage-2
+    Map Reduce
+      Alias -> Map Operator Tree:
+        file:/tmp/cloudera/hive_2012-01-25_19-40-55_302_971079088080313784/-mr-10002 
+            Reduce Output Operator
+              key expressions:
+                    expr: _col0
+                    type: string
+              sort order: +
+              tag: -1
+              value expressions:
+                    expr: _col0
+                    type: string
+                    expr: _col1
+                    type: bigint
+      Needs Tagging: false
+      Path -> Alias:
+        file:/tmp/cloudera/hive_2012-01-25_19-40-55_302_971079088080313784/-mr-10002 [file:/tmp/cloudera/hive_2012-01-25_19-40-55_302_971079088080313784/-mr-10002]
+      Path -> Partition:
+        file:/tmp/cloudera/hive_2012-01-25_19-40-55_302_971079088080313784/-mr-10002 
+          Partition
+            base file name: -mr-10002
+            input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
+            properties:
+              columns _col0,_col1
+              columns.types string,bigint
+              escape.delim \
+          
+              input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+              output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
+              properties:
+                columns _col0,_col1
+                columns.types string,bigint
+                escape.delim \
+      Reduce Operator Tree:
+        Extract
+          File Output Operator
+            compressed: false
+            GlobalTableId: 0
+            directory: file:/tmp/cloudera/hive_2012-01-25_19-40-55_302_971079088080313784/-ext-10001
+            NumFilesPerFileSink: 1
+            Stats Publishing Key Prefix: file:/tmp/cloudera/hive_2012-01-25_19-40-55_302_971079088080313784/-ext-10001/
+            table:
+                input format: org.apache.hadoop.mapred.TextInputFormat
+                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+                properties:
+                  columns _col0,_col1
+                  columns.types string:bigint
+                  escape.delim \
+                  serialization.format 1
+            TotalFiles: 1
+            GatherStats: false
+            MultiFileSpray: false
+
   Stage: Stage-0
     Fetch Operator
       limit: -1
 
 
-PREHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds
+PREHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
-PREHOOK: Output: file:/tmp/sdong/hive_2011-09-16_11-00-26_803_7212610976402183066/-mr-10000
-POSTHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-55_709_8729283615375736169/-mr-10000
+POSTHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 4 on key) where ds is not null group by ds ORDER BY ds ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-09-16_11-00-26_803_7212610976402183066/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-40-55_709_8729283615375736169/-mr-10000
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -375,20 +429,20 @@ POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(src
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 2008-04-08	10
 2008-04-09	10
-PREHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds
+PREHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds ORDER BY ds ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
-PREHOOK: Output: file:/tmp/sdong/hive_2011-09-16_11-00-31_692_1045422554806912507/-mr-10000
-POSTHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-06_040_772922957041916480/-mr-10000
+POSTHOOK: query: select ds, count(1) from srcpartbucket tablesample (bucket 1 out of 2 on key) where ds is not null group by ds ORDER BY ds ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-09-16_11-00-31_692_1045422554806912507/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-06_040_772922957041916480/-mr-10000
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -399,20 +453,20 @@ POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(src
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 2008-04-08	12
 2008-04-09	12
-PREHOOK: query: select * from srcpartbucket where ds is not null
+PREHOOK: query: select * from srcpartbucket where ds is not null ORDER BY key ASC, value ASC, ds ASC, hr ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
 PREHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
-PREHOOK: Output: file:/tmp/sdong/hive_2011-09-16_11-00-37_905_6308293676974717835/-mr-10000
-POSTHOOK: query: select * from srcpartbucket where ds is not null
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-16_803_2854269858957500358/-mr-10000
+POSTHOOK: query: select * from srcpartbucket where ds is not null ORDER BY key ASC, value ASC, ds ASC, hr ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-08/hr=12
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=11
 POSTHOOK: Input: default@srcpartbucket@ds=2008-04-09/hr=12
-POSTHOOK: Output: file:/tmp/sdong/hive_2011-09-16_11-00-37_905_6308293676974717835/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-16_803_2854269858957500358/-mr-10000
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=11).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-08,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
@@ -422,42 +476,42 @@ POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=11).value SIMPLE [(s
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).key SIMPLE [(srcpart)srcpart.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: srcpartbucket PARTITION(ds=2008-04-09,hr=12).value SIMPLE [(srcpart)srcpart.FieldSchema(name:value, type:string, comment:default), ]
 0	val_0	2008-04-08	11
-4	val_4	2008-04-08	11
-8	val_8	2008-04-08	11
 0	val_0	2008-04-08	11
 0	val_0	2008-04-08	11
-5	val_5	2008-04-08	11
-5	val_5	2008-04-08	11
-2	val_2	2008-04-08	11
-5	val_5	2008-04-08	11
-9	val_9	2008-04-08	11
 0	val_0	2008-04-08	12
-4	val_4	2008-04-08	12
-8	val_8	2008-04-08	12
 0	val_0	2008-04-08	12
 0	val_0	2008-04-08	12
-5	val_5	2008-04-08	12
-5	val_5	2008-04-08	12
-2	val_2	2008-04-08	12
-5	val_5	2008-04-08	12
-9	val_9	2008-04-08	12
 0	val_0	2008-04-09	11
-4	val_4	2008-04-09	11
-8	val_8	2008-04-09	11
 0	val_0	2008-04-09	11
 0	val_0	2008-04-09	11
-5	val_5	2008-04-09	11
-5	val_5	2008-04-09	11
-2	val_2	2008-04-09	11
-5	val_5	2008-04-09	11
-9	val_9	2008-04-09	11
 0	val_0	2008-04-09	12
-4	val_4	2008-04-09	12
-8	val_8	2008-04-09	12
 0	val_0	2008-04-09	12
 0	val_0	2008-04-09	12
+2	val_2	2008-04-08	11
+2	val_2	2008-04-08	12
+2	val_2	2008-04-09	11
+2	val_2	2008-04-09	12
+4	val_4	2008-04-08	11
+4	val_4	2008-04-08	12
+4	val_4	2008-04-09	11
+4	val_4	2008-04-09	12
+5	val_5	2008-04-08	11
+5	val_5	2008-04-08	11
+5	val_5	2008-04-08	11
+5	val_5	2008-04-08	12
+5	val_5	2008-04-08	12
+5	val_5	2008-04-08	12
+5	val_5	2008-04-09	11
+5	val_5	2008-04-09	11
+5	val_5	2008-04-09	11
 5	val_5	2008-04-09	12
 5	val_5	2008-04-09	12
-2	val_2	2008-04-09	12
 5	val_5	2008-04-09	12
+8	val_8	2008-04-08	11
+8	val_8	2008-04-08	12
+8	val_8	2008-04-09	11
+8	val_8	2008-04-09	12
+9	val_9	2008-04-08	11
+9	val_9	2008-04-08	12
+9	val_9	2008-04-09	11
 9	val_9	2008-04-09	12
diff --git a/src/ql/src/test/results/clientpositive/udf_sentences.q.out b/src/ql/src/test/results/clientpositive/udf_sentences.q.out
index bb0f166..c0555c4 100644
--- a/src/ql/src/test/results/clientpositive/udf_sentences.q.out
+++ b/src/ql/src/test/results/clientpositive/udf_sentences.q.out
@@ -31,66 +31,66 @@ POSTHOOK: Input: default@sent_tmp
 POSTHOOK: Output: default@sent_tmp2
 POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
-PREHOOK: query: SELECT hex(val) FROM sent_tmp2
+PREHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@sent_tmp2
-PREHOOK: Output: file:/tmp/njain/hive_2010-08-17_01-14-11_515_4137923996878514227/-mr-10000
-POSTHOOK: query: SELECT hex(val) FROM sent_tmp2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-35_618_1273582948036927883/-mr-10000
+POSTHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@sent_tmp2
-POSTHOOK: Output: file:/tmp/njain/hive_2010-08-17_01-14-11_515_4137923996878514227/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-35_618_1273582948036927883/-mr-10000
 POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
 48697665
-657374
-756E
-657863656C6C656E74
-6F7574696C
-706F7572
-6C6573
-72657175C3AA746573
+48697665
+554446
+6175746F6D617469717565
+6175746F6D617469717565
+6365
+636F6E667573696F6E
+6465
 6465
+646573
 646F6E6EC3A96573
+646F6E6EC3A96573
+656E636F7265
+657374
+657374
 6574
-706575742DC3AA747265
-706C7573
-706F6C7976616C656E74
-717565
+6574
+6574
+657863656C6C656E74
+657863656C6C656E74
+666F6E6374696F6E6E65
+666F726DC3A96573
 6C61
-74726164756374696F6E
-6175746F6D617469717565
 6C61
-706F6E6374756174696F6E
-6D756C7469706C6573
-646573
-70687261736573
+6C61
+6C6573
+6C6573
 6D616C
-666F726DC3A96573
-636F6E667573696F6E
-6574
-706F757274616E74
-6365
-554446
-666F6E6374696F6E6E65
-656E636F7265
-48697665
-657374
-756E
-657863656C6C656E74
+6D756C7469706C6573
 6F7574696C
-706F7572
-6C6573
-72657175C3AA746573
-6465
-646F6E6EC3A96573
-6574
+6F7574696C
+706575742DC3AA747265
 706575742DC3AA747265
+70687261736573
+706C7573
 706C7573
 706F6C7976616C656E74
+706F6C7976616C656E74
+706F6E6374756174696F6E
+706F7572
+706F7572
+706F757274616E74
 717565
-6C61
+717565
+72657175C3AA746573
+72657175C3AA746573
 74726164756374696F6E
-6175746F6D617469717565
+74726164756374696F6E
+756E
+756E
 PREHOOK: query: DROP TABLE sent_tmp
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@sent_tmp
@@ -152,57 +152,57 @@ POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
 POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
-PREHOOK: query: SELECT hex(val) FROM sent_tmp2
+PREHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@sent_tmp2
-PREHOOK: Output: file:/tmp/njain/hive_2010-08-17_01-14-24_219_4337186937954414417/-mr-10000
-POSTHOOK: query: SELECT hex(val) FROM sent_tmp2
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-53_241_3192491340083625527/-mr-10000
+POSTHOOK: query: SELECT hex(val) AS value FROM sent_tmp2 ORDER BY value ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@sent_tmp2
-POSTHOOK: Output: file:/tmp/njain/hive_2010-08-17_01-14-24_219_4337186937954414417/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-53_241_3192491340083625527/-mr-10000
 POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
 POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
-48697665
-697374
-65696E
-61757367657A656963686E65746573
-5765726B7A657567
-66C3BC72
-646965
 41626672616765
-766F6E
 446174656E
-756E64
-7669656C6C6569636874
-7669656C7365697469676572
-616C73
-646965
-6D61736368696E656C6C65
-C39C6265727365747A756E67
+48697665
+496E74657270756E6B74696F6E
 4D756C7469706C65
-7363686C65636874
-676562696C646574656E
 53C3A4747A65
+554446
 5665727765636873656C756E67
-496E74657270756E6B74696F6E
-756E64
-646F6368
-697374
+5765726B7A657567
+616C73
+61757367657A656963686E65746573
+646965
+646965
 6469657365
-554446
+646F6368
+65696E
 66756E6B74696F6E69657274
+66C3BC72
+676562696C646574656E
 696D6D6572
+697374
+697374
+6D61736368696E656C6C65
 6E6F6368
-PREHOOK: query: SELECT sentences("Hive is an excellent tool for data querying; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") FROM src LIMIT 1
+7363686C65636874
+756E64
+756E64
+7669656C6C6569636874
+7669656C7365697469676572
+766F6E
+C39C6265727365747A756E67
+PREHOOK: query: SELECT sentences("Hive is an excellent tool for data querying; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") AS value FROM src ORDER BY value ASC LIMIT 1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
-PREHOOK: Output: file:/tmp/njain/hive_2010-08-17_01-14-27_435_7157960617048129310/-mr-10000
-POSTHOOK: query: SELECT sentences("Hive is an excellent tool for data querying; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") FROM src LIMIT 1
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-57_775_2909411056882058676/-mr-10000
+POSTHOOK: query: SELECT sentences("Hive is an excellent tool for data querying; and perhaps more versatile than machine translation!! Multiple, ill-formed sentences...confounding punctuation--and yet this UDF still works!!!!") AS value FROM src ORDER BY value ASC LIMIT 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
-POSTHOOK: Output: file:/tmp/njain/hive_2010-08-17_01-14-27_435_7157960617048129310/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-41-57_775_2909411056882058676/-mr-10000
 POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp.val SCRIPT []
 POSTHOOK: Lineage: sent_tmp2.val SCRIPT [(sent_tmp)sent_tmp.FieldSchema(name:val, type:array<string>, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/union24.q.out b/src/ql/src/test/results/clientpositive/union24.q.out
index 96f1d20..4bd88e8 100644
--- a/src/ql/src/test/results/clientpositive/union24.q.out
+++ b/src/ql/src/test/results/clientpositive/union24.q.out
@@ -36,7 +36,7 @@ select s.key, s.count from (
   union all
   select key, count(1) as count from src5 where key < 10 group by key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 PREHOOK: type: QUERY
 POSTHOOK: query: explain extended
 select s.key, s.count from (
@@ -48,10 +48,10 @@ select s.key, s.count from (
   union all
   select key, count(1) as count from src5 where key < 10 group by key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 POSTHOOK: type: QUERY
 ABSTRACT SYNTAX TREE:
-  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_UNION (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src2))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src3))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src4))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src5))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION count 1) count)) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)) (TOK_GROUPBY (TOK_TABLE_OR_COL key))))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) count))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) key)))))
+  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_UNION (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src2))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src3))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src4))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src5))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_FUNCTION count 1) count)) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)) (TOK_GROUPBY (TOK_TABLE_OR_COL key))))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) count))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) count)))))
 
 STAGE DEPENDENCIES:
   Stage-1 is a root stage
@@ -84,7 +84,7 @@ STAGE PLANS:
                 File Output Operator
                   compressed: false
                   GlobalTableId: 0
-                  directory: file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10002
+                  directory: file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10002
                   NumFilesPerFileSink: 1
                   table:
                       input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -98,9 +98,9 @@ STAGE PLANS:
                   MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4 [null-subquery1-subquery2:s-subquery1-subquery2:src4]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4 [null-subquery1-subquery2:s-subquery1-subquery2:src4]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4 
           Partition
             base file name: src4
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -111,7 +111,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4
               name default.src4
               numFiles 1
               numPartitions 0
@@ -121,7 +121,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309936
+              transient_lastDdlTime 1327549340
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -132,7 +132,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4
                 name default.src4
                 numFiles 1
                 numPartitions 0
@@ -142,7 +142,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309936
+                transient_lastDdlTime 1327549340
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src4
             name: default.src4
@@ -150,7 +150,7 @@ STAGE PLANS:
   Stage: Stage-2
     Map Reduce
       Alias -> Map Operator Tree:
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10002 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10002 
           Union
             Select Operator
               expressions:
@@ -163,14 +163,16 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
                       type: string
                       expr: _col1
                       type: bigint
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10003 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10003 
           Union
             Select Operator
               expressions:
@@ -183,14 +185,16 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
                       type: string
                       expr: _col1
                       type: bigint
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10004 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10004 
           Union
             Select Operator
               expressions:
@@ -203,14 +207,16 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
                       type: string
                       expr: _col1
                       type: bigint
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10005 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10005 
           Union
             Select Operator
               expressions:
@@ -223,7 +229,9 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
@@ -232,12 +240,12 @@ STAGE PLANS:
                       type: bigint
       Needs Tagging: false
       Path -> Alias:
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10002 [file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10002]
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10003 [file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10003]
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10004 [file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10004]
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10005 [file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10005]
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10002 [file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10002]
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10003 [file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10003]
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10004 [file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10004]
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10005 [file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10005]
       Path -> Partition:
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10002 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10002 
           Partition
             base file name: -mr-10002
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -253,7 +261,7 @@ STAGE PLANS:
                 columns _col0,_col1
                 columns.types string,bigint
                 escape.delim \
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10003 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10003 
           Partition
             base file name: -mr-10003
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -269,7 +277,7 @@ STAGE PLANS:
                 columns _col0,_col1
                 columns.types string,bigint
                 escape.delim \
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10004 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10004 
           Partition
             base file name: -mr-10004
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -285,7 +293,7 @@ STAGE PLANS:
                 columns _col0,_col1
                 columns.types string,bigint
                 escape.delim \
-        file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10005 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10005 
           Partition
             base file name: -mr-10005
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -306,9 +314,9 @@ STAGE PLANS:
           File Output Operator
             compressed: false
             GlobalTableId: 0
-            directory: file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-ext-10001
+            directory: file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-ext-10001
             NumFilesPerFileSink: 1
-            Stats Publishing Key Prefix: file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-ext-10001/
+            Stats Publishing Key Prefix: file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-ext-10001/
             table:
                 input format: org.apache.hadoop.mapred.TextInputFormat
                 output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -361,9 +369,9 @@ STAGE PLANS:
                           type: bigint
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5 [null-subquery2:s-subquery2:src5]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5 [null-subquery2:s-subquery2:src5]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5 
           Partition
             base file name: src5
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -374,7 +382,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5
               name default.src5
               numFiles 1
               numPartitions 0
@@ -384,7 +392,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309941
+              transient_lastDdlTime 1327549346
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -395,7 +403,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5
                 name default.src5
                 numFiles 1
                 numPartitions 0
@@ -405,7 +413,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309941
+                transient_lastDdlTime 1327549346
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src5
             name: default.src5
@@ -429,7 +437,7 @@ STAGE PLANS:
             File Output Operator
               compressed: false
               GlobalTableId: 0
-              directory: file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10003
+              directory: file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10003
               NumFilesPerFileSink: 1
               table:
                   input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -464,7 +472,7 @@ STAGE PLANS:
                 File Output Operator
                   compressed: false
                   GlobalTableId: 0
-                  directory: file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10004
+                  directory: file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10004
                   NumFilesPerFileSink: 1
                   table:
                       input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -478,9 +486,9 @@ STAGE PLANS:
                   MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3 [null-subquery1-subquery1-subquery2:s-subquery1-subquery1-subquery2:src3]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3 [null-subquery1-subquery1-subquery2:s-subquery1-subquery1-subquery2:src3]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3 
           Partition
             base file name: src3
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -491,7 +499,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3
               name default.src3
               numFiles 1
               numPartitions 0
@@ -501,7 +509,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309930
+              transient_lastDdlTime 1327549334
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -512,7 +520,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3
                 name default.src3
                 numFiles 1
                 numPartitions 0
@@ -522,7 +530,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309930
+                transient_lastDdlTime 1327549334
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src3
             name: default.src3
@@ -549,7 +557,7 @@ STAGE PLANS:
                 File Output Operator
                   compressed: false
                   GlobalTableId: 0
-                  directory: file:/tmp/njain/hive_2011-12-07_18-05-41_298_8482350737870409263/-mr-10005
+                  directory: file:/tmp/cloudera/hive_2012-01-25_19-42-26_850_695471823298988909/-mr-10005
                   NumFilesPerFileSink: 1
                   table:
                       input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -563,9 +571,9 @@ STAGE PLANS:
                   MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2 [null-subquery1-subquery1-subquery1:s-subquery1-subquery1-subquery1:src2]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2 [null-subquery1-subquery1-subquery1:s-subquery1-subquery1-subquery1:src2]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2 
           Partition
             base file name: src2
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -576,7 +584,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2
               name default.src2
               numFiles 1
               numPartitions 0
@@ -586,7 +594,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309926
+              transient_lastDdlTime 1327549328
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -597,7 +605,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2
                 name default.src2
                 numFiles 1
                 numPartitions 0
@@ -607,7 +615,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309926
+                transient_lastDdlTime 1327549328
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src2
             name: default.src2
@@ -626,13 +634,13 @@ PREHOOK: query: select s.key, s.count from (
   union all
   select key, count(1) as count from src5 where key < 10 group by key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src2
 PREHOOK: Input: default@src3
 PREHOOK: Input: default@src4
 PREHOOK: Input: default@src5
-PREHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-05-41_450_3758431232103877540/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-42-27_003_6197776290194972006/-mr-10000
 POSTHOOK: query: select s.key, s.count from (
   select key, count from src2  where key < 10
   union all
@@ -642,17 +650,17 @@ POSTHOOK: query: select s.key, s.count from (
   union all
   select key, count(1) as count from src5 where key < 10 group by key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src2
 POSTHOOK: Input: default@src3
 POSTHOOK: Input: default@src4
 POSTHOOK: Input: default@src5
-POSTHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-05-41_450_3758431232103877540/-mr-10000
-0	3
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-42-27_003_6197776290194972006/-mr-10000
 0	1
 0	3
 0	3
+0	3
 2	1
 2	1
 2	1
@@ -661,9 +669,9 @@ POSTHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-05-41_450_37584312321038775
 4	1
 4	1
 4	1
+5	1
 5	3
 5	3
-5	1
 5	3
 8	1
 8	1
@@ -681,7 +689,7 @@ select s.key, s.count from (
   union all
   select a.key as key, b.count as count from src4 a join src5 b on a.key=b.key where a.key < 10
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 PREHOOK: type: QUERY
 POSTHOOK: query: explain extended
 select s.key, s.count from (
@@ -691,10 +699,10 @@ select s.key, s.count from (
   union all
   select a.key as key, b.count as count from src4 a join src5 b on a.key=b.key where a.key < 10
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 POSTHOOK: type: QUERY
 ABSTRACT SYNTAX TREE:
-  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src2))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src3))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src4) a) (TOK_TABREF (TOK_TABNAME src5) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key) key) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) count) count)) (TOK_WHERE (< (. (TOK_TABLE_OR_COL a) key) 10))))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) count))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) key)))))
+  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src2))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src3))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src4) a) (TOK_TABREF (TOK_TABNAME src5) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key) key) (TOK_SELEXPR (. (TOK_TABLE_OR_COL b) count) count)) (TOK_WHERE (< (. (TOK_TABLE_OR_COL a) key) 10))))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) count))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) count)))))
 
 STAGE DEPENDENCIES:
   Stage-1 is a root stage
@@ -751,10 +759,10 @@ STAGE PLANS:
                       type: bigint
       Needs Tagging: true
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4 [null-subquery2:s-subquery2:a]
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5 [null-subquery2:s-subquery2:b]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4 [null-subquery2:s-subquery2:a]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5 [null-subquery2:s-subquery2:b]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4 
           Partition
             base file name: src4
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -765,7 +773,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4
               name default.src4
               numFiles 1
               numPartitions 0
@@ -775,7 +783,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309936
+              transient_lastDdlTime 1327549340
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -786,7 +794,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4
                 name default.src4
                 numFiles 1
                 numPartitions 0
@@ -796,11 +804,11 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309936
+                transient_lastDdlTime 1327549340
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src4
             name: default.src4
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5 
           Partition
             base file name: src5
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -811,7 +819,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5
               name default.src5
               numFiles 1
               numPartitions 0
@@ -821,7 +829,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309941
+              transient_lastDdlTime 1327549346
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -832,7 +840,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5
                 name default.src5
                 numFiles 1
                 numPartitions 0
@@ -842,7 +850,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309941
+                transient_lastDdlTime 1327549346
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src5
             name: default.src5
@@ -865,7 +873,7 @@ STAGE PLANS:
             File Output Operator
               compressed: false
               GlobalTableId: 0
-              directory: file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10002
+              directory: file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10002
               NumFilesPerFileSink: 1
               table:
                   input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -881,7 +889,7 @@ STAGE PLANS:
   Stage: Stage-2
     Map Reduce
       Alias -> Map Operator Tree:
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10002 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10002 
           Union
             Select Operator
               expressions:
@@ -894,14 +902,16 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
                       type: string
                       expr: _col1
                       type: bigint
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10003 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10003 
           Union
             Select Operator
               expressions:
@@ -914,14 +924,16 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
                       type: string
                       expr: _col1
                       type: bigint
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10004 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10004 
           Union
             Select Operator
               expressions:
@@ -934,7 +946,9 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
@@ -943,11 +957,11 @@ STAGE PLANS:
                       type: bigint
       Needs Tagging: false
       Path -> Alias:
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10002 [file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10002]
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10003 [file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10003]
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10004 [file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10004]
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10002 [file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10002]
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10003 [file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10003]
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10004 [file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10004]
       Path -> Partition:
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10002 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10002 
           Partition
             base file name: -mr-10002
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -963,7 +977,7 @@ STAGE PLANS:
                 columns _col0,_col1
                 columns.types string,bigint
                 escape.delim \
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10003 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10003 
           Partition
             base file name: -mr-10003
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -979,7 +993,7 @@ STAGE PLANS:
                 columns _col0,_col1
                 columns.types string,bigint
                 escape.delim \
-        file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10004 
+        file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10004 
           Partition
             base file name: -mr-10004
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1000,9 +1014,9 @@ STAGE PLANS:
           File Output Operator
             compressed: false
             GlobalTableId: 0
-            directory: file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-ext-10001
+            directory: file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-ext-10001
             NumFilesPerFileSink: 1
-            Stats Publishing Key Prefix: file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-ext-10001/
+            Stats Publishing Key Prefix: file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-ext-10001/
             table:
                 input format: org.apache.hadoop.mapred.TextInputFormat
                 output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -1037,7 +1051,7 @@ STAGE PLANS:
                 File Output Operator
                   compressed: false
                   GlobalTableId: 0
-                  directory: file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10003
+                  directory: file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10003
                   NumFilesPerFileSink: 1
                   table:
                       input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1051,9 +1065,9 @@ STAGE PLANS:
                   MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2 [null-subquery1-subquery1:s-subquery1-subquery1:src2]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2 [null-subquery1-subquery1:s-subquery1-subquery1:src2]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2 
           Partition
             base file name: src2
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1064,7 +1078,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2
               name default.src2
               numFiles 1
               numPartitions 0
@@ -1074,7 +1088,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309926
+              transient_lastDdlTime 1327549328
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1085,7 +1099,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2
                 name default.src2
                 numFiles 1
                 numPartitions 0
@@ -1095,7 +1109,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309926
+                transient_lastDdlTime 1327549328
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src2
             name: default.src2
@@ -1122,7 +1136,7 @@ STAGE PLANS:
                 File Output Operator
                   compressed: false
                   GlobalTableId: 0
-                  directory: file:/tmp/njain/hive_2011-12-07_18-05-57_369_5480373477963759883/-mr-10004
+                  directory: file:/tmp/cloudera/hive_2012-01-25_19-42-50_031_7319785536524612987/-mr-10004
                   NumFilesPerFileSink: 1
                   table:
                       input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1136,9 +1150,9 @@ STAGE PLANS:
                   MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3 [null-subquery1-subquery2:s-subquery1-subquery2:src3]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3 [null-subquery1-subquery2:s-subquery1-subquery2:src3]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3 
           Partition
             base file name: src3
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1149,7 +1163,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3
               name default.src3
               numFiles 1
               numPartitions 0
@@ -1159,7 +1173,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309930
+              transient_lastDdlTime 1327549334
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1170,7 +1184,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3
                 name default.src3
                 numFiles 1
                 numPartitions 0
@@ -1180,7 +1194,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309930
+                transient_lastDdlTime 1327549334
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src3
             name: default.src3
@@ -1197,13 +1211,13 @@ PREHOOK: query: select s.key, s.count from (
   union all
   select a.key as key, b.count as count from src4 a join src5 b on a.key=b.key where a.key < 10
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src2
 PREHOOK: Input: default@src3
 PREHOOK: Input: default@src4
 PREHOOK: Input: default@src5
-PREHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-05-57_532_8796691937141834686/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-42-50_154_1744600115668304051/-mr-10000
 POSTHOOK: query: select s.key, s.count from (
   select key, count from src2  where key < 10
   union all
@@ -1211,13 +1225,13 @@ POSTHOOK: query: select s.key, s.count from (
   union all
   select a.key as key, b.count as count from src4 a join src5 b on a.key=b.key where a.key < 10
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src2
 POSTHOOK: Input: default@src3
 POSTHOOK: Input: default@src4
 POSTHOOK: Input: default@src5
-POSTHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-05-57_532_8796691937141834686/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-42-50_154_1744600115668304051/-mr-10000
 0	3
 0	3
 0	3
@@ -1244,7 +1258,7 @@ select s.key, s.count from (
   union all
   select a.key as key, count(1) as count from src4 a join src5 b on a.key=b.key where a.key < 10 group by a.key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 PREHOOK: type: QUERY
 POSTHOOK: query: explain extended
 select s.key, s.count from (
@@ -1254,10 +1268,10 @@ select s.key, s.count from (
   union all
   select a.key as key, count(1) as count from src4 a join src5 b on a.key=b.key where a.key < 10 group by a.key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 POSTHOOK: type: QUERY
 ABSTRACT SYNTAX TREE:
-  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src2))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src3))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src4) a) (TOK_TABREF (TOK_TABNAME src5) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key) key) (TOK_SELEXPR (TOK_FUNCTION count 1) count)) (TOK_WHERE (< (. (TOK_TABLE_OR_COL a) key) 10)) (TOK_GROUPBY (. (TOK_TABLE_OR_COL a) key))))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) count))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) key)))))
+  (TOK_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_UNION (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src2))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10)))) (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src3))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL key)) (TOK_SELEXPR (TOK_TABLE_OR_COL count))) (TOK_WHERE (< (TOK_TABLE_OR_COL key) 10))))) (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_TABREF (TOK_TABNAME src4) a) (TOK_TABREF (TOK_TABNAME src5) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL a) key) key) (TOK_SELEXPR (TOK_FUNCTION count 1) count)) (TOK_WHERE (< (. (TOK_TABLE_OR_COL a) key) 10)) (TOK_GROUPBY (. (TOK_TABLE_OR_COL a) key))))) s)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) key)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL s) count))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) key)) (TOK_TABSORTCOLNAMEASC (. (TOK_TABLE_OR_COL s) count)))))
 
 STAGE DEPENDENCIES:
   Stage-1 is a root stage
@@ -1312,10 +1326,10 @@ STAGE PLANS:
                 tag: 1
       Needs Tagging: true
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4 [null-subquery2:s-subquery2:a]
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5 [null-subquery2:s-subquery2:b]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4 [null-subquery2:s-subquery2:a]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5 [null-subquery2:s-subquery2:b]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4 
           Partition
             base file name: src4
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1326,7 +1340,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4
               name default.src4
               numFiles 1
               numPartitions 0
@@ -1336,7 +1350,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309936
+              transient_lastDdlTime 1327549340
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1347,7 +1361,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src4
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src4
                 name default.src4
                 numFiles 1
                 numPartitions 0
@@ -1357,11 +1371,11 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309936
+                transient_lastDdlTime 1327549340
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src4
             name: default.src4
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5 
           Partition
             base file name: src5
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1372,7 +1386,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5
               name default.src5
               numFiles 1
               numPartitions 0
@@ -1382,7 +1396,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309941
+              transient_lastDdlTime 1327549346
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1393,7 +1407,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src5
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src5
                 name default.src5
                 numFiles 1
                 numPartitions 0
@@ -1403,7 +1417,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309941
+                transient_lastDdlTime 1327549346
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src5
             name: default.src5
@@ -1433,7 +1447,7 @@ STAGE PLANS:
               File Output Operator
                 compressed: false
                 GlobalTableId: 0
-                directory: file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10002
+                directory: file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10002
                 NumFilesPerFileSink: 1
                 table:
                     input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1449,7 +1463,7 @@ STAGE PLANS:
   Stage: Stage-2
     Map Reduce
       Alias -> Map Operator Tree:
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10002 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10002 
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1464,9 +1478,9 @@ STAGE PLANS:
                     type: bigint
       Needs Tagging: false
       Path -> Alias:
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10002 [file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10002]
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10002 [file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10002]
       Path -> Partition:
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10002 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10002 
           Partition
             base file name: -mr-10002
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1502,7 +1516,7 @@ STAGE PLANS:
             File Output Operator
               compressed: false
               GlobalTableId: 0
-              directory: file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10003
+              directory: file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10003
               NumFilesPerFileSink: 1
               table:
                   input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1518,7 +1532,7 @@ STAGE PLANS:
   Stage: Stage-3
     Map Reduce
       Alias -> Map Operator Tree:
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10003 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10003 
           Union
             Select Operator
               expressions:
@@ -1531,14 +1545,16 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
                       type: string
                       expr: _col1
                       type: bigint
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10004 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10004 
           Union
             Select Operator
               expressions:
@@ -1551,14 +1567,16 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
                       type: string
                       expr: _col1
                       type: bigint
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10005 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10005 
           Union
             Select Operator
               expressions:
@@ -1571,7 +1589,9 @@ STAGE PLANS:
                 key expressions:
                       expr: _col0
                       type: string
-                sort order: +
+                      expr: _col1
+                      type: bigint
+                sort order: ++
                 tag: -1
                 value expressions:
                       expr: _col0
@@ -1580,11 +1600,11 @@ STAGE PLANS:
                       type: bigint
       Needs Tagging: false
       Path -> Alias:
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10003 [file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10003]
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10004 [file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10004]
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10005 [file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10005]
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10003 [file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10003]
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10004 [file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10004]
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10005 [file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10005]
       Path -> Partition:
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10003 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10003 
           Partition
             base file name: -mr-10003
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1600,7 +1620,7 @@ STAGE PLANS:
                 columns _col0,_col1
                 columns.types string,bigint
                 escape.delim \
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10004 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10004 
           Partition
             base file name: -mr-10004
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1616,7 +1636,7 @@ STAGE PLANS:
                 columns _col0,_col1
                 columns.types string,bigint
                 escape.delim \
-        file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10005 
+        file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10005 
           Partition
             base file name: -mr-10005
             input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1637,9 +1657,9 @@ STAGE PLANS:
           File Output Operator
             compressed: false
             GlobalTableId: 0
-            directory: file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-ext-10001
+            directory: file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-ext-10001
             NumFilesPerFileSink: 1
-            Stats Publishing Key Prefix: file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-ext-10001/
+            Stats Publishing Key Prefix: file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-ext-10001/
             table:
                 input format: org.apache.hadoop.mapred.TextInputFormat
                 output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
@@ -1674,7 +1694,7 @@ STAGE PLANS:
                 File Output Operator
                   compressed: false
                   GlobalTableId: 0
-                  directory: file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10004
+                  directory: file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10004
                   NumFilesPerFileSink: 1
                   table:
                       input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1688,9 +1708,9 @@ STAGE PLANS:
                   MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2 [null-subquery1-subquery1:s-subquery1-subquery1:src2]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2 [null-subquery1-subquery1:s-subquery1-subquery1:src2]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2 
           Partition
             base file name: src2
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1701,7 +1721,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2
               name default.src2
               numFiles 1
               numPartitions 0
@@ -1711,7 +1731,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309926
+              transient_lastDdlTime 1327549328
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1722,7 +1742,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src2
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src2
                 name default.src2
                 numFiles 1
                 numPartitions 0
@@ -1732,7 +1752,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309926
+                transient_lastDdlTime 1327549328
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src2
             name: default.src2
@@ -1759,7 +1779,7 @@ STAGE PLANS:
                 File Output Operator
                   compressed: false
                   GlobalTableId: 0
-                  directory: file:/tmp/njain/hive_2011-12-07_18-06-10_646_288553186490152714/-mr-10005
+                  directory: file:/tmp/cloudera/hive_2012-01-25_19-43-09_406_7584654657227789760/-mr-10005
                   NumFilesPerFileSink: 1
                   table:
                       input format: org.apache.hadoop.mapred.SequenceFileInputFormat
@@ -1773,9 +1793,9 @@ STAGE PLANS:
                   MultiFileSpray: false
       Needs Tagging: false
       Path -> Alias:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3 [null-subquery1-subquery2:s-subquery1-subquery2:src3]
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3 [null-subquery1-subquery2:s-subquery1-subquery2:src3]
       Path -> Partition:
-        pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3 
+        pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3 
           Partition
             base file name: src3
             input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1786,7 +1806,7 @@ STAGE PLANS:
               columns.types string:bigint
               file.inputformat org.apache.hadoop.mapred.TextInputFormat
               file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-              location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3
+              location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3
               name default.src3
               numFiles 1
               numPartitions 0
@@ -1796,7 +1816,7 @@ STAGE PLANS:
               serialization.format 1
               serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               totalSize 1791
-              transient_lastDdlTime 1323309930
+              transient_lastDdlTime 1327549334
             serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
           
               input format: org.apache.hadoop.mapred.TextInputFormat
@@ -1807,7 +1827,7 @@ STAGE PLANS:
                 columns.types string:bigint
                 file.inputformat org.apache.hadoop.mapred.TextInputFormat
                 file.outputformat org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                location pfile:/data/users/njain/hive_commit2/build/ql/test/data/warehouse/src3
+                location pfile:/home/cloudera/Code/hive/build/ql/test/data/warehouse/src3
                 name default.src3
                 numFiles 1
                 numPartitions 0
@@ -1817,7 +1837,7 @@ STAGE PLANS:
                 serialization.format 1
                 serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                 totalSize 1791
-                transient_lastDdlTime 1323309930
+                transient_lastDdlTime 1327549334
               serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
               name: default.src3
             name: default.src3
@@ -1834,13 +1854,13 @@ PREHOOK: query: select s.key, s.count from (
   union all
   select a.key as key, count(1) as count from src4 a join src5 b on a.key=b.key where a.key < 10 group by a.key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src2
 PREHOOK: Input: default@src3
 PREHOOK: Input: default@src4
 PREHOOK: Input: default@src5
-PREHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-06-10_797_9067066248849265470/-mr-10000
+PREHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-43-09_535_8814584333050644647/-mr-10000
 POSTHOOK: query: select s.key, s.count from (
   select key, count from src2  where key < 10
   union all
@@ -1848,13 +1868,13 @@ POSTHOOK: query: select s.key, s.count from (
   union all
   select a.key as key, count(1) as count from src4 a join src5 b on a.key=b.key where a.key < 10 group by a.key
 )s
-order by s.key
+order by s.key ASC, s.count ASC
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src2
 POSTHOOK: Input: default@src3
 POSTHOOK: Input: default@src4
 POSTHOOK: Input: default@src5
-POSTHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-06-10_797_9067066248849265470/-mr-10000
+POSTHOOK: Output: file:/tmp/cloudera/hive_2012-01-25_19-43-09_535_8814584333050644647/-mr-10000
 0	1
 0	3
 0	3
@@ -1864,9 +1884,9 @@ POSTHOOK: Output: file:/tmp/njain/hive_2011-12-07_18-06-10_797_90670662488492654
 4	1
 4	1
 4	1
-5	3
 5	1
 5	3
+5	3
 8	1
 8	1
 8	1
-- 
1.7.0.4


From 250a2a70d4b8031092bcb69bc61af84fb9f96cab Mon Sep 17 00:00:00 2001
From: Gregory Chanan <gchanan@cloudera.com>
Date: Thu, 23 Aug 2012 15:17:28 -0700
Subject: [PATCH 116/151] HBASE-6606 Test for reconnecting with HBaseAdmin using unmanaged HConnection

Reason: Supportability
Author: Gregory Chanan
Ref: CDH-5549
---
 .../hadoop/hbase/client/TestFromClientSide.java    |   60 +++++++++++++++++---
 1 files changed, 51 insertions(+), 9 deletions(-)

diff --git a/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java b/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java
index a0af1d7..1c9daec 100644
--- a/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java
+++ b/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide.java
@@ -58,6 +58,7 @@ import org.apache.hadoop.hbase.HRegionLocation;
 import org.apache.hadoop.hbase.HServerAddress;
 import org.apache.hadoop.hbase.HTableDescriptor;
 import org.apache.hadoop.hbase.KeyValue;
+import org.apache.hadoop.hbase.MiniHBaseCluster;
 import org.apache.hadoop.hbase.ServerName;
 import org.apache.hadoop.hbase.filter.BinaryComparator;
 import org.apache.hadoop.hbase.filter.CompareFilter;
@@ -3785,6 +3786,24 @@ public class TestFromClientSide {
   }
 
   /**
+   * creates an HTable for tableName using an unmanaged HConnection.
+   *
+   * @param tableName - table to create
+   * @return the created HTable object
+   * @throws IOException
+   */
+  HTable createUnmangedHConnectionHTable(final byte [] tableName) throws IOException {
+    TEST_UTIL.createTable(tableName, HConstants.CATALOG_FAMILY);
+    HConnection conn = HConnectionManager.createConnection(TEST_UTIL.getConfiguration());
+    ExecutorService pool = new ThreadPoolExecutor(1, Integer.MAX_VALUE,
+      60, TimeUnit.SECONDS,
+      new SynchronousQueue<Runnable>(),
+      new DaemonThreadFactory());
+    ((ThreadPoolExecutor)pool).allowCoreThreadTimeOut(true);
+    return new HTable(tableName, conn, pool);
+  }
+
+  /**
    * simple test that just executes parts of the client
    * API that accept a pre-created HConnction instance
    *
@@ -3793,18 +3812,41 @@ public class TestFromClientSide {
   @Test
   public void testUnmanagedHConnection() throws IOException {
     final byte[] tableName = Bytes.toBytes("testUnmanagedHConnection");
-    TEST_UTIL.createTable(tableName, HConstants.CATALOG_FAMILY);
-    HConnection conn = HConnectionManager.createConnection(TEST_UTIL
-        .getConfiguration());
-    ExecutorService pool = new ThreadPoolExecutor(1, Integer.MAX_VALUE,
-        60, TimeUnit.SECONDS,
-        new SynchronousQueue<Runnable>(),
-        new DaemonThreadFactory());
-    ((ThreadPoolExecutor)pool).allowCoreThreadTimeOut(true);
-    HTable t = new HTable(tableName, conn, pool);
+    HTable t = createUnmangedHConnectionHTable(tableName);
+    HBaseAdmin ha = new HBaseAdmin(t.getConnection());
+    assertTrue(ha.tableExists(tableName));
+    assertTrue(t.get(new Get(ROW)).isEmpty());
+  }
+
+  /**
+   * test of that unmanaged HConnections are able to reconnect
+   * properly (see HBASE-5058)
+   *
+   * @throws Exception
+   */
+  @Test
+  public void testUnmanagedHConnectionReconnect() throws Exception {
+    final byte[] tableName = Bytes.toBytes("testUnmanagedHConnectionReconnect");
+    HTable t = createUnmangedHConnectionHTable(tableName);
+    HConnection conn = t.getConnection();
     HBaseAdmin ha = new HBaseAdmin(conn);
     assertTrue(ha.tableExists(tableName));
     assertTrue(t.get(new Get(ROW)).isEmpty());
+
+    // stop the master
+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();
+    cluster.stopMaster(0, false);
+    cluster.waitOnMaster(0);
+
+    // start up a new master
+    cluster.startMaster();
+    assertTrue(cluster.waitForActiveAndReadyMaster());
+
+    // test that the same unmanaged connection works with a new
+    // HBaseAdmin and can connect to the new master;
+    HBaseAdmin newAdmin = new HBaseAdmin(conn);
+    assertTrue(newAdmin.tableExists(tableName));
+    assert(newAdmin.getClusterStatus().getServersSize() == SLAVES);
   }
 
   @Test
-- 
1.7.0.4


From d38c78a4b5864287d268428fa451638be8ce774e Mon Sep 17 00:00:00 2001
From: Jonathan Hsieh <jmhsieh@apache.org>
Date: Mon, 26 Mar 2012 23:06:24 +0000
Subject: [PATCH 009/154] HBASE-5596 Few minor bugs from HBASE-5209 (David S. Wang)

git-svn-id: https://svn.apache.org/repos/asf/hbase/branches/0.92@1305663 13f79535-47bb-0310-9956-ffa450edef68

    Reason: Bug
    Author: David S. Wang
    Ref: CDH-5050
---
 .../org/apache/hadoop/hbase/ClusterStatus.java     |    7 +++----
 .../java/org/apache/hadoop/hbase/ServerName.java   |    7 ++++++-
 .../hadoop/hbase/master/ActiveMasterManager.java   |    2 +-
 .../org/apache/hadoop/hbase/master/HMaster.java    |   16 +++++++++++++++-
 4 files changed, 25 insertions(+), 7 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/ClusterStatus.java b/src/main/java/org/apache/hadoop/hbase/ClusterStatus.java
index 7618e30..d962594 100644
--- a/src/main/java/org/apache/hadoop/hbase/ClusterStatus.java
+++ b/src/main/java/org/apache/hadoop/hbase/ClusterStatus.java
@@ -67,7 +67,6 @@ public class ClusterStatus extends VersionedWritable {
    */
   private static final byte VERSION_MASTER_BACKUPMASTERS = 2;
   private static final byte VERSION = 2;
-  private static final String UNKNOWN_SERVERNAME = "unknown";
 
   private String hbaseVersion;
   private Map<ServerName, HServerLoad> liveServers;
@@ -173,11 +172,11 @@ public class ClusterStatus extends VersionedWritable {
     return (getVersion() == ((ClusterStatus)o).getVersion()) &&
       getHBaseVersion().equals(((ClusterStatus)o).getHBaseVersion()) &&
       this.liveServers.equals(((ClusterStatus)o).liveServers) &&
-      this.deadServers.equals(((ClusterStatus)o).deadServers) &&
+      this.deadServers.containsAll(((ClusterStatus)o).deadServers) &&
       Arrays.equals(this.masterCoprocessors,
                     ((ClusterStatus)o).masterCoprocessors) &&
       this.master.equals(((ClusterStatus)o).master) &&
-      this.backupMasters.equals(((ClusterStatus)o).backupMasters);
+      this.backupMasters.containsAll(((ClusterStatus)o).backupMasters);
   }
 
   /**
@@ -340,7 +339,7 @@ public class ClusterStatus extends VersionedWritable {
                                  Bytes.readByteArray(in)));
       }
     } else {
-      this.master = new ServerName(UNKNOWN_SERVERNAME, -1,
+      this.master = new ServerName(ServerName.UNKNOWN_SERVERNAME, -1,
                                    ServerName.NON_STARTCODE);
       this.backupMasters = new ArrayList<ServerName>(0);
     }
diff --git a/src/main/java/org/apache/hadoop/hbase/ServerName.java b/src/main/java/org/apache/hadoop/hbase/ServerName.java
index d6d869a..2d6fe4e 100644
--- a/src/main/java/org/apache/hadoop/hbase/ServerName.java
+++ b/src/main/java/org/apache/hadoop/hbase/ServerName.java
@@ -69,6 +69,11 @@ public class ServerName implements Comparable<ServerName> {
       SERVERNAME_SEPARATOR + Addressing.VALID_PORT_REGEX +
       SERVERNAME_SEPARATOR + Addressing.VALID_PORT_REGEX + "$");
 
+  /**
+   * What to use if server name is unknown.
+   */
+  public static final String UNKNOWN_SERVERNAME = "#unknown#";
+
   private final String servername;
   private final String hostname;
   private final int port;
@@ -287,4 +292,4 @@ public class ServerName implements Comparable<ServerName> {
     return SERVERNAME_PATTERN.matcher(str).matches()? new ServerName(str):
       new ServerName(str, NON_STARTCODE);
   }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/org/apache/hadoop/hbase/master/ActiveMasterManager.java b/src/main/java/org/apache/hadoop/hbase/master/ActiveMasterManager.java
index fe4710b..ac44f61 100644
--- a/src/main/java/org/apache/hadoop/hbase/master/ActiveMasterManager.java
+++ b/src/main/java/org/apache/hadoop/hbase/master/ActiveMasterManager.java
@@ -165,7 +165,7 @@ class ActiveMasterManager extends ZooKeeperListener {
       LOG.info("Adding ZNode for " + backupZNode +
                " in backup master directory");
       ZKUtil.createEphemeralNodeAndWatch(this.watcher, backupZNode,
-          HConstants.EMPTY_BYTE_ARRAY);
+          this.sn.getVersionedBytes());
 
       String msg;
       byte [] bytes =
diff --git a/src/main/java/org/apache/hadoop/hbase/master/HMaster.java b/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
index 9842757..9a6a137 100644
--- a/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
+++ b/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
@@ -25,6 +25,8 @@ import java.lang.reflect.InvocationTargetException;
 import java.net.InetAddress;
 import java.net.InetSocketAddress;
 import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
@@ -1240,8 +1242,20 @@ Server {
     List<ServerName> backupMasters = new ArrayList<ServerName>(
                                           backupMasterStrings.size());
     for (String s: backupMasterStrings) {
-      backupMasters.add(new ServerName(s));
+      try {
+        byte[] bytes = ZKUtil.getData(this.zooKeeper, ZKUtil.joinZNode(this.zooKeeper.backupMasterAddressesZNode, s));
+        if (bytes != null) {
+          backupMasters.add(ServerName.parseVersionedServerName(bytes));
+        }
+      } catch (KeeperException e) {
+        LOG.warn(this.zooKeeper.prefix("Unable to get information about " +
+                 "backup servers"), e);
+      }
     }
+    Collections.sort(backupMasters, new Comparator<ServerName>() {
+      public int compare(ServerName s1, ServerName s2) {
+        return s1.getServerName().compareTo(s2.getServerName());
+      }});
 
     return new ClusterStatus(VersionInfo.getVersion(),
       this.fileSystemManager.getClusterId(),
-- 
1.7.0.4


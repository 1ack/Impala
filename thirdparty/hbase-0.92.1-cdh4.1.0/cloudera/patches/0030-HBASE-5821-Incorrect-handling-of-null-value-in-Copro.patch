From f438568f2c2cbf237340bbcdd78a4df00b8305cf Mon Sep 17 00:00:00 2001
From: Zhihong Yu <tedyu@apache.org>
Date: Thu, 19 Apr 2012 16:18:35 +0000
Subject: [PATCH 030/154] HBASE-5821  Incorrect handling of null value in Coprocessor aggregation function min() (Maryann Xue)

Reason: Bug
Author: Maryann Xue
Ref: CDH-5861
---
 .../client/coprocessor/AggregationClient.java      |    4 ++--
 .../hbase/coprocessor/AggregateImplementation.java |    4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java b/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java
index b90401e..4e88f4c 100644
--- a/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java
+++ b/src/main/java/org/apache/hadoop/hbase/client/coprocessor/AggregationClient.java
@@ -94,7 +94,7 @@ public class AggregationClient {
 
       @Override
       public synchronized void update(byte[] region, byte[] row, R result) {
-        max = ci.compare(max, result) < 0 ? result : max;
+        max = (max == null || (result != null && ci.compare(max, result) < 0)) ? result : max;
       }
     }
     MaxCallBack aMaxCallBack = new MaxCallBack();
@@ -144,7 +144,7 @@ public class AggregationClient {
 
       @Override
       public synchronized void update(byte[] region, byte[] row, R result) {
-        min = (min == null || ci.compare(result, min) < 0) ? result : min;
+        min = (min == null || (result != null && ci.compare(result, min) < 0)) ? result : min;
       }
     }
     HTable table = new HTable(conf, tableName);
diff --git a/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java b/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java
index ba3414d..283604b 100644
--- a/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java
+++ b/src/main/java/org/apache/hadoop/hbase/coprocessor/AggregateImplementation.java
@@ -67,7 +67,7 @@ public class AggregateImplementation extends BaseEndpointCoprocessor implements
         hasMoreRows = scanner.next(results);
         for (KeyValue kv : results) {
           temp = ci.getValue(colFamily, qualifier, kv);
-          max = (max == null || ci.compare(temp, max) > 0) ? temp : max;
+          max = (max == null || (temp != null && ci.compare(temp, max) > 0)) ? temp : max;
         }
         results.clear();
       } while (hasMoreRows);
@@ -96,7 +96,7 @@ public class AggregateImplementation extends BaseEndpointCoprocessor implements
         hasMoreRows = scanner.next(results);
         for (KeyValue kv : results) {
           temp = ci.getValue(colFamily, qualifier, kv);
-          min = (min == null || ci.compare(temp, min) < 0) ? temp : min;
+          min = (min == null || (temp != null && ci.compare(temp, min) < 0)) ? temp : min;
         }
         results.clear();
       } while (hasMoreRows);
-- 
1.7.0.4


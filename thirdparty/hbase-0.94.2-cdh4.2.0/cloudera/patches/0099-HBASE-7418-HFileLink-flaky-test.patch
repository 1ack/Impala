From 87da052160f1e4cbc24f0e7c6ca2592dfe5c596c Mon Sep 17 00:00:00 2001
From: Matteo Bertozzi <matteo.bertozzi@cloudera.com>
Date: Thu, 20 Dec 2012 22:56:42 +0000
Subject: [PATCH 099/202] HBASE-7418 HFileLink flaky test

Reason: Test Failure
Author: Matteo Bertozzi
Ref: CDH-9573
---
 .../hbase/master/cleaner/TestHFileLinkCleaner.java |    6 +-----
 .../hadoop/hbase/regionserver/TestStoreFile.java   |   17 +++++++++++------
 2 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestHFileLinkCleaner.java b/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestHFileLinkCleaner.java
index 47b1f10..c55084d 100644
--- a/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestHFileLinkCleaner.java
+++ b/src/test/java/org/apache/hadoop/hbase/master/cleaner/TestHFileLinkCleaner.java
@@ -56,9 +56,7 @@ public class TestHFileLinkCleaner {
   public void testHFileLinkCleaning() throws Exception {
     Configuration conf = TEST_UTIL.getConfiguration();
     conf.set(HConstants.HBASE_DIR, TEST_UTIL.getDataTestDir().toString());
-    conf.set(HFileCleaner.MASTER_HFILE_CLEANER_PLUGINS,
-             "org.apache.hadoop.hbase.master.cleaner.TimeToLiveHFileCleaner," +
-             "org.apache.hadoop.hbase.master.cleaner.HFileLinkCleaner");
+    conf.set(HFileCleaner.MASTER_HFILE_CLEANER_PLUGINS, HFileLinkCleaner.class.getName());
     Path rootDir = FSUtils.getRootDir(conf);
     FileSystem fs = FileSystem.get(conf);
 
@@ -100,14 +98,12 @@ public class TestHFileLinkCleaner {
     HFileCleaner cleaner = new HFileCleaner(1000, server, conf, fs, archiveDir);
 
     // Link backref cannot be removed
-    Thread.sleep(ttl * 2);
     cleaner.chore();
     assertTrue(fs.exists(linkBackRef));
     assertTrue(fs.exists(hfilePath));
 
     // Link backref can be removed
     fs.rename(new Path(rootDir, tableLinkName), new Path(archiveDir, tableLinkName));
-    Thread.sleep(ttl * 2);
     cleaner.chore();
     assertFalse("Link should be deleted", fs.exists(linkBackRef));
 
diff --git a/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java b/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java
index 39ce183..fe252e0 100644
--- a/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java
+++ b/src/test/java/org/apache/hadoop/hbase/regionserver/TestStoreFile.java
@@ -175,12 +175,17 @@ public class TestStoreFile extends HBaseTestCase {
   }
 
   public void testHFileLink() throws IOException {
+    final String columnFamily = "f";
+
+    Configuration testConf = new Configuration(this.conf);
+    FSUtils.setRootDir(testConf, this.testDir);
+
     HRegionInfo hri = new HRegionInfo(Bytes.toBytes("table-link"));
-    Path storedir = new Path(new Path(FSUtils.getRootDir(conf),
-                             new Path(hri.getTableNameAsString(), hri.getEncodedName())), "cf");
+    Path storedir = new Path(new Path(this.testDir,
+      new Path(hri.getTableNameAsString(), hri.getEncodedName())), columnFamily);
 
     // Make a store file and write data to it.
-    StoreFile.Writer writer = new StoreFile.WriterBuilder(conf, cacheConf,
+    StoreFile.Writer writer = new StoreFile.WriterBuilder(testConf, cacheConf,
          this.fs, 8 * 1024)
             .withOutputDir(storedir)
             .build();
@@ -188,13 +193,13 @@ public class TestStoreFile extends HBaseTestCase {
     writeStoreFile(writer);
     writer.close();
 
-    Path dstPath = new Path(FSUtils.getRootDir(conf), new Path("test-region", "cf"));
-    HFileLink.create(conf, this.fs, dstPath, hri, storeFilePath.getName());
+    Path dstPath = new Path(this.testDir, new Path("test-region", columnFamily));
+    HFileLink.create(testConf, this.fs, dstPath, hri, storeFilePath.getName());
     Path linkFilePath = new Path(dstPath,
                   HFileLink.createHFileLinkName(hri, storeFilePath.getName()));
 
     // Try to open store file from link
-    StoreFile hsf = new StoreFile(this.fs, linkFilePath, conf, cacheConf,
+    StoreFile hsf = new StoreFile(this.fs, linkFilePath, testConf, cacheConf,
         StoreFile.BloomType.NONE, NoOpDataBlockEncoder.INSTANCE);
     assertTrue(hsf.isLink());
 
-- 
1.7.0.4


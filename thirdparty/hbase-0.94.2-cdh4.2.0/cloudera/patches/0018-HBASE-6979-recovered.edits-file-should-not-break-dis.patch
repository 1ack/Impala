From b180ab320e65618fe36495e2078ff008e1ca1975 Mon Sep 17 00:00:00 2001
From: Jimmy Xiang <jxiang@cloudera.com>
Date: Fri, 19 Oct 2012 21:54:15 -0700
Subject: [PATCH 018/196] HBASE-6979 recovered.edits file should not break distributed log splitting

Reason: Improvement
Author: Jimmy Xiang
Ref: CDH-6907
---
 .../apache/hadoop/hbase/regionserver/wal/HLog.java |    2 +-
 .../hbase/regionserver/wal/HLogSplitter.java       |   22 ++++++++++++---
 .../hbase/regionserver/wal/TestHLogSplit.java      |   29 ++++++++++++++++++-
 3 files changed, 46 insertions(+), 7 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java b/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java
index 531d049..2aa3419 100644
--- a/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java
+++ b/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLog.java
@@ -124,7 +124,7 @@ public class HLog implements Syncable {
    * Name of directory that holds recovered edits written by the wal log
    * splitting code, one per region
    */
-  private static final String RECOVERED_EDITS_DIR = "recovered.edits";
+  static final String RECOVERED_EDITS_DIR = "recovered.edits";
   private static final Pattern EDITFILES_NAME_PATTERN =
     Pattern.compile("-?[0-9]+");
   static final String RECOVERED_LOG_TMPFILE_SUFFIX = ".temp";
diff --git a/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java b/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
index ecac91d..a0e19c4 100644
--- a/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
+++ b/src/main/java/org/apache/hadoop/hbase/regionserver/wal/HLogSplitter.java
@@ -626,10 +626,9 @@ public class HLogSplitter {
   static Path getRegionSplitEditsPath(final FileSystem fs,
       final Entry logEntry, final Path rootDir, boolean isCreate)
   throws IOException {
-    Path tableDir = HTableDescriptor.getTableDir(rootDir, logEntry.getKey()
-        .getTablename());
-    Path regiondir = HRegion.getRegionDir(tableDir,
-        Bytes.toString(logEntry.getKey().getEncodedRegionName()));
+    Path tableDir = HTableDescriptor.getTableDir(rootDir, logEntry.getKey().getTablename());
+    String encodedRegionName = Bytes.toString(logEntry.getKey().getEncodedRegionName());
+    Path regiondir = HRegion.getRegionDir(tableDir, encodedRegionName);
     Path dir = HLog.getRegionDirRecoveredEditsDir(regiondir);
 
     if (!fs.exists(regiondir)) {
@@ -638,6 +637,21 @@ public class HLogSplitter {
           " already split so it's safe to discard those edits.");
       return null;
     }
+    if (fs.exists(dir) && fs.isFile(dir)) {
+      Path tmp = new Path("/tmp");
+      if (!fs.exists(tmp)) {
+        fs.mkdirs(tmp);
+      }
+      tmp = new Path(tmp,
+        HLog.RECOVERED_EDITS_DIR + "_" + encodedRegionName);
+      LOG.warn("Found existing old file: " + dir + ". It could be some "
+        + "leftover of an old installation. It should be a folder instead. "
+        + "So moving it to " + tmp);
+      if (!fs.rename(dir, tmp)) {
+        LOG.warn("Failed to sideline old file " + dir);
+      }
+    }
+
     if (isCreate && !fs.exists(dir)) {
       if (!fs.mkdirs(dir)) LOG.warn("mkdir failed on " + dir);
     }
diff --git a/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java b/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java
index 69a4e22..8f7169a 100644
--- a/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java
+++ b/src/test/java/org/apache/hadoop/hbase/regionserver/wal/TestHLogSplit.java
@@ -179,6 +179,33 @@ public class TestHLogSplit {
     assertEquals(parentOfParent, HRegionInfo.FIRST_META_REGIONINFO.getEncodedName());
   }
 
+  /**
+   * Test old recovered edits file doesn't break HLogSplitter.
+   * This is useful in upgrading old instances.
+   */
+  @Test 
+  public void testOldRecoveredEditsFileSidelined() throws IOException {
+    FileSystem fs = FileSystem.get(TEST_UTIL.getConfiguration());
+    byte [] encoded = HRegionInfo.FIRST_META_REGIONINFO.getEncodedNameAsBytes();
+    Path tdir = new Path(hbaseDir, Bytes.toString(HConstants.META_TABLE_NAME));
+    Path regiondir = new Path(tdir,
+        HRegionInfo.FIRST_META_REGIONINFO.getEncodedName());
+    fs.mkdirs(regiondir);
+    long now = System.currentTimeMillis();
+    HLog.Entry entry =
+        new HLog.Entry(new HLogKey(encoded,
+            HConstants.META_TABLE_NAME, 1, now, HConstants.DEFAULT_CLUSTER_ID),
+      new WALEdit());
+    Path parent = HLog.getRegionDirRecoveredEditsDir(regiondir);
+    assertEquals(parent.getName(), HLog.RECOVERED_EDITS_DIR);
+    fs.createNewFile(parent); // create a recovered.edits file 
+
+    Path p = HLogSplitter.getRegionSplitEditsPath(fs, entry, hbaseDir, true);
+    String parentOfParent = p.getParent().getParent().getName();
+    assertEquals(parentOfParent, HRegionInfo.FIRST_META_REGIONINFO.getEncodedName());
+    HLog.createWriter(fs, p, conf);
+  }
+
   @Test(expected = OrphanHLogAfterSplitException.class)
   public void testSplitFailsIfNewHLogGetsCreatedAfterSplitStarted()
   throws IOException {
@@ -1253,8 +1280,6 @@ public class TestHLogSplit {
 
         break;
     }
-
-
   }
 
   private void closeOrFlush(boolean close, FSDataOutputStream out)
-- 
1.7.0.4


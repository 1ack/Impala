From 34a2af0b3132a49e4819b8894662c8eee0d1f5aa Mon Sep 17 00:00:00 2001
From: Matteo Bertozzi <matteo.bertozzi@cloudera.com>
Date: Wed, 30 Jan 2013 13:07:33 -0800
Subject: [PATCH 194/196] HBASE-7720 Improve logging messages of failed snapshot attempts.

Reason: Snapshots
Author: Jonathan Hsieh
Ref: CDH-10223
---
 .../hbase/master/snapshot/SnapshotManager.java     |   11 ++++++++++-
 .../apache/hadoop/hbase/procedure/Procedure.java   |   13 +++++++++++++
 .../hbase/procedure/ProcedureCoordinator.java      |   19 +++++++++++++++++++
 .../hadoop/hbase/procedure/ProcedureMember.java    |    2 +-
 4 files changed, 43 insertions(+), 2 deletions(-)

diff --git a/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java b/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java
index b938ff2..56c1d6c 100644
--- a/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java
+++ b/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java
@@ -51,6 +51,7 @@ import org.apache.hadoop.hbase.master.MasterServices;
 import org.apache.hadoop.hbase.master.SnapshotSentinel;
 import org.apache.hadoop.hbase.master.cleaner.HFileCleaner;
 import org.apache.hadoop.hbase.master.cleaner.HFileLinkCleaner;
+import org.apache.hadoop.hbase.procedure.Procedure;
 import org.apache.hadoop.hbase.procedure.ProcedureCoordinator;
 import org.apache.hadoop.hbase.procedure.ProcedureCoordinatorRpcs;
 import org.apache.hadoop.hbase.procedure.ZKProcedureCoordinatorRpcs;
@@ -322,7 +323,15 @@ public class SnapshotManager implements Stoppable {
     try {
       handler.rethrowException();
     } catch (ForeignException e) {
-      throw new HBaseSnapshotException("Snapshot " + ssString +  " had an error from RS", e,
+      // Give some procedure info on an exception.
+      String status;
+      Procedure p = coordinator.getProcedure(expected.getName());
+      if (p != null) {
+        status = p.getStatus();
+      } else {
+        status = expected.getName() + " not found in proclist " + coordinator.getProcedureNames();
+      }
+      throw new HBaseSnapshotException("Snapshot " + ssString +  " had an error.  " + status, e,
           expected);
     }
 
diff --git a/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java b/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
index a789150..7cfb006 100644
--- a/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
+++ b/src/main/java/org/apache/hadoop/hbase/procedure/Procedure.java
@@ -165,6 +165,19 @@ public class Procedure implements Callable<Void>, ForeignExceptionListener {
   }
 
   /**
+   * Returns a copy of the procedure members still trying to enter the barrier.
+   * @return
+   */
+  public String getStatus() {
+    String waiting, done;
+    synchronized (joinBarrierLock) {
+      waiting = acquiringMembers.toString();
+      done = inBarrierMembers.toString();
+    }
+    return "Procedure " + procName + " { waiting=" + waiting + " done="+ done + " }";
+  }
+  
+  /**
    * Get the ExternalErrorDispatcher
    * @return the Procedure's monitor.
    */
diff --git a/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java b/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
index e6d6fbe..dfacfd5 100644
--- a/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
+++ b/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureCoordinator.java
@@ -19,7 +19,9 @@ package org.apache.hadoop.hbase.procedure;
 
 import java.io.IOException;
 import java.util.Collection;
+import java.util.HashSet;
 import java.util.List;
+import java.util.Set;
 import java.util.concurrent.ConcurrentMap;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Future;
@@ -246,4 +248,21 @@ public class ProcedureCoordinator {
   ProcedureCoordinatorRpcs getRpcs() {
     return rpcs;
   }
+
+  /**
+   * Returns the procedure.  This Procedure is a live instance so should not be modified but can
+   * be inspected.
+   * @param name Name of the procedure
+   * @return Procedure or null if not present any more
+   */
+  public Procedure getProcedure(String name) {
+    return procedures.get(name);
+  }
+
+  /**
+   * @return Return set of all procedure names.
+   */
+  public Set<String> getProcedureNames() {
+    return new HashSet<String>(procedures.keySet());
+  }
 }
\ No newline at end of file
diff --git a/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMember.java b/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMember.java
index 28ebe38..37dd09f 100644
--- a/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMember.java
+++ b/src/main/java/org/apache/hadoop/hbase/procedure/ProcedureMember.java
@@ -76,7 +76,7 @@ public class ProcedureMember implements Closeable {
       int procThreads, String memberName) {
     return new ThreadPoolExecutor(1, procThreads, keepAlive, TimeUnit.SECONDS,
         new SynchronousQueue<Runnable>(),
-        new DaemonThreadFactory("( member-" + memberName + ") subprocedure-pool"));
+        new DaemonThreadFactory("member: '" + memberName + "' subprocedure-pool"));
   }
 
   /**
-- 
1.7.0.4


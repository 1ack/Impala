From 094d48e3c55560893bae3ebed70fab7a64993fe3 Mon Sep 17 00:00:00 2001
From: Namit Jain <namit@apache.org>
Date: Thu, 26 Apr 2012 17:47:45 +0000
Subject: [PATCH 018/148] HIVE-2721 ability to select a view qualified by the database / schema name
 (Martin Traverso via namit)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1330991 13f79535-47bb-0310-9956-ffa450edef68
---
 .../hadoop/hive/ql/parse/BaseSemanticAnalyzer.java |   22 +
 .../hadoop/hive/ql/parse/SemanticAnalyzer.java     |   27 +-
 .../hadoop/hive/ql/parse/UnparseTranslator.java    |   17 +-
 ql/src/test/queries/clientpositive/view.q          |   51 +
 .../results/clientnegative/invalidate_view1.q.out  |    4 +-
 .../clientpositive/create_or_replace_view.q.out    |   10 +-
 .../test/results/clientpositive/create_view.q.out  |   54 +-
 .../clientpositive/create_view_partitioned.q.out   |    8 +-
 .../insert2_overwrite_partitions.q.out             |   68 +-
 ql/src/test/results/clientpositive/view.q.out      | 5258 ++++++++++++++++++++
 10 files changed, 5433 insertions(+), 86 deletions(-)
 create mode 100644 ql/src/test/queries/clientpositive/view.q
 create mode 100644 ql/src/test/results/clientpositive/view.q.out

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java
index d15780b..22e13e9 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/BaseSemanticAnalyzer.java
@@ -330,6 +330,28 @@ public abstract class BaseSemanticAnalyzer {
   }
 
   /**
+   * Get the unqualified name from a table node.
+   *
+   * This method works for table names qualified with their schema (e.g., "db.table")
+   * and table names without schema qualification. In both cases, it returns
+   * the table name without the schema.
+   *
+   * @param node the table node
+   * @return the table name without schema qualification
+   *         (i.e., if name is "db.table" or "table", returns "table")
+   */
+  public static String getUnescapedUnqualifiedTableName(ASTNode node) {
+    assert node.getChildCount() <= 2;
+
+    if (node.getChildCount() == 2) {
+      node = (ASTNode) node.getChild(1);
+    }
+
+    return getUnescapedName(node);
+  }
+
+
+  /**
    * Remove the encapsulating "`" pair from the identifier. We allow users to
    * use "`" to escape identifier for table names, column names and aliases, in
    * case that coincide with Hive language keywords.
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
index b471bee..05cb9a7 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
@@ -496,8 +496,13 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
 
     String tabIdName = getUnescapedName(tableTree);
 
-    String alias = (aliasIndex != 0) ?
-        unescapeIdentifier(tabref.getChild(aliasIndex).getText()) : tabIdName;
+    String alias;
+    if (aliasIndex != 0) {
+      alias = unescapeIdentifier(tabref.getChild(aliasIndex).getText());
+    }
+    else {
+      alias = getUnescapedUnqualifiedTableName(tableTree);
+    }
 
     // If the alias is already there then we have a conflict
     if (qb.exists(alias)) {
@@ -556,7 +561,7 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
 
     qb.getParseInfo().setSrcForAlias(alias, tableTree);
 
-    unparseTranslator.addTableNameTranslation(tableTree);
+    unparseTranslator.addTableNameTranslation(tableTree, db.getCurrentDatabase());
     if (aliasIndex != 0) {
       unparseTranslator.addIdentifierTranslation((ASTNode) tabref
           .getChild(aliasIndex));
@@ -977,11 +982,6 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
         }
 
         if (tab.isView()) {
-          // TODO: add support to referencing views in foreign databases.
-          if (!tab.getDbName().equals(db.getCurrentDatabase())) {
-            throw new SemanticException(ErrorMsg.INVALID_TABLE_ALIAS.
-                getMsg("Referencing view from foreign databases is not supported."));
-          }
           if (qb.getParseInfo().isAnalyzeCommand()) {
             throw new SemanticException(ErrorMsg.ANALYZE_VIEW.getMsg());
           }
@@ -5307,7 +5307,8 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
         // leftAliases should contain the first table, rightAliases should
         // contain all other tables and baseSrc should contain all tables
 
-        String tableName = getUnescapedName((ASTNode)child.getChild(0));
+        String tableName = getUnescapedUnqualifiedTableName((ASTNode) child.getChild(0));
+
         String alias = child.getChildCount() == 1 ? tableName
             : unescapeIdentifier(child.getChild(child.getChildCount() - 1)
             .getText().toLowerCase());
@@ -5410,8 +5411,9 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
 
     if ((left.getToken().getType() == HiveParser.TOK_TABREF)
         || (left.getToken().getType() == HiveParser.TOK_SUBQUERY)) {
-      String table_name = getUnescapedName((ASTNode)left.getChild(0));
-      String alias = left.getChildCount() == 1 ? table_name
+      String tableName = getUnescapedUnqualifiedTableName((ASTNode) left.getChild(0))
+        .toLowerCase();
+      String alias = left.getChildCount() == 1 ? tableName
           : unescapeIdentifier(left.getChild(left.getChildCount() - 1)
           .getText().toLowerCase());
       joinTree.setLeftAlias(alias);
@@ -5437,7 +5439,8 @@ public class SemanticAnalyzer extends BaseSemanticAnalyzer {
 
     if ((right.getToken().getType() == HiveParser.TOK_TABREF)
         || (right.getToken().getType() == HiveParser.TOK_SUBQUERY)) {
-      String tableName = getUnescapedName((ASTNode)right.getChild(0));
+      String tableName = getUnescapedUnqualifiedTableName((ASTNode) right.getChild(0))
+        .toLowerCase();
       String alias = right.getChildCount() == 1 ? tableName
           : unescapeIdentifier(right.getChild(right.getChildCount() - 1)
           .getText().toLowerCase());
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java
index 4b6e26a..0d95c8e 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/UnparseTranslator.java
@@ -138,7 +138,7 @@ class UnparseTranslator {
    * @param node
    *          source node (which must be an tabName) to be replaced
    */
-  void addTableNameTranslation(ASTNode tableName) {
+  void addTableNameTranslation(ASTNode tableName, String currentDatabaseName) {
     if (!enabled) {
       return;
     }
@@ -148,10 +148,23 @@ class UnparseTranslator {
     }
     assert (tableName.getToken().getType() == HiveParser.TOK_TABNAME);
     assert (tableName.getChildCount() <= 2);
-    addIdentifierTranslation((ASTNode)tableName.getChild(0));
+
     if (tableName.getChildCount() == 2) {
+      addIdentifierTranslation((ASTNode)tableName.getChild(0));
       addIdentifierTranslation((ASTNode)tableName.getChild(1));
     }
+    else {
+      // transform the table reference to an absolute reference (i.e., "db.table")
+      StringBuilder replacementText = new StringBuilder();
+      replacementText.append(HiveUtils.unparseIdentifier(currentDatabaseName));
+      replacementText.append('.');
+
+      ASTNode identifier = (ASTNode)tableName.getChild(0);
+      String identifierText = BaseSemanticAnalyzer.unescapeIdentifier(identifier.getText());
+      replacementText.append(HiveUtils.unparseIdentifier(identifierText));
+
+      addTranslation(identifier, replacementText.toString());
+    }
   }
 
   /**
diff --git a/src/ql/src/test/queries/clientpositive/view.q b/src/ql/src/test/queries/clientpositive/view.q
new file mode 100644
index 0000000..4e3d057
--- /dev/null
+++ b/src/ql/src/test/queries/clientpositive/view.q
@@ -0,0 +1,51 @@
+CREATE DATABASE db1;
+USE db1;
+
+CREATE TABLE table1 (key STRING, value STRING)
+STORED AS TEXTFILE;
+
+LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
+OVERWRITE INTO TABLE table1;
+
+CREATE TABLE table2 (key STRING, value STRING)
+STORED AS TEXTFILE;
+
+LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
+OVERWRITE INTO TABLE table2;
+
+-- relative reference, no alias
+CREATE VIEW v1 AS SELECT * FROM table1;
+
+-- relative reference, aliased
+CREATE VIEW v2 AS SELECT t1.* FROM table1 t1;
+
+-- relative reference, multiple tables
+CREATE VIEW v3 AS SELECT t1.*, t2.key k FROM table1 t1 JOIN table2 t2 ON t1.key = t2.key;
+
+-- absolute reference, no alias
+CREATE VIEW v4 AS SELECT * FROM db1.table1;
+
+-- absolute reference, aliased
+CREATE VIEW v5 AS SELECT t1.* FROM db1.table1 t1;
+
+-- absolute reference, multiple tables
+CREATE VIEW v6 AS SELECT t1.*, t2.key k FROM db1.table1 t1 JOIN db1.table2 t2 ON t1.key = t2.key;
+
+-- relative reference, explicit column
+CREATE VIEW v7 AS SELECT key from table1;
+
+-- absolute reference, explicit column
+CREATE VIEW v8 AS SELECT key from db1.table1;
+
+CREATE DATABASE db2;
+USE db2;
+
+SELECT * FROM db1.v1;
+SELECT * FROM db1.v2;
+SELECT * FROM db1.v3;
+SELECT * FROM db1.v4;
+SELECT * FROM db1.v5;
+SELECT * FROM db1.v6;
+SELECT * FROM db1.v7;
+SELECT * FROM db1.v8;
+
diff --git a/src/ql/src/test/results/clientnegative/invalidate_view1.q.out b/src/ql/src/test/results/clientnegative/invalidate_view1.q.out
index dd8d43d..94faa3e 100644
--- a/src/ql/src/test/results/clientnegative/invalidate_view1.q.out
+++ b/src/ql/src/test/results/clientnegative/invalidate_view1.q.out
@@ -42,7 +42,7 @@ POSTHOOK: type: ALTERTABLE_REPLACECOLS
 POSTHOOK: Input: default@xxx10
 POSTHOOK: Output: default@xxx10
 FAILED: Error in semantic analysis: Line 1:30 Invalid column reference '`value`' in definition of VIEW xxx9 [
-SELECT `xxx10`.`key`, `xxx10`.`value` FROM `xxx10`
+SELECT `xxx10`.`key`, `xxx10`.`value` FROM `default`.`xxx10`
 ] used as xxx at Line 1:39 in definition of VIEW xxx8 [
-SELECT `xxx`.`key`, `xxx`.`value` FROM `xxx9` `xxx`
+SELECT `xxx`.`key`, `xxx`.`value` FROM `default`.`xxx9` `xxx`
 ] used as yyy at Line 2:14
diff --git a/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out b/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out
index 2d4371f..a273fc8 100644
--- a/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out
+++ b/src/ql/src/test/results/clientpositive/create_or_replace_view.q.out
@@ -40,7 +40,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	select * from srcpart	 
-View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `srcpart`	 
+View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `default`.`srcpart`	 
 PREHOOK: query: -- modifying definition of unpartitioned view
 create or replace view v partitioned on (ds, hr) as select * from srcpart
 PREHOOK: type: CREATEVIEW
@@ -116,7 +116,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	select * from srcpart	 
-View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `srcpart`	 
+View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `default`.`srcpart`	 
 PREHOOK: query: show partitions v
 PREHOOK: type: SHOWPARTITIONS
 POSTHOOK: query: show partitions v
@@ -179,7 +179,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	select value, ds, hr from srcpart	 
-View Expanded Text: 	select `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `srcpart`	 
+View Expanded Text: 	select `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `default`.`srcpart`	 
 PREHOOK: query: show partitions v
 PREHOOK: type: SHOWPARTITIONS
 POSTHOOK: query: show partitions v
@@ -243,7 +243,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	select key, value, ds, hr from srcpart	 
-View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `srcpart`	 
+View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `default`.`srcpart`	 
 PREHOOK: query: show partitions v
 PREHOOK: type: SHOWPARTITIONS
 POSTHOOK: query: show partitions v
@@ -324,7 +324,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	select * from srcpart	 
-View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `srcpart`	 
+View Expanded Text: 	select `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` from `default`.`srcpart`	 
 PREHOOK: query: drop view v
 PREHOOK: type: DROPVIEW
 PREHOOK: Input: default@v
diff --git a/src/ql/src/test/results/clientpositive/create_view.q.out b/src/ql/src/test/results/clientpositive/create_view.q.out
index 9c38cfa..3b78f1e 100644
--- a/src/ql/src/test/results/clientpositive/create_view.q.out
+++ b/src/ql/src/test/results/clientpositive/create_view.q.out
@@ -163,7 +163,7 @@ STAGE PLANS:
           if not exists: false
           or replace: false
           columns: valoo string
-          expanded text: SELECT `_c0` AS `valoo` FROM (SELECT upper(`src`.`value`) FROM `src` WHERE `src`.`key`=86) `view0`
+          expanded text: SELECT `_c0` AS `valoo` FROM (SELECT upper(`src`.`value`) FROM `default`.`src` WHERE `src`.`key`=86) `view0`
           name: view0
           original text: SELECT upper(value) FROM src WHERE key=86
 
@@ -267,7 +267,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	SELECT value FROM src WHERE key=86	 
-View Expanded Text: 	SELECT `src`.`value` FROM `src` WHERE `src`.`key`=86	 
+View Expanded Text: 	SELECT `src`.`value` FROM `default`.`src` WHERE `src`.`key`=86	 
 PREHOOK: query: DESCRIBE view2
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: DESCRIBE view2
@@ -311,7 +311,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	SELECT * FROM src   	 
-View Expanded Text: 	SELECT `src`.`key`, `src`.`value` FROM `src`	 
+View Expanded Text: 	SELECT `src`.`key`, `src`.`value` FROM `default`.`src`	 
 PREHOOK: query: DESCRIBE view3
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: DESCRIBE view3
@@ -353,7 +353,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	SELECT upper(value) FROM src WHERE key=86	 
-View Expanded Text: 	SELECT `_c0` AS `valoo` FROM (SELECT upper(`src`.`value`) FROM `src` WHERE `src`.`key`=86) `view3`	 
+View Expanded Text: 	SELECT `_c0` AS `valoo` FROM (SELECT upper(`src`.`value`) FROM `default`.`src` WHERE `src`.`key`=86) `view3`	 
 PREHOOK: query: ALTER VIEW view3 SET TBLPROPERTIES ("biggest" = "loser")
 PREHOOK: type: ALTERVIEW_PROPERTIES
 PREHOOK: Input: default@view3
@@ -399,7 +399,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	SELECT upper(value) FROM src WHERE key=86	 
-View Expanded Text: 	SELECT `_c0` AS `valoo` FROM (SELECT upper(`src`.`value`) FROM `src` WHERE `src`.`key`=86) `view3`	 
+View Expanded Text: 	SELECT `_c0` AS `valoo` FROM (SELECT upper(`src`.`value`) FROM `default`.`src` WHERE `src`.`key`=86) `view3`	 
 PREHOOK: query: CREATE TABLE table1 (key int)
 PREHOOK: type: CREATETABLE
 POSTHOOK: query: CREATE TABLE table1 (key int)
@@ -714,7 +714,7 @@ c	string
 	 	 
 #### A masked pattern was here ####
 FROM table1, viewExpandedText:SELECT `_c0` AS `c` FROM (SELECT `test_translate`('abc', 'a', 'b')	 	 
-FROM `table1`) `view8`, tableType:VIRTUAL_VIEW)		 
+FROM `default`.`table1`) `view8`, tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED view8
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: DESCRIBE FORMATTED view8
@@ -746,7 +746,7 @@ Sort Columns:       	[]
 View Original Text: 	SELECT test_translate('abc', 'a', 'b')	 
 FROM table1	 	 
 View Expanded Text: 	SELECT `_c0` AS `c` FROM (SELECT `test_translate`('abc', 'a', 'b')	 
-FROM `table1`) `view8`	 	 
+FROM `default`.`table1`) `view8`	 	 
 PREHOOK: query: SELECT * FROM view8
 PREHOOK: type: QUERY
 PREHOOK: Input: default@table1
@@ -789,7 +789,7 @@ m	int
 	 	 
 #### A masked pattern was here ####
 FROM src, viewExpandedText:SELECT `_c0` AS `m` FROM (SELECT `test_max`(length(`src`.`value`))	 	 
-FROM `src`) `view9`, tableType:VIRTUAL_VIEW)		 
+FROM `default`.`src`) `view9`, tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED view9
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: DESCRIBE FORMATTED view9
@@ -821,7 +821,7 @@ Sort Columns:       	[]
 View Original Text: 	SELECT test_max(length(value))	 
 FROM src	 	 
 View Expanded Text: 	SELECT `_c0` AS `m` FROM (SELECT `test_max`(length(`src`.`value`))	 
-FROM `src`) `view9`	 	 
+FROM `default`.`src`) `view9`	 	 
 PREHOOK: query: SELECT * FROM view9
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
@@ -885,7 +885,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	SELECT slurp.* FROM (SELECT * FROM src WHERE key=86) slurp	 
-View Expanded Text: 	SELECT `slurp`.`key`, `slurp`.`value` FROM (SELECT `src`.`key`, `src`.`value` FROM `src` WHERE `src`.`key`=86) `slurp`	 
+View Expanded Text: 	SELECT `slurp`.`key`, `slurp`.`value` FROM (SELECT `src`.`key`, `src`.`value` FROM `default`.`src` WHERE `src`.`key`=86) `slurp`	 
 PREHOOK: query: SELECT * FROM view10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
@@ -928,7 +928,7 @@ boom	int
 	 	 
 #### A masked pattern was here ####
 FROM table1, viewExpandedText:SELECT `test_explode`(array(1,2,3)) AS (`boom`)	 	 
-FROM `table1`, tableType:VIRTUAL_VIEW)		 
+FROM `default`.`table1`, tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED view11
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: DESCRIBE FORMATTED view11
@@ -960,7 +960,7 @@ Sort Columns:       	[]
 View Original Text: 	SELECT test_explode(array(1,2,3)) AS (boom)	 
 FROM table1	 	 
 View Expanded Text: 	SELECT `test_explode`(array(1,2,3)) AS (`boom`)	 
-FROM `table1`	 	 
+FROM `default`.`table1`	 	 
 PREHOOK: query: SELECT * FROM view11
 PREHOOK: type: QUERY
 PREHOOK: Input: default@table1
@@ -1028,7 +1028,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	SELECT * FROM src LATERAL VIEW explode(array(1,2,3)) myTable AS myCol	 
-View Expanded Text: 	SELECT `src`.`key`, `src`.`value`, `mytable`.`mycol` FROM `src` LATERAL VIEW explode(array(1,2,3)) `myTable` AS `myCol`	 
+View Expanded Text: 	SELECT `src`.`key`, `src`.`value`, `mytable`.`mycol` FROM `default`.`src` LATERAL VIEW explode(array(1,2,3)) `myTable` AS `myCol`	 
 PREHOOK: query: SELECT * FROM view12
 ORDER BY key ASC, myCol ASC LIMIT 1
 PREHOOK: type: QUERY
@@ -1082,7 +1082,7 @@ key	int
 	 	 
 #### A masked pattern was here ####
 FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 5 ON key) s, viewExpandedText:SELECT `s`.`key`	 	 
-FROM `srcbucket` TABLESAMPLE (BUCKET 1 OUT OF 5 ON `key`) `s`, tableType:VIRTUAL_VIEW)		 
+FROM `default`.`srcbucket` TABLESAMPLE (BUCKET 1 OUT OF 5 ON `key`) `s`, tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED view13
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: DESCRIBE FORMATTED view13
@@ -1114,7 +1114,7 @@ Sort Columns:       	[]
 View Original Text: 	SELECT s.key	 
 FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 5 ON key) s	 	 
 View Expanded Text: 	SELECT `s`.`key`	 
-FROM `srcbucket` TABLESAMPLE (BUCKET 1 OUT OF 5 ON `key`) `s`	 	 
+FROM `default`.`srcbucket` TABLESAMPLE (BUCKET 1 OUT OF 5 ON `key`) `s`	 	 
 PREHOOK: query: SELECT * FROM view13
 ORDER BY key LIMIT 12
 PREHOOK: type: QUERY
@@ -1191,13 +1191,13 @@ JOIN
       select s4.key as key, s4.value as value from src s4 where s4.key < 10) unionsrc2	 	 
 ON (unionsrc1.key = unionsrc2.key), viewExpandedText:SELECT `unionsrc1`.`key` as `k1`, `unionsrc1`.`value` as `v1`,	 	 
        `unionsrc2`.`key` as `k2`, `unionsrc2`.`value` as `v2`	 	 
-FROM (select 'tst1' as `key`, cast(count(1) as string) as `value` from `src` `s1`	 	 
+FROM (select 'tst1' as `key`, cast(count(1) as string) as `value` from `default`.`src` `s1`	 	 
                          UNION  ALL	 	 
-      select `s2`.`key` as `key`, `s2`.`value` as `value` from `src` `s2` where `s2`.`key` < 10) `unionsrc1`	 	 
+      select `s2`.`key` as `key`, `s2`.`value` as `value` from `default`.`src` `s2` where `s2`.`key` < 10) `unionsrc1`	 	 
 JOIN	 	 
-     (select 'tst1' as `key`, cast(count(1) as string) as `value` from `src` `s3`	 	 
+     (select 'tst1' as `key`, cast(count(1) as string) as `value` from `default`.`src` `s3`	 	 
                          UNION  ALL	 	 
-      select `s4`.`key` as `key`, `s4`.`value` as `value` from `src` `s4` where `s4`.`key` < 10) `unionsrc2`	 	 
+      select `s4`.`key` as `key`, `s4`.`value` as `value` from `default`.`src` `s4` where `s4`.`key` < 10) `unionsrc2`	 	 
 ON (`unionsrc1`.`key` = `unionsrc2`.`key`), tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED view14
 PREHOOK: type: DESCTABLE
@@ -1242,13 +1242,13 @@ JOIN
 ON (unionsrc1.key = unionsrc2.key)	 	 
 View Expanded Text: 	SELECT `unionsrc1`.`key` as `k1`, `unionsrc1`.`value` as `v1`,	 
        `unionsrc2`.`key` as `k2`, `unionsrc2`.`value` as `v2`	 	 
-FROM (select 'tst1' as `key`, cast(count(1) as string) as `value` from `src` `s1`	 	 
+FROM (select 'tst1' as `key`, cast(count(1) as string) as `value` from `default`.`src` `s1`	 	 
                          UNION  ALL	 	 
-      select `s2`.`key` as `key`, `s2`.`value` as `value` from `src` `s2` where `s2`.`key` < 10) `unionsrc1`	 	 
+      select `s2`.`key` as `key`, `s2`.`value` as `value` from `default`.`src` `s2` where `s2`.`key` < 10) `unionsrc1`	 	 
 JOIN	 	 
-     (select 'tst1' as `key`, cast(count(1) as string) as `value` from `src` `s3`	 	 
+     (select 'tst1' as `key`, cast(count(1) as string) as `value` from `default`.`src` `s3`	 	 
                          UNION  ALL	 	 
-      select `s4`.`key` as `key`, `s4`.`value` as `value` from `src` `s4` where `s4`.`key` < 10) `unionsrc2`	 	 
+      select `s4`.`key` as `key`, `s4`.`value` as `value` from `default`.`src` `s4` where `s4`.`key` < 10) `unionsrc2`	 	 
 ON (`unionsrc1`.`key` = `unionsrc2`.`key`)	 	 
 PREHOOK: query: SELECT * FROM view14
 ORDER BY k1
@@ -1313,7 +1313,7 @@ value_count	bigint
 #### A masked pattern was here ####
 FROM src	 	 
 GROUP BY key, viewExpandedText:SELECT `src`.`key`,COUNT(`src`.`value`) AS `value_count`	 	 
-FROM `src`	 	 
+FROM `default`.`src`	 	 
 GROUP BY `src`.`key`, tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED view15
 PREHOOK: type: DESCTABLE
@@ -1348,7 +1348,7 @@ View Original Text: 	SELECT key,COUNT(value) AS value_count
 FROM src	 	 
 GROUP BY key	 	 
 View Expanded Text: 	SELECT `src`.`key`,COUNT(`src`.`value`) AS `value_count`	 
-FROM `src`	 	 
+FROM `default`.`src`	 	 
 GROUP BY `src`.`key`	 	 
 PREHOOK: query: SELECT * FROM view15
 ORDER BY value_count DESC, key
@@ -1398,7 +1398,7 @@ value	string
 	 	 
 #### A masked pattern was here ####
 FROM src, viewExpandedText:SELECT DISTINCT `src`.`value`	 	 
-FROM `src`, tableType:VIRTUAL_VIEW)		 
+FROM `default`.`src`, tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED view16
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: DESCRIBE FORMATTED view16
@@ -1430,7 +1430,7 @@ Sort Columns:       	[]
 View Original Text: 	SELECT DISTINCT value	 
 FROM src	 	 
 View Expanded Text: 	SELECT DISTINCT `src`.`value`	 
-FROM `src`	 	 
+FROM `default`.`src`	 	 
 PREHOOK: query: SELECT * FROM view16
 ORDER BY value
 LIMIT 10
diff --git a/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out b/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out
index ae7ebf9..83ece94 100644
--- a/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out
+++ b/src/ql/src/test/results/clientpositive/create_view_partitioned.q.out
@@ -41,7 +41,7 @@ value	string
 #### A masked pattern was here ####
 FROM src	 	 
 WHERE key=86, viewExpandedText:SELECT `src`.`key`, `src`.`value`	 	 
-FROM `src`	 	 
+FROM `default`.`src`	 	 
 WHERE `src`.`key`=86, tableType:VIRTUAL_VIEW)		 
 PREHOOK: query: DESCRIBE FORMATTED vp1
 PREHOOK: type: DESCTABLE
@@ -79,7 +79,7 @@ View Original Text: 	SELECT key, value
 FROM src	 	 
 WHERE key=86	 	 
 View Expanded Text: 	SELECT `src`.`key`, `src`.`value`	 
-FROM `src`	 	 
+FROM `default`.`src`	 	 
 WHERE `src`.`key`=86	 	 
 PREHOOK: query: SELECT * FROM vp1
 PREHOOK: type: QUERY
@@ -271,7 +271,7 @@ Sort Columns:       	[]
 	 	 
 # View Information	 	 
 View Original Text: 	SELECT * FROM srcpart WHERE key < 10	 
-View Expanded Text: 	SELECT `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` FROM `srcpart` WHERE `srcpart`.`key` < 10	 
+View Expanded Text: 	SELECT `srcpart`.`key`, `srcpart`.`value`, `srcpart`.`ds`, `srcpart`.`hr` FROM `default`.`srcpart` WHERE `srcpart`.`key` < 10	 
 PREHOOK: query: ALTER VIEW vp2 ADD PARTITION (hr='11') PARTITION (hr='12')
 PREHOOK: type: ALTERTABLE_ADDPARTS
 PREHOOK: Input: default@srcpart@ds=2008-04-08/hr=11
@@ -377,7 +377,7 @@ View Original Text: 	SELECT key, value
 FROM src	 	 
 WHERE key=86	 	 
 View Expanded Text: 	SELECT `key` AS `k`, `value` AS `v` FROM (SELECT `src`.`key`, `src`.`value`	 
-FROM `src`	 	 
+FROM `default`.`src`	 	 
 WHERE `src`.`key`=86) `vp3`	 	 
 PREHOOK: query: ALTER VIEW vp3
 ADD PARTITION (v='val_86')
diff --git a/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out b/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out
index e9432af..1f8947f 100644
--- a/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out
+++ b/src/ql/src/test/results/clientpositive/insert2_overwrite_partitions.q.out
@@ -48,9 +48,9 @@ STAGE PLANS:
   Stage: Stage-1
     Map Reduce
       Alias -> Map Operator Tree:
-        db1.sourcetable 
+        sourcetable 
           TableScan
-            alias: db1.sourcetable
+            alias: sourcetable
             Select Operator
               expressions:
                     expr: one
@@ -136,8 +136,8 @@ SELECT one,two FROM db1.sourceTable WHERE ds='2011-11-11' order by one desc, two
 POSTHOOK: type: QUERY
 POSTHOOK: Input: db1@sourcetable@ds=2011-11-11
 POSTHOOK: Output: db2@destintable@ds=2011-11-11
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 PREHOOK: type: QUERY
 PREHOOK: Input: db2@destintable@ds=2011-11-11
@@ -146,8 +146,8 @@ POSTHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: db2@destintable@ds=2011-11-11
 #### A masked pattern was here ####
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 98	val_98
 98	val_98
 98	val_98
@@ -159,8 +159,8 @@ PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE db2.destinTable PARTITION (ds='2011-11-11')
 SELECT one,two FROM db1.sourceTable WHERE ds='2011-11-11' order by one desc, two desc limit 5
 POSTHOOK: type: QUERY
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 ABSTRACT SYNTAX TREE:
   (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME db1 sourceTable))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME db2 destinTable) (TOK_PARTSPEC (TOK_PARTVAL ds '2011-11-11')))) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL one)) (TOK_SELEXPR (TOK_TABLE_OR_COL two))) (TOK_WHERE (= (TOK_TABLE_OR_COL ds) '2011-11-11')) (TOK_ORDERBY (TOK_TABSORTCOLNAMEDESC (TOK_TABLE_OR_COL one)) (TOK_TABSORTCOLNAMEDESC (TOK_TABLE_OR_COL two))) (TOK_LIMIT 5)))
 
@@ -174,9 +174,9 @@ STAGE PLANS:
   Stage: Stage-1
     Map Reduce
       Alias -> Map Operator Tree:
-        db1.sourcetable 
+        sourcetable 
           TableScan
-            alias: db1.sourcetable
+            alias: sourcetable
             Select Operator
               expressions:
                     expr: one
@@ -262,10 +262,10 @@ SELECT one,two FROM db1.sourceTable WHERE ds='2011-11-11' order by one desc, two
 POSTHOOK: type: QUERY
 POSTHOOK: Input: db1@sourcetable@ds=2011-11-11
 POSTHOOK: Output: db2@destintable@ds=2011-11-11
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 PREHOOK: type: QUERY
 PREHOOK: Input: db2@destintable@ds=2011-11-11
@@ -274,10 +274,10 @@ POSTHOOK: query: select one,two from db2.destinTable order by one desc, two desc
 POSTHOOK: type: QUERY
 POSTHOOK: Input: db2@destintable@ds=2011-11-11
 #### A masked pattern was here ####
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 98	val_98
 98	val_98
 98	val_98
@@ -288,32 +288,32 @@ PREHOOK: type: DROPTABLE
 POSTHOOK: query: drop table db2.destinTable
 POSTHOOK: type: DROPTABLE
 POSTHOOK: Output: db2@destintable
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: drop table db1.sourceTable
 PREHOOK: type: DROPTABLE
 POSTHOOK: query: drop table db1.sourceTable
 POSTHOOK: type: DROPTABLE
 POSTHOOK: Output: db1@sourcetable
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: DROP DATABASE db1
 PREHOOK: type: DROPDATABASE
 POSTHOOK: query: DROP DATABASE db1
 POSTHOOK: type: DROPDATABASE
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
 PREHOOK: query: DROP DATABASE db2
 PREHOOK: type: DROPDATABASE
 POSTHOOK: query: DROP DATABASE db2
 POSTHOOK: type: DROPDATABASE
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:one, type:string, comment:null), ]
-POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)db1.sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).one SIMPLE [(sourcetable)sourcetable.FieldSchema(name:one, type:string, comment:null), ]
+POSTHOOK: Lineage: destintable PARTITION(ds=2011-11-11).two SIMPLE [(sourcetable)sourcetable.FieldSchema(name:two, type:string, comment:null), ]
diff --git a/src/ql/src/test/results/clientpositive/view.q.out b/src/ql/src/test/results/clientpositive/view.q.out
new file mode 100644
index 0000000..a96fe16
--- /dev/null
+++ b/src/ql/src/test/results/clientpositive/view.q.out
@@ -0,0 +1,5258 @@
+PREHOOK: query: CREATE DATABASE db1
+PREHOOK: type: CREATEDATABASE
+POSTHOOK: query: CREATE DATABASE db1
+POSTHOOK: type: CREATEDATABASE
+PREHOOK: query: USE db1
+PREHOOK: type: SWITCHDATABASE
+POSTHOOK: query: USE db1
+POSTHOOK: type: SWITCHDATABASE
+PREHOOK: query: CREATE TABLE table1 (key STRING, value STRING)
+STORED AS TEXTFILE
+PREHOOK: type: CREATETABLE
+POSTHOOK: query: CREATE TABLE table1 (key STRING, value STRING)
+STORED AS TEXTFILE
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: db1@table1
+PREHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
+OVERWRITE INTO TABLE table1
+PREHOOK: type: LOAD
+PREHOOK: Output: db1@table1
+POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
+OVERWRITE INTO TABLE table1
+POSTHOOK: type: LOAD
+POSTHOOK: Output: db1@table1
+PREHOOK: query: CREATE TABLE table2 (key STRING, value STRING)
+STORED AS TEXTFILE
+PREHOOK: type: CREATETABLE
+POSTHOOK: query: CREATE TABLE table2 (key STRING, value STRING)
+STORED AS TEXTFILE
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: db1@table2
+PREHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
+OVERWRITE INTO TABLE table2
+PREHOOK: type: LOAD
+PREHOOK: Output: db1@table2
+POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/kv1.txt'
+OVERWRITE INTO TABLE table2
+POSTHOOK: type: LOAD
+POSTHOOK: Output: db1@table2
+PREHOOK: query: -- relative reference, no alias
+CREATE VIEW v1 AS SELECT * FROM table1
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- relative reference, no alias
+CREATE VIEW v1 AS SELECT * FROM table1
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v1
+#### A masked pattern was here ####
+PREHOOK: query: -- relative reference, aliased
+CREATE VIEW v2 AS SELECT t1.* FROM table1 t1
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- relative reference, aliased
+CREATE VIEW v2 AS SELECT t1.* FROM table1 t1
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v2
+#### A masked pattern was here ####
+PREHOOK: query: -- relative reference, multiple tables
+CREATE VIEW v3 AS SELECT t1.*, t2.key k FROM table1 t1 JOIN table2 t2 ON t1.key = t2.key
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- relative reference, multiple tables
+CREATE VIEW v3 AS SELECT t1.*, t2.key k FROM table1 t1 JOIN table2 t2 ON t1.key = t2.key
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v3
+#### A masked pattern was here ####
+PREHOOK: query: -- absolute reference, no alias
+CREATE VIEW v4 AS SELECT * FROM db1.table1
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- absolute reference, no alias
+CREATE VIEW v4 AS SELECT * FROM db1.table1
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v4
+#### A masked pattern was here ####
+PREHOOK: query: -- absolute reference, aliased
+CREATE VIEW v5 AS SELECT t1.* FROM db1.table1 t1
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- absolute reference, aliased
+CREATE VIEW v5 AS SELECT t1.* FROM db1.table1 t1
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v5
+#### A masked pattern was here ####
+PREHOOK: query: -- absolute reference, multiple tables
+CREATE VIEW v6 AS SELECT t1.*, t2.key k FROM db1.table1 t1 JOIN db1.table2 t2 ON t1.key = t2.key
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- absolute reference, multiple tables
+CREATE VIEW v6 AS SELECT t1.*, t2.key k FROM db1.table1 t1 JOIN db1.table2 t2 ON t1.key = t2.key
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v6
+#### A masked pattern was here ####
+PREHOOK: query: -- relative reference, explicit column
+CREATE VIEW v7 AS SELECT key from table1
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- relative reference, explicit column
+CREATE VIEW v7 AS SELECT key from table1
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v7
+#### A masked pattern was here ####
+PREHOOK: query: -- absolute reference, explicit column
+CREATE VIEW v8 AS SELECT key from db1.table1
+PREHOOK: type: CREATEVIEW
+#### A masked pattern was here ####
+POSTHOOK: query: -- absolute reference, explicit column
+CREATE VIEW v8 AS SELECT key from db1.table1
+POSTHOOK: type: CREATEVIEW
+POSTHOOK: Output: db1@v8
+#### A masked pattern was here ####
+PREHOOK: query: CREATE DATABASE db2
+PREHOOK: type: CREATEDATABASE
+POSTHOOK: query: CREATE DATABASE db2
+POSTHOOK: type: CREATEDATABASE
+PREHOOK: query: USE db2
+PREHOOK: type: SWITCHDATABASE
+POSTHOOK: query: USE db2
+POSTHOOK: type: SWITCHDATABASE
+PREHOOK: query: SELECT * FROM db1.v1
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@v1
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v1
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@v1
+#### A masked pattern was here ####
+238	val_238
+86	val_86
+311	val_311
+27	val_27
+165	val_165
+409	val_409
+255	val_255
+278	val_278
+98	val_98
+484	val_484
+265	val_265
+193	val_193
+401	val_401
+150	val_150
+273	val_273
+224	val_224
+369	val_369
+66	val_66
+128	val_128
+213	val_213
+146	val_146
+406	val_406
+429	val_429
+374	val_374
+152	val_152
+469	val_469
+145	val_145
+495	val_495
+37	val_37
+327	val_327
+281	val_281
+277	val_277
+209	val_209
+15	val_15
+82	val_82
+403	val_403
+166	val_166
+417	val_417
+430	val_430
+252	val_252
+292	val_292
+219	val_219
+287	val_287
+153	val_153
+193	val_193
+338	val_338
+446	val_446
+459	val_459
+394	val_394
+237	val_237
+482	val_482
+174	val_174
+413	val_413
+494	val_494
+207	val_207
+199	val_199
+466	val_466
+208	val_208
+174	val_174
+399	val_399
+396	val_396
+247	val_247
+417	val_417
+489	val_489
+162	val_162
+377	val_377
+397	val_397
+309	val_309
+365	val_365
+266	val_266
+439	val_439
+342	val_342
+367	val_367
+325	val_325
+167	val_167
+195	val_195
+475	val_475
+17	val_17
+113	val_113
+155	val_155
+203	val_203
+339	val_339
+0	val_0
+455	val_455
+128	val_128
+311	val_311
+316	val_316
+57	val_57
+302	val_302
+205	val_205
+149	val_149
+438	val_438
+345	val_345
+129	val_129
+170	val_170
+20	val_20
+489	val_489
+157	val_157
+378	val_378
+221	val_221
+92	val_92
+111	val_111
+47	val_47
+72	val_72
+4	val_4
+280	val_280
+35	val_35
+427	val_427
+277	val_277
+208	val_208
+356	val_356
+399	val_399
+169	val_169
+382	val_382
+498	val_498
+125	val_125
+386	val_386
+437	val_437
+469	val_469
+192	val_192
+286	val_286
+187	val_187
+176	val_176
+54	val_54
+459	val_459
+51	val_51
+138	val_138
+103	val_103
+239	val_239
+213	val_213
+216	val_216
+430	val_430
+278	val_278
+176	val_176
+289	val_289
+221	val_221
+65	val_65
+318	val_318
+332	val_332
+311	val_311
+275	val_275
+137	val_137
+241	val_241
+83	val_83
+333	val_333
+180	val_180
+284	val_284
+12	val_12
+230	val_230
+181	val_181
+67	val_67
+260	val_260
+404	val_404
+384	val_384
+489	val_489
+353	val_353
+373	val_373
+272	val_272
+138	val_138
+217	val_217
+84	val_84
+348	val_348
+466	val_466
+58	val_58
+8	val_8
+411	val_411
+230	val_230
+208	val_208
+348	val_348
+24	val_24
+463	val_463
+431	val_431
+179	val_179
+172	val_172
+42	val_42
+129	val_129
+158	val_158
+119	val_119
+496	val_496
+0	val_0
+322	val_322
+197	val_197
+468	val_468
+393	val_393
+454	val_454
+100	val_100
+298	val_298
+199	val_199
+191	val_191
+418	val_418
+96	val_96
+26	val_26
+165	val_165
+327	val_327
+230	val_230
+205	val_205
+120	val_120
+131	val_131
+51	val_51
+404	val_404
+43	val_43
+436	val_436
+156	val_156
+469	val_469
+468	val_468
+308	val_308
+95	val_95
+196	val_196
+288	val_288
+481	val_481
+457	val_457
+98	val_98
+282	val_282
+197	val_197
+187	val_187
+318	val_318
+318	val_318
+409	val_409
+470	val_470
+137	val_137
+369	val_369
+316	val_316
+169	val_169
+413	val_413
+85	val_85
+77	val_77
+0	val_0
+490	val_490
+87	val_87
+364	val_364
+179	val_179
+118	val_118
+134	val_134
+395	val_395
+282	val_282
+138	val_138
+238	val_238
+419	val_419
+15	val_15
+118	val_118
+72	val_72
+90	val_90
+307	val_307
+19	val_19
+435	val_435
+10	val_10
+277	val_277
+273	val_273
+306	val_306
+224	val_224
+309	val_309
+389	val_389
+327	val_327
+242	val_242
+369	val_369
+392	val_392
+272	val_272
+331	val_331
+401	val_401
+242	val_242
+452	val_452
+177	val_177
+226	val_226
+5	val_5
+497	val_497
+402	val_402
+396	val_396
+317	val_317
+395	val_395
+58	val_58
+35	val_35
+336	val_336
+95	val_95
+11	val_11
+168	val_168
+34	val_34
+229	val_229
+233	val_233
+143	val_143
+472	val_472
+322	val_322
+498	val_498
+160	val_160
+195	val_195
+42	val_42
+321	val_321
+430	val_430
+119	val_119
+489	val_489
+458	val_458
+78	val_78
+76	val_76
+41	val_41
+223	val_223
+492	val_492
+149	val_149
+449	val_449
+218	val_218
+228	val_228
+138	val_138
+453	val_453
+30	val_30
+209	val_209
+64	val_64
+468	val_468
+76	val_76
+74	val_74
+342	val_342
+69	val_69
+230	val_230
+33	val_33
+368	val_368
+103	val_103
+296	val_296
+113	val_113
+216	val_216
+367	val_367
+344	val_344
+167	val_167
+274	val_274
+219	val_219
+239	val_239
+485	val_485
+116	val_116
+223	val_223
+256	val_256
+263	val_263
+70	val_70
+487	val_487
+480	val_480
+401	val_401
+288	val_288
+191	val_191
+5	val_5
+244	val_244
+438	val_438
+128	val_128
+467	val_467
+432	val_432
+202	val_202
+316	val_316
+229	val_229
+469	val_469
+463	val_463
+280	val_280
+2	val_2
+35	val_35
+283	val_283
+331	val_331
+235	val_235
+80	val_80
+44	val_44
+193	val_193
+321	val_321
+335	val_335
+104	val_104
+466	val_466
+366	val_366
+175	val_175
+403	val_403
+483	val_483
+53	val_53
+105	val_105
+257	val_257
+406	val_406
+409	val_409
+190	val_190
+406	val_406
+401	val_401
+114	val_114
+258	val_258
+90	val_90
+203	val_203
+262	val_262
+348	val_348
+424	val_424
+12	val_12
+396	val_396
+201	val_201
+217	val_217
+164	val_164
+431	val_431
+454	val_454
+478	val_478
+298	val_298
+125	val_125
+431	val_431
+164	val_164
+424	val_424
+187	val_187
+382	val_382
+5	val_5
+70	val_70
+397	val_397
+480	val_480
+291	val_291
+24	val_24
+351	val_351
+255	val_255
+104	val_104
+70	val_70
+163	val_163
+438	val_438
+119	val_119
+414	val_414
+200	val_200
+491	val_491
+237	val_237
+439	val_439
+360	val_360
+248	val_248
+479	val_479
+305	val_305
+417	val_417
+199	val_199
+444	val_444
+120	val_120
+429	val_429
+169	val_169
+443	val_443
+323	val_323
+325	val_325
+277	val_277
+230	val_230
+478	val_478
+178	val_178
+468	val_468
+310	val_310
+317	val_317
+333	val_333
+493	val_493
+460	val_460
+207	val_207
+249	val_249
+265	val_265
+480	val_480
+83	val_83
+136	val_136
+353	val_353
+172	val_172
+214	val_214
+462	val_462
+233	val_233
+406	val_406
+133	val_133
+175	val_175
+189	val_189
+454	val_454
+375	val_375
+401	val_401
+421	val_421
+407	val_407
+384	val_384
+256	val_256
+26	val_26
+134	val_134
+67	val_67
+384	val_384
+379	val_379
+18	val_18
+462	val_462
+492	val_492
+100	val_100
+298	val_298
+9	val_9
+341	val_341
+498	val_498
+146	val_146
+458	val_458
+362	val_362
+186	val_186
+285	val_285
+348	val_348
+167	val_167
+18	val_18
+273	val_273
+183	val_183
+281	val_281
+344	val_344
+97	val_97
+469	val_469
+315	val_315
+84	val_84
+28	val_28
+37	val_37
+448	val_448
+152	val_152
+348	val_348
+307	val_307
+194	val_194
+414	val_414
+477	val_477
+222	val_222
+126	val_126
+90	val_90
+169	val_169
+403	val_403
+400	val_400
+200	val_200
+97	val_97
+PREHOOK: query: SELECT * FROM db1.v2
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@v2
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v2
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@v2
+#### A masked pattern was here ####
+238	val_238
+86	val_86
+311	val_311
+27	val_27
+165	val_165
+409	val_409
+255	val_255
+278	val_278
+98	val_98
+484	val_484
+265	val_265
+193	val_193
+401	val_401
+150	val_150
+273	val_273
+224	val_224
+369	val_369
+66	val_66
+128	val_128
+213	val_213
+146	val_146
+406	val_406
+429	val_429
+374	val_374
+152	val_152
+469	val_469
+145	val_145
+495	val_495
+37	val_37
+327	val_327
+281	val_281
+277	val_277
+209	val_209
+15	val_15
+82	val_82
+403	val_403
+166	val_166
+417	val_417
+430	val_430
+252	val_252
+292	val_292
+219	val_219
+287	val_287
+153	val_153
+193	val_193
+338	val_338
+446	val_446
+459	val_459
+394	val_394
+237	val_237
+482	val_482
+174	val_174
+413	val_413
+494	val_494
+207	val_207
+199	val_199
+466	val_466
+208	val_208
+174	val_174
+399	val_399
+396	val_396
+247	val_247
+417	val_417
+489	val_489
+162	val_162
+377	val_377
+397	val_397
+309	val_309
+365	val_365
+266	val_266
+439	val_439
+342	val_342
+367	val_367
+325	val_325
+167	val_167
+195	val_195
+475	val_475
+17	val_17
+113	val_113
+155	val_155
+203	val_203
+339	val_339
+0	val_0
+455	val_455
+128	val_128
+311	val_311
+316	val_316
+57	val_57
+302	val_302
+205	val_205
+149	val_149
+438	val_438
+345	val_345
+129	val_129
+170	val_170
+20	val_20
+489	val_489
+157	val_157
+378	val_378
+221	val_221
+92	val_92
+111	val_111
+47	val_47
+72	val_72
+4	val_4
+280	val_280
+35	val_35
+427	val_427
+277	val_277
+208	val_208
+356	val_356
+399	val_399
+169	val_169
+382	val_382
+498	val_498
+125	val_125
+386	val_386
+437	val_437
+469	val_469
+192	val_192
+286	val_286
+187	val_187
+176	val_176
+54	val_54
+459	val_459
+51	val_51
+138	val_138
+103	val_103
+239	val_239
+213	val_213
+216	val_216
+430	val_430
+278	val_278
+176	val_176
+289	val_289
+221	val_221
+65	val_65
+318	val_318
+332	val_332
+311	val_311
+275	val_275
+137	val_137
+241	val_241
+83	val_83
+333	val_333
+180	val_180
+284	val_284
+12	val_12
+230	val_230
+181	val_181
+67	val_67
+260	val_260
+404	val_404
+384	val_384
+489	val_489
+353	val_353
+373	val_373
+272	val_272
+138	val_138
+217	val_217
+84	val_84
+348	val_348
+466	val_466
+58	val_58
+8	val_8
+411	val_411
+230	val_230
+208	val_208
+348	val_348
+24	val_24
+463	val_463
+431	val_431
+179	val_179
+172	val_172
+42	val_42
+129	val_129
+158	val_158
+119	val_119
+496	val_496
+0	val_0
+322	val_322
+197	val_197
+468	val_468
+393	val_393
+454	val_454
+100	val_100
+298	val_298
+199	val_199
+191	val_191
+418	val_418
+96	val_96
+26	val_26
+165	val_165
+327	val_327
+230	val_230
+205	val_205
+120	val_120
+131	val_131
+51	val_51
+404	val_404
+43	val_43
+436	val_436
+156	val_156
+469	val_469
+468	val_468
+308	val_308
+95	val_95
+196	val_196
+288	val_288
+481	val_481
+457	val_457
+98	val_98
+282	val_282
+197	val_197
+187	val_187
+318	val_318
+318	val_318
+409	val_409
+470	val_470
+137	val_137
+369	val_369
+316	val_316
+169	val_169
+413	val_413
+85	val_85
+77	val_77
+0	val_0
+490	val_490
+87	val_87
+364	val_364
+179	val_179
+118	val_118
+134	val_134
+395	val_395
+282	val_282
+138	val_138
+238	val_238
+419	val_419
+15	val_15
+118	val_118
+72	val_72
+90	val_90
+307	val_307
+19	val_19
+435	val_435
+10	val_10
+277	val_277
+273	val_273
+306	val_306
+224	val_224
+309	val_309
+389	val_389
+327	val_327
+242	val_242
+369	val_369
+392	val_392
+272	val_272
+331	val_331
+401	val_401
+242	val_242
+452	val_452
+177	val_177
+226	val_226
+5	val_5
+497	val_497
+402	val_402
+396	val_396
+317	val_317
+395	val_395
+58	val_58
+35	val_35
+336	val_336
+95	val_95
+11	val_11
+168	val_168
+34	val_34
+229	val_229
+233	val_233
+143	val_143
+472	val_472
+322	val_322
+498	val_498
+160	val_160
+195	val_195
+42	val_42
+321	val_321
+430	val_430
+119	val_119
+489	val_489
+458	val_458
+78	val_78
+76	val_76
+41	val_41
+223	val_223
+492	val_492
+149	val_149
+449	val_449
+218	val_218
+228	val_228
+138	val_138
+453	val_453
+30	val_30
+209	val_209
+64	val_64
+468	val_468
+76	val_76
+74	val_74
+342	val_342
+69	val_69
+230	val_230
+33	val_33
+368	val_368
+103	val_103
+296	val_296
+113	val_113
+216	val_216
+367	val_367
+344	val_344
+167	val_167
+274	val_274
+219	val_219
+239	val_239
+485	val_485
+116	val_116
+223	val_223
+256	val_256
+263	val_263
+70	val_70
+487	val_487
+480	val_480
+401	val_401
+288	val_288
+191	val_191
+5	val_5
+244	val_244
+438	val_438
+128	val_128
+467	val_467
+432	val_432
+202	val_202
+316	val_316
+229	val_229
+469	val_469
+463	val_463
+280	val_280
+2	val_2
+35	val_35
+283	val_283
+331	val_331
+235	val_235
+80	val_80
+44	val_44
+193	val_193
+321	val_321
+335	val_335
+104	val_104
+466	val_466
+366	val_366
+175	val_175
+403	val_403
+483	val_483
+53	val_53
+105	val_105
+257	val_257
+406	val_406
+409	val_409
+190	val_190
+406	val_406
+401	val_401
+114	val_114
+258	val_258
+90	val_90
+203	val_203
+262	val_262
+348	val_348
+424	val_424
+12	val_12
+396	val_396
+201	val_201
+217	val_217
+164	val_164
+431	val_431
+454	val_454
+478	val_478
+298	val_298
+125	val_125
+431	val_431
+164	val_164
+424	val_424
+187	val_187
+382	val_382
+5	val_5
+70	val_70
+397	val_397
+480	val_480
+291	val_291
+24	val_24
+351	val_351
+255	val_255
+104	val_104
+70	val_70
+163	val_163
+438	val_438
+119	val_119
+414	val_414
+200	val_200
+491	val_491
+237	val_237
+439	val_439
+360	val_360
+248	val_248
+479	val_479
+305	val_305
+417	val_417
+199	val_199
+444	val_444
+120	val_120
+429	val_429
+169	val_169
+443	val_443
+323	val_323
+325	val_325
+277	val_277
+230	val_230
+478	val_478
+178	val_178
+468	val_468
+310	val_310
+317	val_317
+333	val_333
+493	val_493
+460	val_460
+207	val_207
+249	val_249
+265	val_265
+480	val_480
+83	val_83
+136	val_136
+353	val_353
+172	val_172
+214	val_214
+462	val_462
+233	val_233
+406	val_406
+133	val_133
+175	val_175
+189	val_189
+454	val_454
+375	val_375
+401	val_401
+421	val_421
+407	val_407
+384	val_384
+256	val_256
+26	val_26
+134	val_134
+67	val_67
+384	val_384
+379	val_379
+18	val_18
+462	val_462
+492	val_492
+100	val_100
+298	val_298
+9	val_9
+341	val_341
+498	val_498
+146	val_146
+458	val_458
+362	val_362
+186	val_186
+285	val_285
+348	val_348
+167	val_167
+18	val_18
+273	val_273
+183	val_183
+281	val_281
+344	val_344
+97	val_97
+469	val_469
+315	val_315
+84	val_84
+28	val_28
+37	val_37
+448	val_448
+152	val_152
+348	val_348
+307	val_307
+194	val_194
+414	val_414
+477	val_477
+222	val_222
+126	val_126
+90	val_90
+169	val_169
+403	val_403
+400	val_400
+200	val_200
+97	val_97
+PREHOOK: query: SELECT * FROM db1.v3
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@table2
+PREHOOK: Input: db1@v3
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v3
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@table2
+POSTHOOK: Input: db1@v3
+#### A masked pattern was here ####
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+10	val_10	10
+100	val_100	100
+100	val_100	100
+100	val_100	100
+100	val_100	100
+103	val_103	103
+103	val_103	103
+103	val_103	103
+103	val_103	103
+104	val_104	104
+104	val_104	104
+104	val_104	104
+104	val_104	104
+105	val_105	105
+11	val_11	11
+111	val_111	111
+113	val_113	113
+113	val_113	113
+113	val_113	113
+113	val_113	113
+114	val_114	114
+116	val_116	116
+118	val_118	118
+118	val_118	118
+118	val_118	118
+118	val_118	118
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+12	val_12	12
+12	val_12	12
+12	val_12	12
+12	val_12	12
+120	val_120	120
+120	val_120	120
+120	val_120	120
+120	val_120	120
+125	val_125	125
+125	val_125	125
+125	val_125	125
+125	val_125	125
+126	val_126	126
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+129	val_129	129
+129	val_129	129
+129	val_129	129
+129	val_129	129
+131	val_131	131
+133	val_133	133
+134	val_134	134
+134	val_134	134
+134	val_134	134
+134	val_134	134
+136	val_136	136
+137	val_137	137
+137	val_137	137
+137	val_137	137
+137	val_137	137
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+143	val_143	143
+145	val_145	145
+146	val_146	146
+146	val_146	146
+146	val_146	146
+146	val_146	146
+149	val_149	149
+149	val_149	149
+149	val_149	149
+149	val_149	149
+15	val_15	15
+15	val_15	15
+15	val_15	15
+15	val_15	15
+150	val_150	150
+152	val_152	152
+152	val_152	152
+152	val_152	152
+152	val_152	152
+153	val_153	153
+155	val_155	155
+156	val_156	156
+157	val_157	157
+158	val_158	158
+160	val_160	160
+162	val_162	162
+163	val_163	163
+164	val_164	164
+164	val_164	164
+164	val_164	164
+164	val_164	164
+165	val_165	165
+165	val_165	165
+165	val_165	165
+165	val_165	165
+166	val_166	166
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+168	val_168	168
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+17	val_17	17
+170	val_170	170
+172	val_172	172
+172	val_172	172
+172	val_172	172
+172	val_172	172
+174	val_174	174
+174	val_174	174
+174	val_174	174
+174	val_174	174
+175	val_175	175
+175	val_175	175
+175	val_175	175
+175	val_175	175
+176	val_176	176
+176	val_176	176
+176	val_176	176
+176	val_176	176
+177	val_177	177
+178	val_178	178
+179	val_179	179
+179	val_179	179
+179	val_179	179
+179	val_179	179
+18	val_18	18
+18	val_18	18
+18	val_18	18
+18	val_18	18
+180	val_180	180
+181	val_181	181
+183	val_183	183
+186	val_186	186
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+189	val_189	189
+19	val_19	19
+190	val_190	190
+191	val_191	191
+191	val_191	191
+191	val_191	191
+191	val_191	191
+192	val_192	192
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+194	val_194	194
+195	val_195	195
+195	val_195	195
+195	val_195	195
+195	val_195	195
+196	val_196	196
+197	val_197	197
+197	val_197	197
+197	val_197	197
+197	val_197	197
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+2	val_2	2
+20	val_20	20
+200	val_200	200
+200	val_200	200
+200	val_200	200
+200	val_200	200
+201	val_201	201
+202	val_202	202
+203	val_203	203
+203	val_203	203
+203	val_203	203
+203	val_203	203
+205	val_205	205
+205	val_205	205
+205	val_205	205
+205	val_205	205
+207	val_207	207
+207	val_207	207
+207	val_207	207
+207	val_207	207
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+209	val_209	209
+209	val_209	209
+209	val_209	209
+209	val_209	209
+213	val_213	213
+213	val_213	213
+213	val_213	213
+213	val_213	213
+214	val_214	214
+216	val_216	216
+216	val_216	216
+216	val_216	216
+216	val_216	216
+217	val_217	217
+217	val_217	217
+217	val_217	217
+217	val_217	217
+218	val_218	218
+219	val_219	219
+219	val_219	219
+219	val_219	219
+219	val_219	219
+221	val_221	221
+221	val_221	221
+221	val_221	221
+221	val_221	221
+222	val_222	222
+223	val_223	223
+223	val_223	223
+223	val_223	223
+223	val_223	223
+224	val_224	224
+224	val_224	224
+224	val_224	224
+224	val_224	224
+226	val_226	226
+228	val_228	228
+229	val_229	229
+229	val_229	229
+229	val_229	229
+229	val_229	229
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+233	val_233	233
+233	val_233	233
+233	val_233	233
+233	val_233	233
+235	val_235	235
+237	val_237	237
+237	val_237	237
+237	val_237	237
+237	val_237	237
+238	val_238	238
+238	val_238	238
+238	val_238	238
+238	val_238	238
+239	val_239	239
+239	val_239	239
+239	val_239	239
+239	val_239	239
+24	val_24	24
+24	val_24	24
+24	val_24	24
+24	val_24	24
+241	val_241	241
+242	val_242	242
+242	val_242	242
+242	val_242	242
+242	val_242	242
+244	val_244	244
+247	val_247	247
+248	val_248	248
+249	val_249	249
+252	val_252	252
+255	val_255	255
+255	val_255	255
+255	val_255	255
+255	val_255	255
+256	val_256	256
+256	val_256	256
+256	val_256	256
+256	val_256	256
+257	val_257	257
+258	val_258	258
+26	val_26	26
+26	val_26	26
+26	val_26	26
+26	val_26	26
+260	val_260	260
+262	val_262	262
+263	val_263	263
+265	val_265	265
+265	val_265	265
+265	val_265	265
+265	val_265	265
+266	val_266	266
+27	val_27	27
+272	val_272	272
+272	val_272	272
+272	val_272	272
+272	val_272	272
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+274	val_274	274
+275	val_275	275
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+278	val_278	278
+278	val_278	278
+278	val_278	278
+278	val_278	278
+28	val_28	28
+280	val_280	280
+280	val_280	280
+280	val_280	280
+280	val_280	280
+281	val_281	281
+281	val_281	281
+281	val_281	281
+281	val_281	281
+282	val_282	282
+282	val_282	282
+282	val_282	282
+282	val_282	282
+283	val_283	283
+284	val_284	284
+285	val_285	285
+286	val_286	286
+287	val_287	287
+288	val_288	288
+288	val_288	288
+288	val_288	288
+288	val_288	288
+289	val_289	289
+291	val_291	291
+292	val_292	292
+296	val_296	296
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+30	val_30	30
+302	val_302	302
+305	val_305	305
+306	val_306	306
+307	val_307	307
+307	val_307	307
+307	val_307	307
+307	val_307	307
+308	val_308	308
+309	val_309	309
+309	val_309	309
+309	val_309	309
+309	val_309	309
+310	val_310	310
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+315	val_315	315
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+317	val_317	317
+317	val_317	317
+317	val_317	317
+317	val_317	317
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+321	val_321	321
+321	val_321	321
+321	val_321	321
+321	val_321	321
+322	val_322	322
+322	val_322	322
+322	val_322	322
+322	val_322	322
+323	val_323	323
+325	val_325	325
+325	val_325	325
+325	val_325	325
+325	val_325	325
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+33	val_33	33
+331	val_331	331
+331	val_331	331
+331	val_331	331
+331	val_331	331
+332	val_332	332
+333	val_333	333
+333	val_333	333
+333	val_333	333
+333	val_333	333
+335	val_335	335
+336	val_336	336
+338	val_338	338
+339	val_339	339
+34	val_34	34
+341	val_341	341
+342	val_342	342
+342	val_342	342
+342	val_342	342
+342	val_342	342
+344	val_344	344
+344	val_344	344
+344	val_344	344
+344	val_344	344
+345	val_345	345
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+351	val_351	351
+353	val_353	353
+353	val_353	353
+353	val_353	353
+353	val_353	353
+356	val_356	356
+360	val_360	360
+362	val_362	362
+364	val_364	364
+365	val_365	365
+366	val_366	366
+367	val_367	367
+367	val_367	367
+367	val_367	367
+367	val_367	367
+368	val_368	368
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+37	val_37	37
+37	val_37	37
+37	val_37	37
+37	val_37	37
+373	val_373	373
+374	val_374	374
+375	val_375	375
+377	val_377	377
+378	val_378	378
+379	val_379	379
+382	val_382	382
+382	val_382	382
+382	val_382	382
+382	val_382	382
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+386	val_386	386
+389	val_389	389
+392	val_392	392
+393	val_393	393
+394	val_394	394
+395	val_395	395
+395	val_395	395
+395	val_395	395
+395	val_395	395
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+397	val_397	397
+397	val_397	397
+397	val_397	397
+397	val_397	397
+399	val_399	399
+399	val_399	399
+399	val_399	399
+399	val_399	399
+4	val_4	4
+400	val_400	400
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+402	val_402	402
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+404	val_404	404
+404	val_404	404
+404	val_404	404
+404	val_404	404
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+407	val_407	407
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+41	val_41	41
+411	val_411	411
+413	val_413	413
+413	val_413	413
+413	val_413	413
+413	val_413	413
+414	val_414	414
+414	val_414	414
+414	val_414	414
+414	val_414	414
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+418	val_418	418
+419	val_419	419
+42	val_42	42
+42	val_42	42
+42	val_42	42
+42	val_42	42
+421	val_421	421
+424	val_424	424
+424	val_424	424
+424	val_424	424
+424	val_424	424
+427	val_427	427
+429	val_429	429
+429	val_429	429
+429	val_429	429
+429	val_429	429
+43	val_43	43
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+432	val_432	432
+435	val_435	435
+436	val_436	436
+437	val_437	437
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+439	val_439	439
+439	val_439	439
+439	val_439	439
+439	val_439	439
+44	val_44	44
+443	val_443	443
+444	val_444	444
+446	val_446	446
+448	val_448	448
+449	val_449	449
+452	val_452	452
+453	val_453	453
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+455	val_455	455
+457	val_457	457
+458	val_458	458
+458	val_458	458
+458	val_458	458
+458	val_458	458
+459	val_459	459
+459	val_459	459
+459	val_459	459
+459	val_459	459
+460	val_460	460
+462	val_462	462
+462	val_462	462
+462	val_462	462
+462	val_462	462
+463	val_463	463
+463	val_463	463
+463	val_463	463
+463	val_463	463
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+467	val_467	467
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+47	val_47	47
+470	val_470	470
+472	val_472	472
+475	val_475	475
+477	val_477	477
+478	val_478	478
+478	val_478	478
+478	val_478	478
+478	val_478	478
+479	val_479	479
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+481	val_481	481
+482	val_482	482
+483	val_483	483
+484	val_484	484
+485	val_485	485
+487	val_487	487
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+490	val_490	490
+491	val_491	491
+492	val_492	492
+492	val_492	492
+492	val_492	492
+492	val_492	492
+493	val_493	493
+494	val_494	494
+495	val_495	495
+496	val_496	496
+497	val_497	497
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+51	val_51	51
+51	val_51	51
+51	val_51	51
+51	val_51	51
+53	val_53	53
+54	val_54	54
+57	val_57	57
+58	val_58	58
+58	val_58	58
+58	val_58	58
+58	val_58	58
+64	val_64	64
+65	val_65	65
+66	val_66	66
+67	val_67	67
+67	val_67	67
+67	val_67	67
+67	val_67	67
+69	val_69	69
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+72	val_72	72
+72	val_72	72
+72	val_72	72
+72	val_72	72
+74	val_74	74
+76	val_76	76
+76	val_76	76
+76	val_76	76
+76	val_76	76
+77	val_77	77
+78	val_78	78
+8	val_8	8
+80	val_80	80
+82	val_82	82
+83	val_83	83
+83	val_83	83
+83	val_83	83
+83	val_83	83
+84	val_84	84
+84	val_84	84
+84	val_84	84
+84	val_84	84
+85	val_85	85
+86	val_86	86
+87	val_87	87
+9	val_9	9
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+92	val_92	92
+95	val_95	95
+95	val_95	95
+95	val_95	95
+95	val_95	95
+96	val_96	96
+97	val_97	97
+97	val_97	97
+97	val_97	97
+97	val_97	97
+98	val_98	98
+98	val_98	98
+98	val_98	98
+98	val_98	98
+PREHOOK: query: SELECT * FROM db1.v4
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@v4
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v4
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@v4
+#### A masked pattern was here ####
+238	val_238
+86	val_86
+311	val_311
+27	val_27
+165	val_165
+409	val_409
+255	val_255
+278	val_278
+98	val_98
+484	val_484
+265	val_265
+193	val_193
+401	val_401
+150	val_150
+273	val_273
+224	val_224
+369	val_369
+66	val_66
+128	val_128
+213	val_213
+146	val_146
+406	val_406
+429	val_429
+374	val_374
+152	val_152
+469	val_469
+145	val_145
+495	val_495
+37	val_37
+327	val_327
+281	val_281
+277	val_277
+209	val_209
+15	val_15
+82	val_82
+403	val_403
+166	val_166
+417	val_417
+430	val_430
+252	val_252
+292	val_292
+219	val_219
+287	val_287
+153	val_153
+193	val_193
+338	val_338
+446	val_446
+459	val_459
+394	val_394
+237	val_237
+482	val_482
+174	val_174
+413	val_413
+494	val_494
+207	val_207
+199	val_199
+466	val_466
+208	val_208
+174	val_174
+399	val_399
+396	val_396
+247	val_247
+417	val_417
+489	val_489
+162	val_162
+377	val_377
+397	val_397
+309	val_309
+365	val_365
+266	val_266
+439	val_439
+342	val_342
+367	val_367
+325	val_325
+167	val_167
+195	val_195
+475	val_475
+17	val_17
+113	val_113
+155	val_155
+203	val_203
+339	val_339
+0	val_0
+455	val_455
+128	val_128
+311	val_311
+316	val_316
+57	val_57
+302	val_302
+205	val_205
+149	val_149
+438	val_438
+345	val_345
+129	val_129
+170	val_170
+20	val_20
+489	val_489
+157	val_157
+378	val_378
+221	val_221
+92	val_92
+111	val_111
+47	val_47
+72	val_72
+4	val_4
+280	val_280
+35	val_35
+427	val_427
+277	val_277
+208	val_208
+356	val_356
+399	val_399
+169	val_169
+382	val_382
+498	val_498
+125	val_125
+386	val_386
+437	val_437
+469	val_469
+192	val_192
+286	val_286
+187	val_187
+176	val_176
+54	val_54
+459	val_459
+51	val_51
+138	val_138
+103	val_103
+239	val_239
+213	val_213
+216	val_216
+430	val_430
+278	val_278
+176	val_176
+289	val_289
+221	val_221
+65	val_65
+318	val_318
+332	val_332
+311	val_311
+275	val_275
+137	val_137
+241	val_241
+83	val_83
+333	val_333
+180	val_180
+284	val_284
+12	val_12
+230	val_230
+181	val_181
+67	val_67
+260	val_260
+404	val_404
+384	val_384
+489	val_489
+353	val_353
+373	val_373
+272	val_272
+138	val_138
+217	val_217
+84	val_84
+348	val_348
+466	val_466
+58	val_58
+8	val_8
+411	val_411
+230	val_230
+208	val_208
+348	val_348
+24	val_24
+463	val_463
+431	val_431
+179	val_179
+172	val_172
+42	val_42
+129	val_129
+158	val_158
+119	val_119
+496	val_496
+0	val_0
+322	val_322
+197	val_197
+468	val_468
+393	val_393
+454	val_454
+100	val_100
+298	val_298
+199	val_199
+191	val_191
+418	val_418
+96	val_96
+26	val_26
+165	val_165
+327	val_327
+230	val_230
+205	val_205
+120	val_120
+131	val_131
+51	val_51
+404	val_404
+43	val_43
+436	val_436
+156	val_156
+469	val_469
+468	val_468
+308	val_308
+95	val_95
+196	val_196
+288	val_288
+481	val_481
+457	val_457
+98	val_98
+282	val_282
+197	val_197
+187	val_187
+318	val_318
+318	val_318
+409	val_409
+470	val_470
+137	val_137
+369	val_369
+316	val_316
+169	val_169
+413	val_413
+85	val_85
+77	val_77
+0	val_0
+490	val_490
+87	val_87
+364	val_364
+179	val_179
+118	val_118
+134	val_134
+395	val_395
+282	val_282
+138	val_138
+238	val_238
+419	val_419
+15	val_15
+118	val_118
+72	val_72
+90	val_90
+307	val_307
+19	val_19
+435	val_435
+10	val_10
+277	val_277
+273	val_273
+306	val_306
+224	val_224
+309	val_309
+389	val_389
+327	val_327
+242	val_242
+369	val_369
+392	val_392
+272	val_272
+331	val_331
+401	val_401
+242	val_242
+452	val_452
+177	val_177
+226	val_226
+5	val_5
+497	val_497
+402	val_402
+396	val_396
+317	val_317
+395	val_395
+58	val_58
+35	val_35
+336	val_336
+95	val_95
+11	val_11
+168	val_168
+34	val_34
+229	val_229
+233	val_233
+143	val_143
+472	val_472
+322	val_322
+498	val_498
+160	val_160
+195	val_195
+42	val_42
+321	val_321
+430	val_430
+119	val_119
+489	val_489
+458	val_458
+78	val_78
+76	val_76
+41	val_41
+223	val_223
+492	val_492
+149	val_149
+449	val_449
+218	val_218
+228	val_228
+138	val_138
+453	val_453
+30	val_30
+209	val_209
+64	val_64
+468	val_468
+76	val_76
+74	val_74
+342	val_342
+69	val_69
+230	val_230
+33	val_33
+368	val_368
+103	val_103
+296	val_296
+113	val_113
+216	val_216
+367	val_367
+344	val_344
+167	val_167
+274	val_274
+219	val_219
+239	val_239
+485	val_485
+116	val_116
+223	val_223
+256	val_256
+263	val_263
+70	val_70
+487	val_487
+480	val_480
+401	val_401
+288	val_288
+191	val_191
+5	val_5
+244	val_244
+438	val_438
+128	val_128
+467	val_467
+432	val_432
+202	val_202
+316	val_316
+229	val_229
+469	val_469
+463	val_463
+280	val_280
+2	val_2
+35	val_35
+283	val_283
+331	val_331
+235	val_235
+80	val_80
+44	val_44
+193	val_193
+321	val_321
+335	val_335
+104	val_104
+466	val_466
+366	val_366
+175	val_175
+403	val_403
+483	val_483
+53	val_53
+105	val_105
+257	val_257
+406	val_406
+409	val_409
+190	val_190
+406	val_406
+401	val_401
+114	val_114
+258	val_258
+90	val_90
+203	val_203
+262	val_262
+348	val_348
+424	val_424
+12	val_12
+396	val_396
+201	val_201
+217	val_217
+164	val_164
+431	val_431
+454	val_454
+478	val_478
+298	val_298
+125	val_125
+431	val_431
+164	val_164
+424	val_424
+187	val_187
+382	val_382
+5	val_5
+70	val_70
+397	val_397
+480	val_480
+291	val_291
+24	val_24
+351	val_351
+255	val_255
+104	val_104
+70	val_70
+163	val_163
+438	val_438
+119	val_119
+414	val_414
+200	val_200
+491	val_491
+237	val_237
+439	val_439
+360	val_360
+248	val_248
+479	val_479
+305	val_305
+417	val_417
+199	val_199
+444	val_444
+120	val_120
+429	val_429
+169	val_169
+443	val_443
+323	val_323
+325	val_325
+277	val_277
+230	val_230
+478	val_478
+178	val_178
+468	val_468
+310	val_310
+317	val_317
+333	val_333
+493	val_493
+460	val_460
+207	val_207
+249	val_249
+265	val_265
+480	val_480
+83	val_83
+136	val_136
+353	val_353
+172	val_172
+214	val_214
+462	val_462
+233	val_233
+406	val_406
+133	val_133
+175	val_175
+189	val_189
+454	val_454
+375	val_375
+401	val_401
+421	val_421
+407	val_407
+384	val_384
+256	val_256
+26	val_26
+134	val_134
+67	val_67
+384	val_384
+379	val_379
+18	val_18
+462	val_462
+492	val_492
+100	val_100
+298	val_298
+9	val_9
+341	val_341
+498	val_498
+146	val_146
+458	val_458
+362	val_362
+186	val_186
+285	val_285
+348	val_348
+167	val_167
+18	val_18
+273	val_273
+183	val_183
+281	val_281
+344	val_344
+97	val_97
+469	val_469
+315	val_315
+84	val_84
+28	val_28
+37	val_37
+448	val_448
+152	val_152
+348	val_348
+307	val_307
+194	val_194
+414	val_414
+477	val_477
+222	val_222
+126	val_126
+90	val_90
+169	val_169
+403	val_403
+400	val_400
+200	val_200
+97	val_97
+PREHOOK: query: SELECT * FROM db1.v5
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@v5
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v5
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@v5
+#### A masked pattern was here ####
+238	val_238
+86	val_86
+311	val_311
+27	val_27
+165	val_165
+409	val_409
+255	val_255
+278	val_278
+98	val_98
+484	val_484
+265	val_265
+193	val_193
+401	val_401
+150	val_150
+273	val_273
+224	val_224
+369	val_369
+66	val_66
+128	val_128
+213	val_213
+146	val_146
+406	val_406
+429	val_429
+374	val_374
+152	val_152
+469	val_469
+145	val_145
+495	val_495
+37	val_37
+327	val_327
+281	val_281
+277	val_277
+209	val_209
+15	val_15
+82	val_82
+403	val_403
+166	val_166
+417	val_417
+430	val_430
+252	val_252
+292	val_292
+219	val_219
+287	val_287
+153	val_153
+193	val_193
+338	val_338
+446	val_446
+459	val_459
+394	val_394
+237	val_237
+482	val_482
+174	val_174
+413	val_413
+494	val_494
+207	val_207
+199	val_199
+466	val_466
+208	val_208
+174	val_174
+399	val_399
+396	val_396
+247	val_247
+417	val_417
+489	val_489
+162	val_162
+377	val_377
+397	val_397
+309	val_309
+365	val_365
+266	val_266
+439	val_439
+342	val_342
+367	val_367
+325	val_325
+167	val_167
+195	val_195
+475	val_475
+17	val_17
+113	val_113
+155	val_155
+203	val_203
+339	val_339
+0	val_0
+455	val_455
+128	val_128
+311	val_311
+316	val_316
+57	val_57
+302	val_302
+205	val_205
+149	val_149
+438	val_438
+345	val_345
+129	val_129
+170	val_170
+20	val_20
+489	val_489
+157	val_157
+378	val_378
+221	val_221
+92	val_92
+111	val_111
+47	val_47
+72	val_72
+4	val_4
+280	val_280
+35	val_35
+427	val_427
+277	val_277
+208	val_208
+356	val_356
+399	val_399
+169	val_169
+382	val_382
+498	val_498
+125	val_125
+386	val_386
+437	val_437
+469	val_469
+192	val_192
+286	val_286
+187	val_187
+176	val_176
+54	val_54
+459	val_459
+51	val_51
+138	val_138
+103	val_103
+239	val_239
+213	val_213
+216	val_216
+430	val_430
+278	val_278
+176	val_176
+289	val_289
+221	val_221
+65	val_65
+318	val_318
+332	val_332
+311	val_311
+275	val_275
+137	val_137
+241	val_241
+83	val_83
+333	val_333
+180	val_180
+284	val_284
+12	val_12
+230	val_230
+181	val_181
+67	val_67
+260	val_260
+404	val_404
+384	val_384
+489	val_489
+353	val_353
+373	val_373
+272	val_272
+138	val_138
+217	val_217
+84	val_84
+348	val_348
+466	val_466
+58	val_58
+8	val_8
+411	val_411
+230	val_230
+208	val_208
+348	val_348
+24	val_24
+463	val_463
+431	val_431
+179	val_179
+172	val_172
+42	val_42
+129	val_129
+158	val_158
+119	val_119
+496	val_496
+0	val_0
+322	val_322
+197	val_197
+468	val_468
+393	val_393
+454	val_454
+100	val_100
+298	val_298
+199	val_199
+191	val_191
+418	val_418
+96	val_96
+26	val_26
+165	val_165
+327	val_327
+230	val_230
+205	val_205
+120	val_120
+131	val_131
+51	val_51
+404	val_404
+43	val_43
+436	val_436
+156	val_156
+469	val_469
+468	val_468
+308	val_308
+95	val_95
+196	val_196
+288	val_288
+481	val_481
+457	val_457
+98	val_98
+282	val_282
+197	val_197
+187	val_187
+318	val_318
+318	val_318
+409	val_409
+470	val_470
+137	val_137
+369	val_369
+316	val_316
+169	val_169
+413	val_413
+85	val_85
+77	val_77
+0	val_0
+490	val_490
+87	val_87
+364	val_364
+179	val_179
+118	val_118
+134	val_134
+395	val_395
+282	val_282
+138	val_138
+238	val_238
+419	val_419
+15	val_15
+118	val_118
+72	val_72
+90	val_90
+307	val_307
+19	val_19
+435	val_435
+10	val_10
+277	val_277
+273	val_273
+306	val_306
+224	val_224
+309	val_309
+389	val_389
+327	val_327
+242	val_242
+369	val_369
+392	val_392
+272	val_272
+331	val_331
+401	val_401
+242	val_242
+452	val_452
+177	val_177
+226	val_226
+5	val_5
+497	val_497
+402	val_402
+396	val_396
+317	val_317
+395	val_395
+58	val_58
+35	val_35
+336	val_336
+95	val_95
+11	val_11
+168	val_168
+34	val_34
+229	val_229
+233	val_233
+143	val_143
+472	val_472
+322	val_322
+498	val_498
+160	val_160
+195	val_195
+42	val_42
+321	val_321
+430	val_430
+119	val_119
+489	val_489
+458	val_458
+78	val_78
+76	val_76
+41	val_41
+223	val_223
+492	val_492
+149	val_149
+449	val_449
+218	val_218
+228	val_228
+138	val_138
+453	val_453
+30	val_30
+209	val_209
+64	val_64
+468	val_468
+76	val_76
+74	val_74
+342	val_342
+69	val_69
+230	val_230
+33	val_33
+368	val_368
+103	val_103
+296	val_296
+113	val_113
+216	val_216
+367	val_367
+344	val_344
+167	val_167
+274	val_274
+219	val_219
+239	val_239
+485	val_485
+116	val_116
+223	val_223
+256	val_256
+263	val_263
+70	val_70
+487	val_487
+480	val_480
+401	val_401
+288	val_288
+191	val_191
+5	val_5
+244	val_244
+438	val_438
+128	val_128
+467	val_467
+432	val_432
+202	val_202
+316	val_316
+229	val_229
+469	val_469
+463	val_463
+280	val_280
+2	val_2
+35	val_35
+283	val_283
+331	val_331
+235	val_235
+80	val_80
+44	val_44
+193	val_193
+321	val_321
+335	val_335
+104	val_104
+466	val_466
+366	val_366
+175	val_175
+403	val_403
+483	val_483
+53	val_53
+105	val_105
+257	val_257
+406	val_406
+409	val_409
+190	val_190
+406	val_406
+401	val_401
+114	val_114
+258	val_258
+90	val_90
+203	val_203
+262	val_262
+348	val_348
+424	val_424
+12	val_12
+396	val_396
+201	val_201
+217	val_217
+164	val_164
+431	val_431
+454	val_454
+478	val_478
+298	val_298
+125	val_125
+431	val_431
+164	val_164
+424	val_424
+187	val_187
+382	val_382
+5	val_5
+70	val_70
+397	val_397
+480	val_480
+291	val_291
+24	val_24
+351	val_351
+255	val_255
+104	val_104
+70	val_70
+163	val_163
+438	val_438
+119	val_119
+414	val_414
+200	val_200
+491	val_491
+237	val_237
+439	val_439
+360	val_360
+248	val_248
+479	val_479
+305	val_305
+417	val_417
+199	val_199
+444	val_444
+120	val_120
+429	val_429
+169	val_169
+443	val_443
+323	val_323
+325	val_325
+277	val_277
+230	val_230
+478	val_478
+178	val_178
+468	val_468
+310	val_310
+317	val_317
+333	val_333
+493	val_493
+460	val_460
+207	val_207
+249	val_249
+265	val_265
+480	val_480
+83	val_83
+136	val_136
+353	val_353
+172	val_172
+214	val_214
+462	val_462
+233	val_233
+406	val_406
+133	val_133
+175	val_175
+189	val_189
+454	val_454
+375	val_375
+401	val_401
+421	val_421
+407	val_407
+384	val_384
+256	val_256
+26	val_26
+134	val_134
+67	val_67
+384	val_384
+379	val_379
+18	val_18
+462	val_462
+492	val_492
+100	val_100
+298	val_298
+9	val_9
+341	val_341
+498	val_498
+146	val_146
+458	val_458
+362	val_362
+186	val_186
+285	val_285
+348	val_348
+167	val_167
+18	val_18
+273	val_273
+183	val_183
+281	val_281
+344	val_344
+97	val_97
+469	val_469
+315	val_315
+84	val_84
+28	val_28
+37	val_37
+448	val_448
+152	val_152
+348	val_348
+307	val_307
+194	val_194
+414	val_414
+477	val_477
+222	val_222
+126	val_126
+90	val_90
+169	val_169
+403	val_403
+400	val_400
+200	val_200
+97	val_97
+PREHOOK: query: SELECT * FROM db1.v6
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@table2
+PREHOOK: Input: db1@v6
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v6
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@table2
+POSTHOOK: Input: db1@v6
+#### A masked pattern was here ####
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+0	val_0	0
+10	val_10	10
+100	val_100	100
+100	val_100	100
+100	val_100	100
+100	val_100	100
+103	val_103	103
+103	val_103	103
+103	val_103	103
+103	val_103	103
+104	val_104	104
+104	val_104	104
+104	val_104	104
+104	val_104	104
+105	val_105	105
+11	val_11	11
+111	val_111	111
+113	val_113	113
+113	val_113	113
+113	val_113	113
+113	val_113	113
+114	val_114	114
+116	val_116	116
+118	val_118	118
+118	val_118	118
+118	val_118	118
+118	val_118	118
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+119	val_119	119
+12	val_12	12
+12	val_12	12
+12	val_12	12
+12	val_12	12
+120	val_120	120
+120	val_120	120
+120	val_120	120
+120	val_120	120
+125	val_125	125
+125	val_125	125
+125	val_125	125
+125	val_125	125
+126	val_126	126
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+128	val_128	128
+129	val_129	129
+129	val_129	129
+129	val_129	129
+129	val_129	129
+131	val_131	131
+133	val_133	133
+134	val_134	134
+134	val_134	134
+134	val_134	134
+134	val_134	134
+136	val_136	136
+137	val_137	137
+137	val_137	137
+137	val_137	137
+137	val_137	137
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+138	val_138	138
+143	val_143	143
+145	val_145	145
+146	val_146	146
+146	val_146	146
+146	val_146	146
+146	val_146	146
+149	val_149	149
+149	val_149	149
+149	val_149	149
+149	val_149	149
+15	val_15	15
+15	val_15	15
+15	val_15	15
+15	val_15	15
+150	val_150	150
+152	val_152	152
+152	val_152	152
+152	val_152	152
+152	val_152	152
+153	val_153	153
+155	val_155	155
+156	val_156	156
+157	val_157	157
+158	val_158	158
+160	val_160	160
+162	val_162	162
+163	val_163	163
+164	val_164	164
+164	val_164	164
+164	val_164	164
+164	val_164	164
+165	val_165	165
+165	val_165	165
+165	val_165	165
+165	val_165	165
+166	val_166	166
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+167	val_167	167
+168	val_168	168
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+169	val_169	169
+17	val_17	17
+170	val_170	170
+172	val_172	172
+172	val_172	172
+172	val_172	172
+172	val_172	172
+174	val_174	174
+174	val_174	174
+174	val_174	174
+174	val_174	174
+175	val_175	175
+175	val_175	175
+175	val_175	175
+175	val_175	175
+176	val_176	176
+176	val_176	176
+176	val_176	176
+176	val_176	176
+177	val_177	177
+178	val_178	178
+179	val_179	179
+179	val_179	179
+179	val_179	179
+179	val_179	179
+18	val_18	18
+18	val_18	18
+18	val_18	18
+18	val_18	18
+180	val_180	180
+181	val_181	181
+183	val_183	183
+186	val_186	186
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+187	val_187	187
+189	val_189	189
+19	val_19	19
+190	val_190	190
+191	val_191	191
+191	val_191	191
+191	val_191	191
+191	val_191	191
+192	val_192	192
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+193	val_193	193
+194	val_194	194
+195	val_195	195
+195	val_195	195
+195	val_195	195
+195	val_195	195
+196	val_196	196
+197	val_197	197
+197	val_197	197
+197	val_197	197
+197	val_197	197
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+199	val_199	199
+2	val_2	2
+20	val_20	20
+200	val_200	200
+200	val_200	200
+200	val_200	200
+200	val_200	200
+201	val_201	201
+202	val_202	202
+203	val_203	203
+203	val_203	203
+203	val_203	203
+203	val_203	203
+205	val_205	205
+205	val_205	205
+205	val_205	205
+205	val_205	205
+207	val_207	207
+207	val_207	207
+207	val_207	207
+207	val_207	207
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+208	val_208	208
+209	val_209	209
+209	val_209	209
+209	val_209	209
+209	val_209	209
+213	val_213	213
+213	val_213	213
+213	val_213	213
+213	val_213	213
+214	val_214	214
+216	val_216	216
+216	val_216	216
+216	val_216	216
+216	val_216	216
+217	val_217	217
+217	val_217	217
+217	val_217	217
+217	val_217	217
+218	val_218	218
+219	val_219	219
+219	val_219	219
+219	val_219	219
+219	val_219	219
+221	val_221	221
+221	val_221	221
+221	val_221	221
+221	val_221	221
+222	val_222	222
+223	val_223	223
+223	val_223	223
+223	val_223	223
+223	val_223	223
+224	val_224	224
+224	val_224	224
+224	val_224	224
+224	val_224	224
+226	val_226	226
+228	val_228	228
+229	val_229	229
+229	val_229	229
+229	val_229	229
+229	val_229	229
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+230	val_230	230
+233	val_233	233
+233	val_233	233
+233	val_233	233
+233	val_233	233
+235	val_235	235
+237	val_237	237
+237	val_237	237
+237	val_237	237
+237	val_237	237
+238	val_238	238
+238	val_238	238
+238	val_238	238
+238	val_238	238
+239	val_239	239
+239	val_239	239
+239	val_239	239
+239	val_239	239
+24	val_24	24
+24	val_24	24
+24	val_24	24
+24	val_24	24
+241	val_241	241
+242	val_242	242
+242	val_242	242
+242	val_242	242
+242	val_242	242
+244	val_244	244
+247	val_247	247
+248	val_248	248
+249	val_249	249
+252	val_252	252
+255	val_255	255
+255	val_255	255
+255	val_255	255
+255	val_255	255
+256	val_256	256
+256	val_256	256
+256	val_256	256
+256	val_256	256
+257	val_257	257
+258	val_258	258
+26	val_26	26
+26	val_26	26
+26	val_26	26
+26	val_26	26
+260	val_260	260
+262	val_262	262
+263	val_263	263
+265	val_265	265
+265	val_265	265
+265	val_265	265
+265	val_265	265
+266	val_266	266
+27	val_27	27
+272	val_272	272
+272	val_272	272
+272	val_272	272
+272	val_272	272
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+273	val_273	273
+274	val_274	274
+275	val_275	275
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+277	val_277	277
+278	val_278	278
+278	val_278	278
+278	val_278	278
+278	val_278	278
+28	val_28	28
+280	val_280	280
+280	val_280	280
+280	val_280	280
+280	val_280	280
+281	val_281	281
+281	val_281	281
+281	val_281	281
+281	val_281	281
+282	val_282	282
+282	val_282	282
+282	val_282	282
+282	val_282	282
+283	val_283	283
+284	val_284	284
+285	val_285	285
+286	val_286	286
+287	val_287	287
+288	val_288	288
+288	val_288	288
+288	val_288	288
+288	val_288	288
+289	val_289	289
+291	val_291	291
+292	val_292	292
+296	val_296	296
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+298	val_298	298
+30	val_30	30
+302	val_302	302
+305	val_305	305
+306	val_306	306
+307	val_307	307
+307	val_307	307
+307	val_307	307
+307	val_307	307
+308	val_308	308
+309	val_309	309
+309	val_309	309
+309	val_309	309
+309	val_309	309
+310	val_310	310
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+311	val_311	311
+315	val_315	315
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+316	val_316	316
+317	val_317	317
+317	val_317	317
+317	val_317	317
+317	val_317	317
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+318	val_318	318
+321	val_321	321
+321	val_321	321
+321	val_321	321
+321	val_321	321
+322	val_322	322
+322	val_322	322
+322	val_322	322
+322	val_322	322
+323	val_323	323
+325	val_325	325
+325	val_325	325
+325	val_325	325
+325	val_325	325
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+327	val_327	327
+33	val_33	33
+331	val_331	331
+331	val_331	331
+331	val_331	331
+331	val_331	331
+332	val_332	332
+333	val_333	333
+333	val_333	333
+333	val_333	333
+333	val_333	333
+335	val_335	335
+336	val_336	336
+338	val_338	338
+339	val_339	339
+34	val_34	34
+341	val_341	341
+342	val_342	342
+342	val_342	342
+342	val_342	342
+342	val_342	342
+344	val_344	344
+344	val_344	344
+344	val_344	344
+344	val_344	344
+345	val_345	345
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+348	val_348	348
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+35	val_35	35
+351	val_351	351
+353	val_353	353
+353	val_353	353
+353	val_353	353
+353	val_353	353
+356	val_356	356
+360	val_360	360
+362	val_362	362
+364	val_364	364
+365	val_365	365
+366	val_366	366
+367	val_367	367
+367	val_367	367
+367	val_367	367
+367	val_367	367
+368	val_368	368
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+369	val_369	369
+37	val_37	37
+37	val_37	37
+37	val_37	37
+37	val_37	37
+373	val_373	373
+374	val_374	374
+375	val_375	375
+377	val_377	377
+378	val_378	378
+379	val_379	379
+382	val_382	382
+382	val_382	382
+382	val_382	382
+382	val_382	382
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+384	val_384	384
+386	val_386	386
+389	val_389	389
+392	val_392	392
+393	val_393	393
+394	val_394	394
+395	val_395	395
+395	val_395	395
+395	val_395	395
+395	val_395	395
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+396	val_396	396
+397	val_397	397
+397	val_397	397
+397	val_397	397
+397	val_397	397
+399	val_399	399
+399	val_399	399
+399	val_399	399
+399	val_399	399
+4	val_4	4
+400	val_400	400
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+401	val_401	401
+402	val_402	402
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+403	val_403	403
+404	val_404	404
+404	val_404	404
+404	val_404	404
+404	val_404	404
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+406	val_406	406
+407	val_407	407
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+409	val_409	409
+41	val_41	41
+411	val_411	411
+413	val_413	413
+413	val_413	413
+413	val_413	413
+413	val_413	413
+414	val_414	414
+414	val_414	414
+414	val_414	414
+414	val_414	414
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+417	val_417	417
+418	val_418	418
+419	val_419	419
+42	val_42	42
+42	val_42	42
+42	val_42	42
+42	val_42	42
+421	val_421	421
+424	val_424	424
+424	val_424	424
+424	val_424	424
+424	val_424	424
+427	val_427	427
+429	val_429	429
+429	val_429	429
+429	val_429	429
+429	val_429	429
+43	val_43	43
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+430	val_430	430
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+431	val_431	431
+432	val_432	432
+435	val_435	435
+436	val_436	436
+437	val_437	437
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+438	val_438	438
+439	val_439	439
+439	val_439	439
+439	val_439	439
+439	val_439	439
+44	val_44	44
+443	val_443	443
+444	val_444	444
+446	val_446	446
+448	val_448	448
+449	val_449	449
+452	val_452	452
+453	val_453	453
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+454	val_454	454
+455	val_455	455
+457	val_457	457
+458	val_458	458
+458	val_458	458
+458	val_458	458
+458	val_458	458
+459	val_459	459
+459	val_459	459
+459	val_459	459
+459	val_459	459
+460	val_460	460
+462	val_462	462
+462	val_462	462
+462	val_462	462
+462	val_462	462
+463	val_463	463
+463	val_463	463
+463	val_463	463
+463	val_463	463
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+466	val_466	466
+467	val_467	467
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+468	val_468	468
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+469	val_469	469
+47	val_47	47
+470	val_470	470
+472	val_472	472
+475	val_475	475
+477	val_477	477
+478	val_478	478
+478	val_478	478
+478	val_478	478
+478	val_478	478
+479	val_479	479
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+480	val_480	480
+481	val_481	481
+482	val_482	482
+483	val_483	483
+484	val_484	484
+485	val_485	485
+487	val_487	487
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+489	val_489	489
+490	val_490	490
+491	val_491	491
+492	val_492	492
+492	val_492	492
+492	val_492	492
+492	val_492	492
+493	val_493	493
+494	val_494	494
+495	val_495	495
+496	val_496	496
+497	val_497	497
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+498	val_498	498
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+5	val_5	5
+51	val_51	51
+51	val_51	51
+51	val_51	51
+51	val_51	51
+53	val_53	53
+54	val_54	54
+57	val_57	57
+58	val_58	58
+58	val_58	58
+58	val_58	58
+58	val_58	58
+64	val_64	64
+65	val_65	65
+66	val_66	66
+67	val_67	67
+67	val_67	67
+67	val_67	67
+67	val_67	67
+69	val_69	69
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+70	val_70	70
+72	val_72	72
+72	val_72	72
+72	val_72	72
+72	val_72	72
+74	val_74	74
+76	val_76	76
+76	val_76	76
+76	val_76	76
+76	val_76	76
+77	val_77	77
+78	val_78	78
+8	val_8	8
+80	val_80	80
+82	val_82	82
+83	val_83	83
+83	val_83	83
+83	val_83	83
+83	val_83	83
+84	val_84	84
+84	val_84	84
+84	val_84	84
+84	val_84	84
+85	val_85	85
+86	val_86	86
+87	val_87	87
+9	val_9	9
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+90	val_90	90
+92	val_92	92
+95	val_95	95
+95	val_95	95
+95	val_95	95
+95	val_95	95
+96	val_96	96
+97	val_97	97
+97	val_97	97
+97	val_97	97
+97	val_97	97
+98	val_98	98
+98	val_98	98
+98	val_98	98
+98	val_98	98
+PREHOOK: query: SELECT * FROM db1.v7
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@v7
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v7
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@v7
+#### A masked pattern was here ####
+238
+86
+311
+27
+165
+409
+255
+278
+98
+484
+265
+193
+401
+150
+273
+224
+369
+66
+128
+213
+146
+406
+429
+374
+152
+469
+145
+495
+37
+327
+281
+277
+209
+15
+82
+403
+166
+417
+430
+252
+292
+219
+287
+153
+193
+338
+446
+459
+394
+237
+482
+174
+413
+494
+207
+199
+466
+208
+174
+399
+396
+247
+417
+489
+162
+377
+397
+309
+365
+266
+439
+342
+367
+325
+167
+195
+475
+17
+113
+155
+203
+339
+0
+455
+128
+311
+316
+57
+302
+205
+149
+438
+345
+129
+170
+20
+489
+157
+378
+221
+92
+111
+47
+72
+4
+280
+35
+427
+277
+208
+356
+399
+169
+382
+498
+125
+386
+437
+469
+192
+286
+187
+176
+54
+459
+51
+138
+103
+239
+213
+216
+430
+278
+176
+289
+221
+65
+318
+332
+311
+275
+137
+241
+83
+333
+180
+284
+12
+230
+181
+67
+260
+404
+384
+489
+353
+373
+272
+138
+217
+84
+348
+466
+58
+8
+411
+230
+208
+348
+24
+463
+431
+179
+172
+42
+129
+158
+119
+496
+0
+322
+197
+468
+393
+454
+100
+298
+199
+191
+418
+96
+26
+165
+327
+230
+205
+120
+131
+51
+404
+43
+436
+156
+469
+468
+308
+95
+196
+288
+481
+457
+98
+282
+197
+187
+318
+318
+409
+470
+137
+369
+316
+169
+413
+85
+77
+0
+490
+87
+364
+179
+118
+134
+395
+282
+138
+238
+419
+15
+118
+72
+90
+307
+19
+435
+10
+277
+273
+306
+224
+309
+389
+327
+242
+369
+392
+272
+331
+401
+242
+452
+177
+226
+5
+497
+402
+396
+317
+395
+58
+35
+336
+95
+11
+168
+34
+229
+233
+143
+472
+322
+498
+160
+195
+42
+321
+430
+119
+489
+458
+78
+76
+41
+223
+492
+149
+449
+218
+228
+138
+453
+30
+209
+64
+468
+76
+74
+342
+69
+230
+33
+368
+103
+296
+113
+216
+367
+344
+167
+274
+219
+239
+485
+116
+223
+256
+263
+70
+487
+480
+401
+288
+191
+5
+244
+438
+128
+467
+432
+202
+316
+229
+469
+463
+280
+2
+35
+283
+331
+235
+80
+44
+193
+321
+335
+104
+466
+366
+175
+403
+483
+53
+105
+257
+406
+409
+190
+406
+401
+114
+258
+90
+203
+262
+348
+424
+12
+396
+201
+217
+164
+431
+454
+478
+298
+125
+431
+164
+424
+187
+382
+5
+70
+397
+480
+291
+24
+351
+255
+104
+70
+163
+438
+119
+414
+200
+491
+237
+439
+360
+248
+479
+305
+417
+199
+444
+120
+429
+169
+443
+323
+325
+277
+230
+478
+178
+468
+310
+317
+333
+493
+460
+207
+249
+265
+480
+83
+136
+353
+172
+214
+462
+233
+406
+133
+175
+189
+454
+375
+401
+421
+407
+384
+256
+26
+134
+67
+384
+379
+18
+462
+492
+100
+298
+9
+341
+498
+146
+458
+362
+186
+285
+348
+167
+18
+273
+183
+281
+344
+97
+469
+315
+84
+28
+37
+448
+152
+348
+307
+194
+414
+477
+222
+126
+90
+169
+403
+400
+200
+97
+PREHOOK: query: SELECT * FROM db1.v8
+PREHOOK: type: QUERY
+PREHOOK: Input: db1@table1
+PREHOOK: Input: db1@v8
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT * FROM db1.v8
+POSTHOOK: type: QUERY
+POSTHOOK: Input: db1@table1
+POSTHOOK: Input: db1@v8
+#### A masked pattern was here ####
+238
+86
+311
+27
+165
+409
+255
+278
+98
+484
+265
+193
+401
+150
+273
+224
+369
+66
+128
+213
+146
+406
+429
+374
+152
+469
+145
+495
+37
+327
+281
+277
+209
+15
+82
+403
+166
+417
+430
+252
+292
+219
+287
+153
+193
+338
+446
+459
+394
+237
+482
+174
+413
+494
+207
+199
+466
+208
+174
+399
+396
+247
+417
+489
+162
+377
+397
+309
+365
+266
+439
+342
+367
+325
+167
+195
+475
+17
+113
+155
+203
+339
+0
+455
+128
+311
+316
+57
+302
+205
+149
+438
+345
+129
+170
+20
+489
+157
+378
+221
+92
+111
+47
+72
+4
+280
+35
+427
+277
+208
+356
+399
+169
+382
+498
+125
+386
+437
+469
+192
+286
+187
+176
+54
+459
+51
+138
+103
+239
+213
+216
+430
+278
+176
+289
+221
+65
+318
+332
+311
+275
+137
+241
+83
+333
+180
+284
+12
+230
+181
+67
+260
+404
+384
+489
+353
+373
+272
+138
+217
+84
+348
+466
+58
+8
+411
+230
+208
+348
+24
+463
+431
+179
+172
+42
+129
+158
+119
+496
+0
+322
+197
+468
+393
+454
+100
+298
+199
+191
+418
+96
+26
+165
+327
+230
+205
+120
+131
+51
+404
+43
+436
+156
+469
+468
+308
+95
+196
+288
+481
+457
+98
+282
+197
+187
+318
+318
+409
+470
+137
+369
+316
+169
+413
+85
+77
+0
+490
+87
+364
+179
+118
+134
+395
+282
+138
+238
+419
+15
+118
+72
+90
+307
+19
+435
+10
+277
+273
+306
+224
+309
+389
+327
+242
+369
+392
+272
+331
+401
+242
+452
+177
+226
+5
+497
+402
+396
+317
+395
+58
+35
+336
+95
+11
+168
+34
+229
+233
+143
+472
+322
+498
+160
+195
+42
+321
+430
+119
+489
+458
+78
+76
+41
+223
+492
+149
+449
+218
+228
+138
+453
+30
+209
+64
+468
+76
+74
+342
+69
+230
+33
+368
+103
+296
+113
+216
+367
+344
+167
+274
+219
+239
+485
+116
+223
+256
+263
+70
+487
+480
+401
+288
+191
+5
+244
+438
+128
+467
+432
+202
+316
+229
+469
+463
+280
+2
+35
+283
+331
+235
+80
+44
+193
+321
+335
+104
+466
+366
+175
+403
+483
+53
+105
+257
+406
+409
+190
+406
+401
+114
+258
+90
+203
+262
+348
+424
+12
+396
+201
+217
+164
+431
+454
+478
+298
+125
+431
+164
+424
+187
+382
+5
+70
+397
+480
+291
+24
+351
+255
+104
+70
+163
+438
+119
+414
+200
+491
+237
+439
+360
+248
+479
+305
+417
+199
+444
+120
+429
+169
+443
+323
+325
+277
+230
+478
+178
+468
+310
+317
+333
+493
+460
+207
+249
+265
+480
+83
+136
+353
+172
+214
+462
+233
+406
+133
+175
+189
+454
+375
+401
+421
+407
+384
+256
+26
+134
+67
+384
+379
+18
+462
+492
+100
+298
+9
+341
+498
+146
+458
+362
+186
+285
+348
+167
+18
+273
+183
+281
+344
+97
+469
+315
+84
+28
+37
+448
+152
+348
+307
+194
+414
+477
+222
+126
+90
+169
+403
+400
+200
+97
-- 
1.7.0.4


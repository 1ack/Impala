From eaaf4ece6c71778d1c12b3d3c9710f3ac43dadc9 Mon Sep 17 00:00:00 2001
From: Namit Jain <namit@apache.org>
Date: Tue, 15 May 2012 20:06:36 +0000
Subject: [PATCH 059/144] HIVE-2732 Reduce Sink deduplication fails if the child reduce sink is followed by a join
 (Navis via namit)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1338871 13f79535-47bb-0310-9956-ffa450edef68
(cherry picked from commit 3bb63e215d64e19c53296490ff953fba9a37de18)
---
 .../hive/ql/optimizer/ReduceSinkDeDuplication.java |   10 +-
 .../reduce_deduplicate_exclude_join.q              |    3 +
 .../reduce_deduplicate_exclude_join.q.out          |  239 ++++++++++++++++++++
 3 files changed, 249 insertions(+), 3 deletions(-)
 create mode 100644 ql/src/test/queries/clientpositive/reduce_deduplicate_exclude_join.q
 create mode 100644 ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ReduceSinkDeDuplication.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ReduceSinkDeDuplication.java
index 7883617..8d65baa 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ReduceSinkDeDuplication.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ReduceSinkDeDuplication.java
@@ -33,6 +33,7 @@ import org.apache.hadoop.hive.ql.exec.ExtractOperator;
 import org.apache.hadoop.hive.ql.exec.FilterOperator;
 import org.apache.hadoop.hive.ql.exec.ForwardOperator;
 import org.apache.hadoop.hive.ql.exec.GroupByOperator;
+import org.apache.hadoop.hive.ql.exec.JoinOperator;
 import org.apache.hadoop.hive.ql.exec.Operator;
 import org.apache.hadoop.hive.ql.exec.OperatorFactory;
 import org.apache.hadoop.hive.ql.exec.ReduceSinkOperator;
@@ -155,9 +156,12 @@ public class ReduceSinkDeDuplication implements Transform{
         }
 
         List<Operator<? extends Serializable>> childOp = childReduceSink.getChildOperators();
-        if (childOp != null && childOp.size() == 1 && childOp.get(0) instanceof GroupByOperator) {
-          ctx.addRejectedReduceSinkOperator(childReduceSink);
-          return null;
+        if (childOp != null && childOp.size() == 1) {
+          Operator<? extends Serializable> child = childOp.get(0);
+          if (child instanceof GroupByOperator || child instanceof JoinOperator) {
+            ctx.addRejectedReduceSinkOperator(childReduceSink);
+            return null;
+          }
         }
 
         ParseContext pGraphContext = ctx.getPctx();
diff --git a/src/ql/src/test/queries/clientpositive/reduce_deduplicate_exclude_join.q b/src/ql/src/test/queries/clientpositive/reduce_deduplicate_exclude_join.q
new file mode 100644
index 0000000..ff09754
--- /dev/null
+++ b/src/ql/src/test/queries/clientpositive/reduce_deduplicate_exclude_join.q
@@ -0,0 +1,3 @@
+set hive.optimize.reducededuplication=true;
+set hive.auto.convert.join=true;
+explain select * from (select * from src cluster by key) a join src b on a.key = b.key limit 1;
diff --git a/src/ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out b/src/ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out
new file mode 100644
index 0000000..0d6eb3a
--- /dev/null
+++ b/src/ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out
@@ -0,0 +1,239 @@
+PREHOOK: query: explain select * from (select * from src cluster by key) a join src b on a.key = b.key limit 1
+PREHOOK: type: QUERY
+POSTHOOK: query: explain select * from (select * from src cluster by key) a join src b on a.key = b.key limit 1
+POSTHOOK: type: QUERY
+ABSTRACT SYNTAX TREE:
+  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_CLUSTERBY (TOK_TABLE_OR_COL key)))) a) (TOK_TABREF (TOK_TABNAME src) b) (= (. (TOK_TABLE_OR_COL a) key) (. (TOK_TABLE_OR_COL b) key)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_LIMIT 1)))
+
+STAGE DEPENDENCIES:
+  Stage-2 is a root stage
+  Stage-5 depends on stages: Stage-2 , consists of Stage-6, Stage-7, Stage-1
+  Stage-6 has a backup stage: Stage-1
+  Stage-3 depends on stages: Stage-6
+  Stage-7 has a backup stage: Stage-1
+  Stage-4 depends on stages: Stage-7
+  Stage-1
+  Stage-0 is a root stage
+
+STAGE PLANS:
+  Stage: Stage-2
+    Map Reduce
+      Alias -> Map Operator Tree:
+        a:src 
+          TableScan
+            alias: src
+            Select Operator
+              expressions:
+                    expr: key
+                    type: string
+                    expr: value
+                    type: string
+              outputColumnNames: _col0, _col1
+              Reduce Output Operator
+                key expressions:
+                      expr: _col0
+                      type: string
+                sort order: +
+                Map-reduce partition columns:
+                      expr: _col0
+                      type: string
+                tag: -1
+                value expressions:
+                      expr: _col0
+                      type: string
+                      expr: _col1
+                      type: string
+      Reduce Operator Tree:
+        Extract
+          File Output Operator
+            compressed: false
+            GlobalTableId: 0
+            table:
+                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
+
+  Stage: Stage-5
+    Conditional Operator
+
+  Stage: Stage-6
+    Map Reduce Local Work
+      Alias -> Map Local Tables:
+        b 
+          Fetch Operator
+            limit: -1
+      Alias -> Map Local Operator Tree:
+        b 
+          TableScan
+            alias: b
+            HashTable Sink Operator
+              condition expressions:
+                0 {_col0} {_col1}
+                1 {key} {value}
+              handleSkewJoin: false
+              keys:
+                0 [Column[_col0]]
+                1 [Column[key]]
+              Position of Big Table: 0
+
+  Stage: Stage-3
+    Map Reduce
+      Alias -> Map Operator Tree:
+        $INTNAME 
+            Map Join Operator
+              condition map:
+                   Inner Join 0 to 1
+              condition expressions:
+                0 {_col0} {_col1}
+                1 {key} {value}
+              handleSkewJoin: false
+              keys:
+                0 [Column[_col0]]
+                1 [Column[key]]
+              outputColumnNames: _col0, _col1, _col2, _col3
+              Position of Big Table: 0
+              Select Operator
+                expressions:
+                      expr: _col0
+                      type: string
+                      expr: _col1
+                      type: string
+                      expr: _col2
+                      type: string
+                      expr: _col3
+                      type: string
+                outputColumnNames: _col0, _col1, _col2, _col3
+                Limit
+                  File Output Operator
+                    compressed: false
+                    GlobalTableId: 0
+                    table:
+                        input format: org.apache.hadoop.mapred.TextInputFormat
+                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+      Local Work:
+        Map Reduce Local Work
+
+  Stage: Stage-7
+    Map Reduce Local Work
+      Alias -> Map Local Tables:
+        $INTNAME 
+          Fetch Operator
+            limit: -1
+      Alias -> Map Local Operator Tree:
+        $INTNAME 
+            HashTable Sink Operator
+              condition expressions:
+                0 {_col0} {_col1}
+                1 {key} {value}
+              handleSkewJoin: false
+              keys:
+                0 [Column[_col0]]
+                1 [Column[key]]
+              Position of Big Table: 1
+
+  Stage: Stage-4
+    Map Reduce
+      Alias -> Map Operator Tree:
+        b 
+          TableScan
+            alias: b
+            Map Join Operator
+              condition map:
+                   Inner Join 0 to 1
+              condition expressions:
+                0 {_col0} {_col1}
+                1 {key} {value}
+              handleSkewJoin: false
+              keys:
+                0 [Column[_col0]]
+                1 [Column[key]]
+              outputColumnNames: _col0, _col1, _col2, _col3
+              Position of Big Table: 1
+              Select Operator
+                expressions:
+                      expr: _col0
+                      type: string
+                      expr: _col1
+                      type: string
+                      expr: _col2
+                      type: string
+                      expr: _col3
+                      type: string
+                outputColumnNames: _col0, _col1, _col2, _col3
+                Limit
+                  File Output Operator
+                    compressed: false
+                    GlobalTableId: 0
+                    table:
+                        input format: org.apache.hadoop.mapred.TextInputFormat
+                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+      Local Work:
+        Map Reduce Local Work
+
+  Stage: Stage-1
+    Map Reduce
+      Alias -> Map Operator Tree:
+        $INTNAME 
+            Reduce Output Operator
+              key expressions:
+                    expr: _col0
+                    type: string
+              sort order: +
+              Map-reduce partition columns:
+                    expr: _col0
+                    type: string
+              tag: 0
+              value expressions:
+                    expr: _col0
+                    type: string
+                    expr: _col1
+                    type: string
+        b 
+          TableScan
+            alias: b
+            Reduce Output Operator
+              key expressions:
+                    expr: key
+                    type: string
+              sort order: +
+              Map-reduce partition columns:
+                    expr: key
+                    type: string
+              tag: 1
+              value expressions:
+                    expr: key
+                    type: string
+                    expr: value
+                    type: string
+      Reduce Operator Tree:
+        Join Operator
+          condition map:
+               Inner Join 0 to 1
+          condition expressions:
+            0 {VALUE._col0} {VALUE._col1}
+            1 {VALUE._col0} {VALUE._col1}
+          handleSkewJoin: false
+          outputColumnNames: _col0, _col1, _col2, _col3
+          Select Operator
+            expressions:
+                  expr: _col0
+                  type: string
+                  expr: _col1
+                  type: string
+                  expr: _col2
+                  type: string
+                  expr: _col3
+                  type: string
+            outputColumnNames: _col0, _col1, _col2, _col3
+            Limit
+              File Output Operator
+                compressed: false
+                GlobalTableId: 0
+                table:
+                    input format: org.apache.hadoop.mapred.TextInputFormat
+                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+
+  Stage: Stage-0
+    Fetch Operator
+      limit: 1
+
+
-- 
1.7.0.4


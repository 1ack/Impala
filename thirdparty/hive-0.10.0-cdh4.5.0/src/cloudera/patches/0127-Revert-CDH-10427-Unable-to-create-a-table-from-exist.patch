From 04714a283899c90edb2f8febe3b5a9910fc063fa Mon Sep 17 00:00:00 2001
From: xzhang <xzhang@xzdt.(none)>
Date: Tue, 28 May 2013 15:54:14 -0700
Subject: [PATCH 127/218] Revert "CDH-10427 Unable to create a table from existing file if file path has spaces"

This reverts commit 38e7637b1d2234c4534a564d6ecaf03f82fe9491. Will check it in again after fixing the failed test
cases.
---
 .../org/apache/hadoop/hive/ql/parse/EximUtil.java  |    2 +-
 .../hadoop/hive/ql/parse/LoadSemanticAnalyzer.java |   10 +++++-----
 .../load_file_with_space_in_the_name.q             |    5 -----
 .../load_file_with_space_in_the_name.q.out         |   17 -----------------
 4 files changed, 6 insertions(+), 28 deletions(-)
 delete mode 100644 ql/src/test/queries/clientpositive/load_file_with_space_in_the_name.q
 delete mode 100644 ql/src/test/results/clientpositive/load_file_with_space_in_the_name.q.out

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java
index 7ee9e26..3031d1c 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/EximUtil.java
@@ -155,7 +155,7 @@ public class EximUtil {
       } catch (URISyntaxException e) {
         throw new SemanticException(ErrorMsg.INVALID_PATH.getMsg(), e);
       }
-      return uri.getPath();
+      return uri.toString();
     } else {
       //no-op for non-test mode for now
       return location;
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java
index 9bc7c81..9400acb 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/LoadSemanticAnalyzer.java
@@ -84,7 +84,7 @@ public class LoadSemanticAnalyzer extends BaseSemanticAnalyzer {
     // directory
     if (!path.startsWith("/")) {
       if (isLocal) {
-        path = new Path(System.getProperty("user.dir"), path).toUri().getPath();
+        path = new Path(System.getProperty("user.dir"), path).toUri().toString();
       } else {
         path = new Path(new Path("/user/" + System.getProperty("user.name")),
           path).toString();
@@ -151,8 +151,8 @@ public class LoadSemanticAnalyzer extends BaseSemanticAnalyzer {
     if (!isLocal
         && (!StringUtils.equals(fromURI.getScheme(), toURI.getScheme()) || !StringUtils
         .equals(fromURI.getAuthority(), toURI.getAuthority()))) {
-      String reason = "Move from: " + fromURI.getPath() + " to: "
-          + toURI.getPath() + " is not valid. "
+      String reason = "Move from: " + fromURI.toString() + " to: "
+          + toURI.toString() + " is not valid. "
           + "Please check that values for params \"default.fs.name\" and "
           + "\"hive.metastore.warehouse.dir\" do not conflict.";
       throw new SemanticException(ErrorMsg.ILLEGAL_PATH.getMsg(ast, reason));
@@ -236,7 +236,7 @@ public class LoadSemanticAnalyzer extends BaseSemanticAnalyzer {
       // that's just a test case.
       String copyURIStr = ctx.getExternalTmpFileURI(toURI);
       URI copyURI = URI.create(copyURIStr);
-      rTask = TaskFactory.get(new CopyWork(fromURI.getPath(), copyURIStr),
+      rTask = TaskFactory.get(new CopyWork(fromURI.toString(), copyURIStr),
           conf);
       fromURI = copyURI;
     }
@@ -266,7 +266,7 @@ public class LoadSemanticAnalyzer extends BaseSemanticAnalyzer {
     }
 
 
-    LoadTableDesc loadTableWork = new LoadTableDesc(fromURI.getPath(),
+    LoadTableDesc loadTableWork = new LoadTableDesc(fromURI.toString(),
         loadTmpPath, Utilities.getTableDesc(ts.tableHandle), partSpec, isOverWrite);
 
     Task<? extends Serializable> childTask = TaskFactory.get(new MoveWork(getInputs(),
diff --git a/src/ql/src/test/queries/clientpositive/load_file_with_space_in_the_name.q b/src/ql/src/test/queries/clientpositive/load_file_with_space_in_the_name.q
deleted file mode 100644
index 3b8951a..0000000
--- a/src/ql/src/test/queries/clientpositive/load_file_with_space_in_the_name.q
+++ /dev/null
@@ -1,5 +0,0 @@
--- test for loading into tables with the file with space in the name
-
-
-CREATE TABLE load_file_with_space_in_the_name(name STRING, age INT);
-LOAD DATA LOCAL INPATH '../data/files/person age.txt' INTO TABLE load_file_with_space_in_the_name;
diff --git a/src/ql/src/test/results/clientpositive/load_file_with_space_in_the_name.q.out b/src/ql/src/test/results/clientpositive/load_file_with_space_in_the_name.q.out
deleted file mode 100644
index b159114..0000000
--- a/src/ql/src/test/results/clientpositive/load_file_with_space_in_the_name.q.out
+++ /dev/null
@@ -1,17 +0,0 @@
-PREHOOK: query: -- test for loading into tables with the file with space in the name
-
-
-CREATE TABLE load_file_with_space_in_the_name(name STRING, age INT)
-PREHOOK: type: CREATETABLE
-POSTHOOK: query: -- test for loading into tables with the file with space in the name
-
-
-CREATE TABLE load_file_with_space_in_the_name(name STRING, age INT)
-POSTHOOK: type: CREATETABLE
-POSTHOOK: Output: default@load_file_with_space_in_the_name
-PREHOOK: query: LOAD DATA LOCAL INPATH '../data/files/person age.txt' INTO TABLE load_file_with_space_in_the_name
-PREHOOK: type: LOAD
-PREHOOK: Output: default@load_file_with_space_in_the_name
-POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/person age.txt' INTO TABLE load_file_with_space_in_the_name
-POSTHOOK: type: LOAD
-POSTHOOK: Output: default@load_file_with_space_in_the_name
-- 
1.7.0.4


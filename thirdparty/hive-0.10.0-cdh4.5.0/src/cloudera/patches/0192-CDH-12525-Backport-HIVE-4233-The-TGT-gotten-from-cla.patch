From da92f56871042877a2a7acc5a57c92ef4e00629a Mon Sep 17 00:00:00 2001
From: Prasad Mujumdar <prasadm@cloudera.com>
Date: Thu, 8 Aug 2013 01:12:42 -0700
Subject: [PATCH 192/218] CDH-12525: Backport HIVE-4233: The TGT gotten from class 'CLIService' should be renewed on time (Thejas M Nair via Gunther Hagleitner

---
 .../hive/metastore/RetryingMetaStoreClient.java    |   40 ++++++++++++++++++-
 .../apache/hadoop/hive/shims/Hadoop20Shims.java    |   13 ++++++-
 .../hadoop/hive/shims/HadoopShimsSecure.java       |   10 +++++
 .../org/apache/hadoop/hive/shims/HadoopShims.java  |    7 +++
 4 files changed, 66 insertions(+), 4 deletions(-)

diff --git a/src/metastore/src/java/org/apache/hadoop/hive/metastore/RetryingMetaStoreClient.java b/src/metastore/src/java/org/apache/hadoop/hive/metastore/RetryingMetaStoreClient.java
index 76b1989..5410b45 100644
--- a/src/metastore/src/java/org/apache/hadoop/hive/metastore/RetryingMetaStoreClient.java
+++ b/src/metastore/src/java/org/apache/hadoop/hive/metastore/RetryingMetaStoreClient.java
@@ -18,6 +18,7 @@
 
 package org.apache.hadoop.hive.metastore;
 
+import java.io.IOException;
 import java.lang.reflect.InvocationHandler;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
@@ -28,26 +29,36 @@ import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.metastore.api.MetaException;
+import org.apache.hadoop.hive.shims.ShimLoader;
 import org.apache.thrift.TApplicationException;
 import org.apache.thrift.TException;
 import org.apache.thrift.protocol.TProtocolException;
 import org.apache.thrift.transport.TTransportException;
 
+/**
+ * RetryingMetaStoreClient. Creates a proxy for a IMetaStoreClient
+ * implementation and retries calls to it on failure.
+ * If the login user is authenticated using keytab, it relogins user before
+ * each call.
+ *
+ */
 public class RetryingMetaStoreClient implements InvocationHandler {
 
   private static final Log LOG = LogFactory.getLog(RetryingMetaStoreClient.class.getName());
 
   private final IMetaStoreClient base;
-  private final HiveConf hiveConf;
   private final int retryLimit;
   private final int retryDelaySeconds;
 
+
+
   protected RetryingMetaStoreClient(HiveConf hiveConf, HiveMetaHookLoader hookLoader,
       Class<? extends IMetaStoreClient> msClientClass) throws MetaException {
-    this.hiveConf = hiveConf;
     this.retryLimit = hiveConf.getIntVar(HiveConf.ConfVars.METASTORETHRIFTFAILURERETRIES);
     this.retryDelaySeconds =
         hiveConf.getIntVar(HiveConf.ConfVars.METASTORE_CLIENT_CONNECT_RETRY_DELAY);
+
+    reloginExpiringKeytabUser();
     this.base = (IMetaStoreClient) MetaStoreUtils.newInstance(msClientClass, new Class[] {
         HiveConf.class, HiveMetaHookLoader.class}, new Object[] {hiveConf, hookLoader});
   }
@@ -71,6 +82,10 @@ public class RetryingMetaStoreClient implements InvocationHandler {
     TException caughtException = null;
     while (true) {
       try {
+        reloginExpiringKeytabUser();
+        if(retriesMade > 0){
+          base.reconnect();
+        }
         ret = method.invoke(base, args);
         break;
       } catch (UndeclaredThrowableException e) {
@@ -95,8 +110,27 @@ public class RetryingMetaStoreClient implements InvocationHandler {
       LOG.warn("MetaStoreClient lost connection. Attempting to reconnect.",
           caughtException);
       Thread.sleep(retryDelaySeconds * 1000);
-      base.reconnect();
     }
     return ret;
   }
+
+  /**
+   * Relogin if login user is logged in using keytab
+   * Relogin is actually done by ugi code only if sufficient time has passed
+   * A no-op if kerberos security is not enabled
+   * @throws MetaException
+   */
+  private void reloginExpiringKeytabUser() throws MetaException {
+    if(!ShimLoader.getHadoopShims().isSecurityEnabled()){
+      return;
+    }
+    try {
+      ShimLoader.getHadoopShims().reLoginUserFromKeytab();
+    } catch (IOException e) {
+      String msg = "Error doing relogin using keytab " + e.getMessage();
+      LOG.error(msg, e);
+      throw new MetaException(msg);
+    }
+  }
+
 }
diff --git a/src/shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java b/src/shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java
index 94ea0a7..299018a 100644
--- a/src/shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java
+++ b/src/shims/src/0.20/java/org/apache/hadoop/hive/shims/Hadoop20Shims.java
@@ -69,6 +69,7 @@ import org.apache.hadoop.security.UserGroupInformation;
 import org.apache.hadoop.tools.HadoopArchives;
 import org.apache.hadoop.util.Progressable;
 import org.apache.hadoop.util.ToolRunner;
+import org.apache.hadoop.util.VersionInfo;
 
 /**
  * Implemention of shims against Hadoop 0.20.0.
@@ -555,7 +556,17 @@ public class Hadoop20Shims implements HadoopShims {
 
   @Override
   public void loginUserFromKeytab(String principal, String keytabFile) throws IOException {
-    throw new UnsupportedOperationException("Kerberos login is not supported in current hadoop version");
+    throwKerberosUnsupportedError();
+  }
+
+  @Override
+  public void reLoginUserFromKeytab() throws IOException{
+    throwKerberosUnsupportedError();
+  }
+
+  private void throwKerberosUnsupportedError() throws UnsupportedOperationException{
+    throw new UnsupportedOperationException("Kerberos login is not supported" +
+        " in this hadoop version (" + VersionInfo.getVersion() + ")");
   }
 
   @Override
diff --git a/src/shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java b/src/shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java
index 7443163..4d2ec83 100644
--- a/src/shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java
+++ b/src/shims/src/common-secure/java/org/apache/hadoop/hive/shims/HadoopShimsSecure.java
@@ -619,6 +619,16 @@ public abstract class HadoopShimsSecure implements HadoopShims {
   }
 
   @Override
+  public void reLoginUserFromKeytab() throws IOException{
+    UserGroupInformation ugi = UserGroupInformation.getLoginUser();
+    //checkTGT calls ugi.relogin only after checking if it is close to tgt expiry
+    //hadoop relogin is actually done only every x minutes (x=10 in hadoop 1.x)
+    if(ugi.isFromKeytab()){
+      ugi.checkTGTAndReloginFromKeytab();
+    }
+  }
+
+  @Override
   abstract public JobTrackerState getJobTrackerState(ClusterStatus clusterStatus) throws Exception;
 
   @Override
diff --git a/src/shims/src/common/java/org/apache/hadoop/hive/shims/HadoopShims.java b/src/shims/src/common/java/org/apache/hadoop/hive/shims/HadoopShims.java
index b30d259..e46121f 100644
--- a/src/shims/src/common/java/org/apache/hadoop/hive/shims/HadoopShims.java
+++ b/src/shims/src/common/java/org/apache/hadoop/hive/shims/HadoopShims.java
@@ -322,6 +322,13 @@ public interface HadoopShims {
   public void loginUserFromKeytab(String principal, String keytabFile) throws IOException;
 
   /**
+   * Perform kerberos re-login using the given principal and keytab, to renew
+   * the credentials
+   * @throws IOException
+   */
+  public void reLoginUserFromKeytab() throws IOException;
+
+  /**
    * Create the proxy ugi for the given userid
    * @param userName
    * @return
-- 
1.7.0.4

